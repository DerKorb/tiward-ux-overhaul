(function(){"use strict";let ce=document.createElement("template");ce.innerHTML=`
    <style>
        :host {
            position: fixed;
            bottom: 0px;
        }
        #cards {
            display: flex;
            position: fixed;
            bottom: -242px;
            transition: bottom 0.5s;
        }
        .card {
            border-radius: 5px;
            margin: 5px;
            overflow: hidden;
        }
        .card img {
            width: 200px;
            height: 300px;
        }
        #cards:hover {
            bottom: 0;
        }
    </style>
    <div id="cards">
    </div>
`;class be extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(ce.content.cloneNode(!0)),this.cardsContainer=this.shadowRoot.getElementById("cards")}async connectedCallback(){const n=await import("https://www.twilightwars.com/js/api.js"),{onActionCardDoubleClick:e}=await import("https://www.twilightwars.com/js/events/action-card.js"),{playerActionCards:t}=await import("https://www.twilightwars.com/js/loaders/load-player-cards.js"),l=await n.getPlayer();console.log(l);const{actionCards:F,secretObjectives:m,promissoryNotes:b}=l;F.forEach(d=>{const f=document.createElement("div");f.ondblclick=()=>{const D=t.find(W=>W.userData.name===d.name);D&&(D.material.opacity=.3,D.scale.x=100,D.scale.y=100,D.visible=!0,setTimeout(()=>{e(),D.scale.x=1,D.scale.y=1,D.material.opacity=1,D.visible=!1},1))},f.className="card",this.cardsContainer.appendChild(f);const A=document.createElement("img");A.src=`/img/action-cards/${d.name}.png`,f.appendChild(A)}),m.forEach(d=>{const f=document.createElement("div");f.className="card",this.cardsContainer.appendChild(f);const A=document.createElement("img");A.src=`/img/objectives/${d.name}.png`,f.appendChild(A)}),b.filter(d=>d.color!==l.color).forEach(d=>{const f=document.createElement("div");f.className="card",this.cardsContainer.appendChild(f);const A=document.createElement("img");"faction"in d?A.src=`/img/faction/${d.faction}/${d.name}.png`:A.src=`/img/misc/${d.color}/${d.name}.png`,f.appendChild(A)})}}window.customElements.define("ti-cards-component",be);const ye={Alpha:"red",Beta:"blue",Delta:"green"},we={red:"rgba(255, 0, 0, 1.0)",blue:"rgba(0, 0, 255, 1.0)",green:"rgba(0, 255, 0, 1.0)",yellow:"rgba(255, 255, 0, 1.0)",purple:"rgba(255, 0, 255, 1.0)",black:"rgba(0, 0, 0, 1.0)",orange:"rgba(255, 165, 0, 1.0)"},ie={red:"rgba(255, 150, 150, 1)",blue:"rgba(150, 150, 255, 1)",green:"rgba(150, 255, 150, 1)",yellow:"rgba(255, 255, 0, 1)",purple:"rgba(255, 150, 255, 1)",orange:"rgba(255, 150, 0, 1)",white:"white"},ke={Alpha:"♻️",Beta:"🌀",Delta:"🔴",Yellow:"🟡"},De="rgba(0, 0, 0, 0.8)",le=[[],[{position:[160,290]}],[{position:[120,20]},{position:[160,380]}],[{position:[150,270]},{position:[190,10]},{position:[200,380]}]];async function Te(){const Z=await import("https://www.twilightwars.com/js/api.js"),{skeletonHexArray:n}=await import("https://www.twilightwars.com/js/board-creation.js"),e=await Z.getBoardSystems();globalThis.boardSystems=e;const t=await Z.getPlayers(),l=await Z.getGame(),F=new Image;F.src="data:image/png;base64,"+Ce,await new Promise(m=>{F.onload=m}),e.forEach(async m=>{var d,f,A,D;const b=m.number===51?n[n.length-1]:n[m.position];await Se(t,l,m,F,b),(d=b.userData.boardTokens)==null||d.controlTokens.forEach(W=>{W.visible=!1}),(f=b.userData.boardTokens)==null||f.infantry.forEach(W=>{W.visible=!1}),(A=b.userData.boardTokens)==null||A.pds.forEach(W=>{W.visible=!1}),(D=b.userData.boardTokens)==null||D.spaceDock.forEach(W=>{W.visible=!1}),b.material.map.needsUpdate=!0,b.material.needsUpdate=!0})}const Ce="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";async function Se(Z,n,e,t,l){var Y,ee,ne,Q;const{CanvasTexture:F,Mesh:m,MeshBasicMaterial:b}=await import("https://www.twilightwars.com/js/vendor/three/build/three.module.js"),{createHexagonGeometry:d}=await import("https://www.twilightwars.com/js/utils/geometries.js"),f=document.createElement("canvas"),A=f.getContext("2d"),D=25;f.width=512,f.height=512;const W=(Y=e.units)==null?void 0:Y[0],G=W?we[W.color]:null;G&&(A.fillStyle=G,A.fillRect(0,0,f.width,f.height),A.globalCompositeOperation="destination-in",A.drawImage(t,-f.width*.1,-f.height*.1,f.width*1.2,f.height*1.2),A.globalCompositeOperation="source-over");function I(w,U,P,E,x="white",N=!1,R){A.font=`bold ${w}px Arial`;const L=A.measureText(U).width,z=P-L/2;A.fillStyle=x,A.fillText(U,N?z:P,E),R&&(A.strokeStyle=R,A.lineWidth=2,A.strokeText(U,N?z:P,E))}function $(w,U,P,E,x,N="white"){A.beginPath(),A.moveTo(w+x,U),A.lineTo(w+P-x,U),A.quadraticCurveTo(w+P,U,w+P,U+x),A.lineTo(w+P,U+E-x),A.quadraticCurveTo(w+P,U+E,w+P-x,U+E),A.lineTo(w+x,U+E),A.quadraticCurveTo(w,U+E,w,U+E-x),A.lineTo(w,U+x),A.quadraticCurveTo(w,U,w+x,U),A.closePath(),A.fillStyle=N,A.fill()}if(e.anomaly&&I(D*1.5,e.anomaly,256,50,"white",!0),e.wormhole&&I(D*3.5,ke[e.wormhole]??e.wormhole,256,500,ye[e.wormhole],!0),e.isHomeSystem){const w=Z.find(E=>E.faction===e.faction),U=w==null?void 0:w.strategyCards.map(E=>E.exhausted?E.number:E.number+"!"),P=n.turn.player.current===(w==null?void 0:w.number);I(D*5,(U==null?void 0:U.join(" "))??"",256,240,P?"red":"white",!0)}const V=Z.reduce((w,U)=>(w[U.faction]=U.color,w),{});e.commandTokens&&e.commandTokens.forEach((w,U)=>{const P=V[w];A.lineWidth=20,A.beginPath();const E=2*Math.PI/6*U,x=256+226*Math.cos(E),N=256+266*Math.sin(E),R=256+226*Math.cos(E+2*Math.PI/6),L=256+266*Math.sin(E+2*Math.PI/6);A.moveTo(x,N),A.lineTo(R,L),A.strokeStyle=P,A.stroke()});for(let w=0;w<6;w++){const U=G??"black";A.lineWidth=5,A.beginPath();const P=2*Math.PI/6*w,E=256+256*Math.cos(P),x=256+296*Math.sin(P),N=256+256*Math.cos(P+2*Math.PI/6),R=256+296*Math.sin(P+2*Math.PI/6);A.moveTo(E,x),A.lineTo(N,R),A.strokeStyle=U,A.stroke()}if(e.planets){let w=0;for(const U of e.planets)_(U,w++)}const O=new F(f);console.log(l);const X=d(.9),ae=new b({map:O});new m(X,ae),l.userData.canvasTexture=O,l.material.onBeforeCompile=function(w){w.uniforms.canvasTexture={value:O},w.fragmentShader=`
        uniform sampler2D canvasTexture;
      `+w.fragmentShader,w.fragmentShader=w.fragmentShader.replace("gl_FragColor = vec4( outgoingLight, diffuseColor.a );",`
        vec4 tex1Color = texture2D( map, vUv );
        vec4 canvasColor = texture2D( canvasTexture, vUv );
        gl_FragColor = vec4(canvasColor.a * canvasColor.rgb + tex1Color.rgb * (1.0 - canvasColor.a), 1.0);
        `)};function _(w,U){const P=le[e.planets.length][U].position[0],E=le[e.planets.length][U].position[1],x=Z.find(s=>s.planetCards.find(o=>o.name===w.name));function N(s,o,i){const u=x?ie[x.color]:"white";A.fillStyle="white",s.filter(c=>c.name==="PDS").forEach((c,p)=>{I(D,"🛡",o+10+p*30,i-25,u)}),s.filter(c=>c.name==="Space Dock").forEach((c,p)=>{I(D,"🏗",o+10+p*30,i,u)});const g=s.some(c=>c.name==="Infantry"&&c.upgraded);I(D,`🥆${g?"+":""}`,o+82,i+35,u),A.font=`bold ${D*2}px Arial`,I(D*2,s.filter(c=>c.name==="Infantry").length.toString(),o+95,i,u,!0)}const R=x?x.planetCards.find(s=>s.name===w.name):null;R!=null&&R.faction&&console.log(R);const L=`${w.resources}/${w.influence}`;let z,q="";switch(w.tech){case"Warfare":q="🔴";break;case"Biotic":q="🟢";break;case"Cybernetic":z="white",q="🟡";break;case"Propulsion":z="white",q="🔵";break}A.font=`bold ${D}px Arial`;const a=A.measureText(L).width;let r="";if(a>0){switch(w.trait){case"Hazardous":A.fillStyle="red",r="☢️";break;case"Industrial":A.fillStyle="green",r="🏭";break;case"Cultural":A.fillStyle="blue",r="🎭";break;default:A.fillStyle="white"}A.fillStyle=z??"white";const s=x?V[x.faction]:"white";A.font=`bold ${D*2}px Arial`,$(P,E,200,100,10,De),w.units&&N(w.units,P+80,E+50),I(D*2,L,P+10,E+50,ie[s]),R!=null&&R.exhausted&&(A.lineWidth=5,A.beginPath(),A.moveTo(P+25-a/2,E+30),A.lineTo(P+25+a*1.5,E+30),A.strokeStyle=ie[s],A.stroke()),I(D*.9,w.name+q+r,P+10,E+85,ie[s])}}if(e.units){const w=((ee=e.units[0])==null?void 0:ee.color)??"white",U=e.units.filter(L=>L.name==="Fighter"&&L.color===w).length,P=e.units.filter(L=>L.name==="Infantry"&&L.color===w).length,E=e.units.filter(L=>L.name==="Fighter"&&L.color!==w).length,x=e.units.filter(L=>L.name==="Infantry"&&L.color!==w).length;A.font=`bold ${D*2}px Arial`;const N=((ne=e.units[0])==null?void 0:ne.color)??"white",R=(Q=e.units.find(L=>L.color!==w))==null?void 0:Q.color;U+U>0&&(E>0?I(D*3,E.toFixed(0),90,231,N,!0,R):I(D*3,"🛦",90,231,N,!0,"white"),I(D*3,U.toFixed(0),90,331,N,!0,"white")),P+x>0&&(x>0?I(D*3,x.toFixed(0),410,231,N,!0,R):I(D*3,"🥆",410,231,N,!0,"white"),I(D*3,P.toFixed(0),410,331,N,!0,"white"))}}function Fe(Z){throw new Error('Could not dynamically require "'+Z+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var ue={},se={},Ae;function Be(){return Ae||(Ae=1,function(Z){(function(n){n.createMatrix=function(e,t,l){for(var F=new Array(e),m=0;m<e;m++)F[m]=new Array(t),l!==void 0&&F[m].fill(l);return F.rows=e,F.columns=t,F},n.Problem=function(e,t,l){this.distribution=e,this.attacker=t,this.defender=l},n.DistributionBase=function(e,t){this.min=e,this.max=t},n.DistributionBase.prototype.at=function(e){return this[e]||0},n.DistributionBase.prototype.toString=function(){if(this.min===void 0||this.max===void 0)return"no stats";var e="Min: "+this.min+", Max: "+this.max+". ",t=0;e+="[";for(var l=Math.min(this.min,-1);l<=Math.max(this.max,1);++l)l===0&&(e+="| "),e+=F(this.at(l),3)+" ",t+=this.at(l),l===0&&(e+="| ");return e+="]",e+=" "+F(t,3),e+=". "+F(this.downTo(-1),3)+":"+F(this.downTo(1),3),e;function F(m,b){var d=Math.pow(10,b);return Math.round(m*d)/d}},n.DistributionBase.prototype.downTo=function(e){if(e===0)return this.at(e);var t=0;if(e<0)for(var l=this.min;l<=e;l++)t+=this.at(l);else for(var l=e;l<=this.max;l++)t+=this.at(l);return t},n.EmpiricalDistribution=function(){},n.EmpiricalDistribution.prototype=Object.create(n.DistributionBase.prototype),n.EmpiricalDistribution.prototype.increment=function(e){this[e]=this.at(e)+1,this.min===void 0?this.min=e:e<this.min&&(this.min=e),this.max===void 0?this.max=e:this.max<e&&(this.max=e)},n.EmpiricalDistribution.prototype.normalize=function(){for(var e=0,t=this.min;t<=this.max;++t)e+=this.at(t);if(e!==0)for(var t=this.min;t<=this.max;++t)this[t]=this.at(t)/e},n.EnsembleSplit=function(e){this.subproblems={},this.parentProblem=e},n.EnsembleSplit.prototype.increment=function(e,t,l,F,m){if(m!==0){e=e.collapseRanges(l),t=t.collapseRanges(F);var b=this._subproblemKey(e,t);this.subproblems[b]||(this.subproblems[b]=this._problemFactory(e,t)),this.subproblems[b].distribution[l-e.dead()][F-t.dead()]+=m}},n.EnsembleSplit.prototype.getSubproblems=function(){var e=this.subproblems;return Object.keys(this.subproblems).map(function(t){return e[t]})},n.EnsembleSplit.prototype._problemFactory=function(e,t){var l=e.rangesLength(),F=t.rangesLength(),m=n.createMatrix(this.parentProblem.distribution.rows-l,this.parentProblem.distribution.columns-F,0),b=f(this.parentProblem.attacker,e.ranges),d=f(this.parentProblem.defender,t.ranges);return new n.Problem(m,b,d);function f(A,D){for(var W=!0,G=0;G<D.length/2;++G)if(!isNaN(D[G*2])){W=!1;break}if(W)return A;for(var I=A.slice(),G=D.length/2-1;0<=G;--G)isNaN(D[G*2])||I.splice(D[G*2],D[G*2+1]-D[G*2]||1);return I}},n.EnsembleSplit.prototype._subproblemKey=function(e,t){return"a"+e.rangesKey()+"d"+t.rangesKey()},n.Victim=function(){this.ranges=[]},n.Victim.prototype.addRange=function(e,t){var l=this.ranges;if(!isNaN(e)&&e!==t){if(l.length){if(l[l.length-1]===e){l[l.length-1]=t===void 0?e+1:t;return}if(l[l.length-1]===void 0&&l[l.length-2]+1===e){t===void 0?l[l.length-1]=e+1:l[l.length-1]=t;return}}e+1===t?this.ranges.push(e,void 0):this.ranges.push(e,t)}},n.Victim.prototype.rangesLength=function(){for(var e=0,t=0;t<this.ranges.length/2;++t)e+=l(this.ranges,t);return e;function l(F,m){var b=m*2;return isNaN(F[b])?0:isNaN(F[b+1])?1:F[b+1]-F[b]}},n.Victim.prototype.dead=function(){return this._dead!==void 0?this._dead:this.rangesLength()},n.Victim.prototype.collapseRanges=function(e){var t=this.ranges;if(t.length&&(t[t.length-1]===e||t[t.length-1]===void 0&&t[t.length-2]+1===e)){var l;return l=new n.Victim,l.ranges=t.slice(0,t.length-2),l._dead=this.rangesLength(),l}return this},n.Victim.prototype.rangesKey=function(){for(var e=[],t=0;t<this.ranges.length/2;++t)e.push(this.ranges[t*2]+(this.ranges[t*2+1]===void 0?"":"-"+this.ranges[t*2+1]));return e.join(",")},n.Victim.Null=new n.Victim,n.binarySearch=function(e,t,l){for(var F=0,m=e.length-1;F<=m;){var b=m+F>>1,d=l(t,e[b]);if(d>0)F=b+1;else if(d<0)m=b-1;else return b}return-F-1}})(Z)}(se)),se}var oe={},de;function Ue(){return de||(de=1,function(Z){(function(n){n.dieSides=10,n.BattleType={Space:"Space",Ground:"Ground"},n.BattleSide={attacker:"attacker",defender:"defender",opponent:function(m){return{attacker:"defender",defender:"attacker"}[m]}},n.SideUnits={attacker:"attackerUnits",defender:"defenderUnits"};var e={Flagship:"Flagship",WarSun:"WarSun",Dreadnought:"Dreadnought",Cruiser:"Cruiser",Carrier:"Carrier",Destroyer:"Destroyer",Fighter:"Fighter",Ground:"Ground",PDS:"PDS"};n.UnitType=e;var t={Flagship:"X",WarSun:"W",Dreadnought:"D",Cruiser:"C",Destroyer:"+",Carrier:"V",Fighter:"F",Ground:"G",PDS:"P"};n.Race={Arborec:"Arborec",Creuss:"Creuss",Hacan:"Hacan",JolNar:"JolNar",L1Z1X:"L1Z1X",Letnev:"Letnev",Mentak:"Mentak",Muaat:"Muaat",Naalu:"Naalu",Saar:"Saar",Sardakk:"Sardakk",Sol:"Sol",Virus:"Virus",Winnu:"Winnu",Xxcha:"Xxcha",Yin:"Yin",Yssaril:"Yssaril"},n.RacesDisplayNames={Arborec:"Arborec",Creuss:"Creuss",Hacan:"Hacan",JolNar:"Jol-Nar",L1Z1X:"L1Z1X",Letnev:"Letnev",Mentak:"Mentak",Muaat:"Muaat",Naalu:"Naalu",Virus:"Nekro Virus",Saar:"Saar",Sardakk:"Sardakk N'orr",Sol:"Sol",Winnu:"Winnu",Xxcha:"Xxcha",Yin:"Yin",Yssaril:"Yssaril"};function l(m,b,d){this.title=m,this.description=b,this.limitedTo=d}l.prototype.availableFor=function(m){return this.limitedTo===void 0||this.limitedTo===m},n.ActionCards={moraleBoost:new l("Morale Boost 1st round","+1 dice modifier to all units during the first battle round"),fireTeam:new l("Fire Team 1st round","Reroll dice after first round of invasion combat"),fighterPrototype:new l("Fighter Prototype","+2 dice modifier to Fighters during the first battle round"),bunker:new l("Bunker","-4 dice modifier to Bombardment rolls","defender"),experimentalBattlestation:new l("Experimental Battlestation","Additional unit with Space Cannon 5(x3)"),maneuveringJets:new l("Maneuvering Jets","Cancel 1 Space Cannon hit"),riskDirectHit:new l("Risk Direct Hit","Damage units vulnerable to Direct Hit before killing off fodder")},n.Technologies={antimassDeflectors:new l("Antimass Deflectors","-1 to opponents' Space Cannon rolls"),gravitonLaser:new l("Graviton Laser System","Space Cannon hits should be applied to non-fighters if possible"),plasmaScoring:new l("Plasma Scoring","One additional die for one unit during Space Cannon or Bombardment"),magenDefense:new l("Magen Defense Grid","Opponent doesn't throw dice for one round if you have Planetary Shield","defender"),x89Omega:new l("X-89 Bacterial Weapon Ω","Destroy all by bombardment if at least one destroyed","attacker"),magenDefenseOmega:new l("Magen Defense Grid Ω","1 hit at the start of ground combat when having structures","defender"),hasDock:new l("Has Dock","Defender has a dock for Magen Defence Grid Ω","defender"),duraniumArmor:new l("Duranium Armor","After each round repair 1 unit that wasn't damaged this round"),assaultCannon:new l("Assault Cannon","Opponent destroys 1 non-Fighter ship if you have at least 3 non-Fighters")},n.Agendas={publicizeSchematics:new l("Publicize Weapon Schematics","WarSuns don't sustain damage"),conventionsOfWar:new l("Conventions of War","No bombardment","defender"),prophecyOfIxth:new l("Prophecy of IXTH","+1 to Fighters rolls")},n.Promissory={letnevMunitionsFunding:new l("Munitions Reserves / War Funding 1st round","Reroll dice during first space combat round"),tekklarLegion:new l("Tekklar Legion","+1 in invasion combat. -1 to Sardakk if he's the opponent")},n.RaceSpecificTechnologies={Letnev:{nonEuclidean:new l("Non-Euclidean Shielding","Sustain Damage absorbs 2 hits"),l4Disruptors:new l("L4 Disruptors","During an Invasion units cannot use Space Cannon against you","attacker")},Sardakk:{valkyrieParticleWeave:new l("Valkyrie Particle Weave","If opponent produces at least one hit in Ground combat, you produce one additional hit")}},n.UnitInfo=function(){function m(b,d){this.type=b;var f=t[this.type];this.shortType=d.isDamageGhost?f.toLowerCase():f,this.battleValue=d.battleValue||NaN,this.battleDice=d.battleDice!==void 0?d.battleDice:1,this.bombardmentValue=d.bombardmentValue||NaN,this.bombardmentDice=d.bombardmentDice||0,this.spaceCannonValue=d.spaceCannonValue||NaN,this.spaceCannonDice=d.spaceCannonDice||0,this.barrageValue=d.barrageValue||NaN,this.barrageDice=d.barrageDice||0,this.sustainDamageHits=d.sustainDamageHits||0,this.isDamageGhost=d.isDamageGhost||!1,this.damageCorporeal=void 0,this.damaged=!1,this.damagedThisRound=!1,this.race=d.race,this.cost=d.cost}return m.prototype.clone=function(){return new m(this.type,this)},m.prototype.toDamageGhost=function(){var b=new m(this.type,{sustainDamageHits:this.sustainDamageHits,battleDice:0,isDamageGhost:!0});return b.damageCorporeal=this,this.damaged=!1,this.damagedThisRound=!1,b},m}(),n.ThrowType={Battle:"battle",Bombardment:"bombardment",SpaceCannon:"spaceCannon",Barrage:"barrage"},n.ThrowValues={battle:"battleValue",bombardment:"bombardmentValue",spaceCannon:"spaceCannonValue",barrage:"barrageValue"},n.ThrowDice={battle:"battleDice",bombardment:"bombardmentDice",spaceCannon:"spaceCannonDice",barrage:"barrageDice"},n.StandardUnits={WarSun:new n.UnitInfo(e.WarSun,{sustainDamageHits:1,battleValue:3,battleDice:3,bombardmentValue:3,bombardmentDice:3,cost:12}),Dreadnought:new n.UnitInfo(e.Dreadnought,{sustainDamageHits:1,battleValue:5,bombardmentValue:5,bombardmentDice:1,cost:4}),Cruiser:new n.UnitInfo(e.Cruiser,{battleValue:7,cost:2}),Carrier:new n.UnitInfo(e.Carrier,{battleValue:9,cost:3}),Destroyer:new n.UnitInfo(e.Destroyer,{battleValue:9,barrageValue:9,barrageDice:2,cost:1}),Fighter:new n.UnitInfo(e.Fighter,{battleValue:9,cost:.5}),PDS:new n.UnitInfo(e.PDS,{spaceCannonValue:6,spaceCannonDice:1}),Ground:new n.UnitInfo(e.Ground,{battleValue:8,cost:.5}),ExperimentalBattlestation:new n.UnitInfo("Bloodthirsty Space Dock",{spaceCannonValue:5,spaceCannonDice:3})},n.RaceSpecificUnits={Sardakk:{Flagship:new n.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:6,battleDice:2,race:n.Race.Sardakk,cost:8}),Dreadnought:new n.UnitInfo(e.Dreadnought,{sustainDamageHits:1,battleValue:5,bombardmentValue:4,bombardmentDice:2,cost:4})},JolNar:{Flagship:new n.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:6,battleDice:2,race:n.Race.JolNar,cost:8})},Winnu:{Flagship:new n.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:7,battleDice:void 0,race:n.Race.Winnu,cost:8})},Xxcha:{Flagship:new n.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:7,battleDice:2,spaceCannonValue:5,spaceCannonDice:3,race:n.Race.Xxcha,cost:8})},Yin:{Flagship:new n.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:9,battleDice:2,race:n.Race.Yin,cost:8})},Yssaril:{Flagship:new n.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,race:n.Race.Yssaril,cost:8})},Sol:{Flagship:new n.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,race:n.Race.Sol,cost:8}),Ground:new n.UnitInfo(e.Ground,{battleValue:7,cost:.5})},Creuss:{Flagship:new n.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:1,race:n.Race.Creuss,cost:8})},L1Z1X:{Flagship:new n.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,race:n.Race.L1Z1X,cost:8})},Mentak:{Flagship:new n.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:7,battleDice:2,race:n.Race.Mentak,cost:8})},Naalu:{Flagship:new n.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:9,battleDice:2,race:n.Race.Naalu,cost:8}),Fighter:new n.UnitInfo(e.Fighter,{battleValue:8,cost:.5})},Virus:{Flagship:new n.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:9,battleDice:2,race:n.Race.Virus,cost:8})},Arborec:{Flagship:new n.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:7,battleDice:2,race:n.Race.Arborec,cost:8})},Letnev:{Flagship:new n.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,bombardmentValue:5,bombardmentDice:3,race:n.Race.Letnev,cost:8})},Saar:{Flagship:new n.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,barrageValue:6,barrageDice:4,race:n.Race.Saar,cost:8})},Muaat:{Flagship:new n.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,race:n.Race.Muaat,cost:8})},Hacan:{Flagship:new n.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:7,battleDice:2,race:n.Race.Hacan,cost:8})}},n.StandardUpgrades={Dreadnought:new n.UnitInfo(e.Dreadnought,{sustainDamageHits:1,battleValue:5,bombardmentValue:5,bombardmentDice:1,cost:4}),Cruiser:new n.UnitInfo(e.Cruiser,{battleValue:6,cost:2}),Destroyer:new n.UnitInfo(e.Destroyer,{battleValue:8,barrageValue:6,barrageDice:3,cost:1}),Fighter:new n.UnitInfo(e.Fighter,{battleValue:8,cost:.5}),PDS:new n.UnitInfo(e.PDS,{spaceCannonValue:5,spaceCannonDice:1}),Ground:new n.UnitInfo(e.Ground,{battleValue:7,cost:.5})},n.RaceSpecificUpgrades={Sol:{Carrier:new n.UnitInfo(e.Carrier,{sustainDamageHits:1,battleValue:9,cost:3}),Ground:new n.UnitInfo(e.Ground,{battleValue:6,cost:.5})},L1Z1X:{Dreadnought:new n.UnitInfo(e.Dreadnought,{sustainDamageHits:1,battleValue:4,bombardmentValue:4,bombardmentDice:1,cost:4})},Naalu:{Fighter:new n.UnitInfo(e.Fighter,{battleValue:7,cost:.5})},Muaat:{WarSun:new n.UnitInfo(e.WarSun,{sustainDamageHits:1,battleValue:3,battleDice:3,bombardmentValue:3,bombardmentDice:3,cost:10})}},n.MergedUnits={},n.MergedUpgrades={};for(var F in n.Race)n.MergedUnits[F]=Object.assign({},n.StandardUnits,n.RaceSpecificUnits[F]),n.MergedUpgrades[F]=Object.assign({},n.StandardUpgrades,n.RaceSpecificUpgrades[F]);n.expandFleet=function(m,b){var d=m.options||{attacker:{},defender:{}},f=m.battleType,A=d[b],D=n.BattleSide.opponent(b),W=d[D],G=n.MergedUnits[A.race],I=n.MergedUpgrades[A.race],$=f===n.BattleType.Space&&W.race===n.Race.Mentak&&(m[n.SideUnits[D]][e.Flagship]||{count:0}).count!==0,V=[],O=m[n.SideUnits[b]];for(var X in e)for(var ae=O[X]||{count:0},_=0;_<ae.count;_++){var Y=(ae.upgraded?I:G)[X],ee=Y.clone();V.push(ee),Y.sustainDamageHits>0&&!$&&!(X===e.WarSun&&A.publicizeSchematics)&&(_<ae.count-(ae.damaged||0)?V.push(ee.toDamageGhost()):ee.damaged=!0)}var ne=N(),Q=f===n.BattleType.Space&&A.race===n.Race.Virus&&(O[e.Flagship]||{count:0}).count!==0,w=f===n.BattleType.Ground&&A.race===n.Race.Naalu&&(O[e.Flagship]||{count:0}).count!==0,U=R(Q),P={};P[e.Ground]=1,P[e.Fighter]=2;var E,x;return w?(x=(O[e.Fighter]||{}).upgraded&&!(O[e.Ground]||{}).upgraded&&V.find(function(r){return r.type===e.Ground}),E=q):(O[e.Dreadnought]||{}).upgraded?E=z:E=L,V.sort(E),f===n.BattleType.Space&&A.experimentalBattlestation&&V.push(n.StandardUnits.ExperimentalBattlestation),V.comparer=E,V.filterForBattle=a,V;function N(){return[e.Flagship,e.WarSun,e.Dreadnought,e.Cruiser,e.Destroyer,e.Carrier,e.Fighter]}function R(r){var s=[],o=0;for(var i in e)s[i]=o++;if(r){var u=s[e.Ground];s[e.Ground]=s[e.Fighter],s[e.Fighter]=u}return s}function L(r,s){var o=U[r.type]-U[s.type],i=(r.isDamageGhost?1:0)-(s.isDamageGhost?1:0),u=(s.damaged?1:0)-(r.damaged?1:0);if(A.riskDirectHit){var g=i*1e3+o*10+u;return A.race!==n.Race.Letnev?g:r.type===e.Flagship&&r.isDamageGhost?s.type===e.Flagship&&s.isDamageGhost?0:1:s.type===e.Flagship&&s.isDamageGhost?-1:g}else return o*1e3+i*10+u}function z(r,s){return A.riskDirectHit?L(r,s):r.type===e.Dreadnought&&r.isDamageGhost?s.type===e.Dreadnought&&s.isDamageGhost?0:1:s.type===e.Dreadnought&&s.isDamageGhost?-1:L(r,s)}function q(r,s){var o=P[r.type]-P[s.type];return x?r===x?-1:s===x?1:-o:o}function a(){var r=this.filter(function(s){return f===n.BattleType.Space?ne.indexOf(s.type)>=0||Q&&s.type===n.UnitType.Ground:s.type===e.Ground||w&&s.type===n.UnitType.Fighter});return r.comparer=this.comparer,r}},n.upgradeable=function(m,b){return!!(n.StandardUpgrades.hasOwnProperty(b)||n.RaceSpecificUpgrades[m]&&n.RaceSpecificUpgrades[m].hasOwnProperty(b))},n.damageable=function(m,b,d){return(d?n.MergedUpgrades:n.MergedUnits)[m][b].sustainDamageHits>0}})(Z)}(oe)),oe}(function(Z){(function(n){var e,t;typeof Fe=="function"?(e=Be(),t=Ue()):(e=window,t=window),n.calculator=function(){var l=ae(),F=O();return{computeProbabilities:m};function m(a){var r=a.battleType,s=a.options||{attacker:{},defender:{}},o=t.expandFleet(a,t.BattleSide.attacker),i=t.expandFleet(a,t.BattleSide.defender),u=o.filterForBattle(),g=i.filterForBattle(),c=e.createMatrix(u.length+1,g.length+1,0);c[u.length][g.length]=1;var p=[new e.Problem(c,u,g)],v=F;if(s.attacker.race===t.Race.Mentak){v=F.slice();var h=v[1];if(v[1]=v[2],v[2]=h,v[1].name!=="Mentak racial"||v[2].name!=="Assault Cannon")throw new Error("unexpected pre-battle actions order")}v.forEach(function(y){y.appliesTo===r&&(p=y.execute(p,o,i,s))});for(var C=0;C<p.length;++C)p[C].attacker.length&&p[C].defender.length&&b(p[C],r,o,i,s);var k=new e.DistributionBase(-u.length,g.length),S=u.map(function(y){return[y.shortType]}),B=g.map(function(y){return[y.shortType]});return p.forEach(function(y){k[0]=k.at(0)+y.distribution[0][0];for(var T=1;T<y.distribution.rows;T++)k[-T]=k.at(-T)+y.distribution[T][0],S[T-1].indexOf(y.attacker[T-1].shortType)<0&&S[T-1].push(y.attacker[T-1].shortType);for(var M=1;M<y.distribution.columns;M++)k[M]=k.at(M)+y.distribution[0][M],B[M-1].indexOf(y.defender[M-1].shortType)<0&&B[M-1].push(y.defender[M-1].shortType)}),{distribution:k,attacker:S.map(function(y){return y.reduce(function(T,M){return T+M})}),defender:B.map(function(y){return y.reduce(function(T,M){return T+M})})}}function b(a,r,s,o,i){var u=X(r,i.attacker,i.defender,a.attacker,!0),g=X(r,i.defender,i.attacker,a.defender,!0),c=r===t.BattleType.Ground&&i.attacker.fireTeam||r===t.BattleType.Space&&i.attacker.letnevMunitionsFunding,p=r===t.BattleType.Ground&&i.defender.fireTeam||r===t.BattleType.Space&&i.defender.letnevMunitionsFunding,v=r===t.BattleType.Ground&&i.defender.magenDefense&&o.some(R(t.UnitType.PDS))&&!s.some(R(t.UnitType.WarSun)),h={valkyrieParticleWeave:r===t.BattleType.Ground,winnuFlagship:r===t.BattleType.Space};if(r===t.BattleType.Ground&&i.defender.magenDefenseOmega&&(i.defender.hasDock||o.some(R(t.UnitType.PDS)))){var C=Y([1],a.attacker.length+1),k=Y([0,1],a.defender.length);k.unshift([1]),V(a,C,k,i)}if(u!==void 0||g!==void 0||v||c||p){var S;v?S=function(){return Y([1],a.attacker.length+1)}:S=function(){return f(a.attacker,t.ThrowType.Battle,u,c)};var B=function(){return f(a.defender,t.ThrowType.Battle,g,p)};if(i.attacker.race===t.Race.L1Z1X&&r===t.BattleType.Ground){var y=a.distribution[0];a.distribution[0]=new Array(a.distribution.columns),a.distribution[0].fill(0),V(a,S,B,i,h),F.find(function(M){return M.name==="Bombardment"}).execute([a],s,o,i);for(var T=0;T<a.distribution.columns;++T)a.distribution[0][T]+=y[T]}else V(a,S,B,i,h);r===t.BattleType.Space&&N(a,i)}if(v&&(u!==void 0||c)){var S=function(){return f(a.attacker,t.ThrowType.Battle,u,c)},B=function(){return f(a.defender,t.ThrowType.Battle,X(r,i.defender,i.attacker,a.defender,!1))};V(a,S,B,i,h)}d(a,r,s,o,i)}function d(a,r,s,o,i){var u=a.distribution,g=f(a.attacker,t.ThrowType.Battle,X(r,i.attacker,i.defender,a.attacker,!1)),c=f(a.defender,t.ThrowType.Battle,X(r,i.defender,i.attacker,a.defender,!1));if(i.attacker.race===t.Race.L1Z1X&&r===t.BattleType.Ground){var p=ee(s,o,i);p.length===1&&(p=void 0)}else var p=void 0;for(var v=r===t.BattleType.Space&&(i.attacker.race===t.Race.Winnu&&a.attacker.some(R(t.UnitType.Flagship))||i.defender.race===t.Race.Winnu&&a.defender.some(R(t.UnitType.Flagship))),h=i.attacker.race===t.Race.Yin?q(a.attacker,R(t.UnitType.Flagship))+1:0,C=i.defender.race===t.Race.Yin?q(a.defender,R(t.UnitType.Flagship))+1:0,k=u.rows-1;0<k;k--)for(var S=u.columns-1;0<S;S--){v&&(i.attacker.race===t.Race.Winnu&&x(a.attacker,a.defender,S)&&(g=f(a.attacker,t.ThrowType.Battle,X(r,i.attacker,i.defender,a.attacker,!1))),i.defender.race===t.Race.Winnu&&x(a.defender,a.attacker,k)&&(c=f(a.defender,t.ThrowType.Battle,X(r,i.defender,i.attacker,a.defender,!1))));var B=Q(g[k],a.defender,S-1,i.defender),y=Q(c[S],a.attacker,k-1,i.attacker),T=G(B,y,S+1,k+1);r===t.BattleType.Ground&&(T=w(T,i,S+1,k+1)),p&&(T=$(T,p,S+1,k+1));var M;if(u[k][S]!==0){M=u[k][S]/(1-T.at(0,0));for(var H=0;H<T.rows;H++)for(var j=0;j<T.columns&&j<=k;j++)if(!(H===0&&j===0)){var J=k-j,te=S-H;(J<h||te<C)&&(J=te=0),u[J][te]+=T.at(H,j)*M}u[k][S]=0}}}function f(a,r,s,o){s=s||0;for(var i=[[1]],u=1;u<=a.length;++u){var g=a[u-1],c=D(g,r,s,o);i.push(W(c,i[u-1]))}return i}function A(a,r,s,o){for(var i=[[1]],u=[[1]],g=0;g<a.length;g++){var c=a[g];if(s(c)){var p=D(c,r,o);u=W(u,p)}i.push(u)}return i}function D(a,r,s,o){var i=a[t.ThrowValues[r]],u=a[t.ThrowDice[r]];if(u===0)return[1];s=s||0;var g=typeof s=="function"?s:function(T){return s},c=[],p=Math.max(Math.min((i-1-g(a))/t.dieSides,1),0);if(a.type===t.UnitType.Flagship&&a.race===t.Race.JolNar&&r===t.ThrowType.Battle){var v=1-p,h=Math.min(.8,p),C=Math.max(0,v-.2),k=Math.max(0,.2-v),S=Math.min(.2,v);c[0]=h*(o?h:1),c[1]=C+(o?p*C:0),c[2]=k+(o?p*k:0),c[3]=S+(o?p*S:0)}else c[0]=p,o&&(c[0]=c[0]*c[0]),c[1]=1-c[0];for(var B=c,y=1;y<u;y++)B=W(B,c);return B}function W(a,r){for(var s=[],o=0;o<a.length+r.length-1;++o)s[o]=0;for(var i=0;i<a.length;++i)for(var u=0;u<r.length;++u)s[i+u]+=a[i]*r[u];return s}function G(a,r,s,o){return{rows:Math.min(s,a.length),columns:Math.min(o,r.length),at:function(i,u){var g=a[i];if(i===s-1)for(;++i<a.length;)g+=a[i];var c=r[u];if(u===o-1)for(;++u<r.length;)c+=r[u];return g*c}}}function I(a,r){return{rows:a.length,columns:r.length,at:function(s,o){return a[s]*r[o]}}}function $(a,r,s,o){return!r||r.length===1?a:U({rows:a.rows+r.length-1,columns:a.columns,at:function(i,u){for(var g=0,c=0;c<=i&&c<r.length;++c)if(i-c<a.rows){var p=r[c];g+=p*a.at(i-c,u)}return g}},s,o)}function V(a,r,s,o,i){var u=a.distribution;i&&!(i.winnuFlagship&&o.attacker.race===t.Race.Winnu)&&(r=r()),i&&!(i.winnuFlagship&&o.defender.race===t.Race.Winnu)&&(s=s()),i=i||{};for(var g=0;g<u.rows;g++)for(var c=0;c<u.columns;c++)if(u[g][c]!==0){var p=r,v=s;i.winnuFlagship&&(o.attacker.race===t.Race.Winnu&&(x(a.attacker,a.defender,c),p=r()),o.defender.race===t.Race.Winnu&&(x(a.defender,a.attacker,g),v=s()));var h=Q(p[g],a.defender,c-1,o.defender),C=Q(v[c],a.attacker,g-1,o.attacker),k=G(h,C,c+1,g+1);i.valkyrieParticleWeave&&(k=w(k,o,c+1,g+1));for(var S=0;S<k.rows;S++)for(var B=0;B<k.columns;B++)S===0&&B===0||(u[g-B][c-S]+=k.at(S,B)*u[g][c]);u[g][c]*=k.at(0,0)}}function O(){return[{name:"Space Cannon -> Ships",appliesTo:t.BattleType.Space,execute:function(a,r,s,o){var i=[],u=o.attacker.race===t.Race.Virus&&r.some(R(t.UnitType.Flagship))&&r.some(R(t.UnitType.Ground)),g=o.defender.race===t.Race.Virus&&s.some(R(t.UnitType.Flagship))&&s.some(R(t.UnitType.Ground));return a.forEach(function(h){var C=c(r,o.attacker,o.defender),k=c(s,o.defender,o.attacker);if(o.attacker.gravitonLaser||o.defender.gravitonLaser||u||g){for(var S=new e.EnsembleSplit(h),B=h.distribution,y=0;y<B.rows;y++)for(var T=0;T<B.columns;T++)if(B[y][T]!==0)for(var M=I(C,k),H=0;H<M.rows;H++)for(var j=0;j<M.columns;j++){var J=v(h.attacker,y,j,o.attacker,o.defender),te=v(h.defender,T,H,o.defender,o.attacker);S.increment(J,te,y,T,M.at(H,j)*B[y][T])}var K=S.getSubproblems();K.forEach(function(He){N(He,o,h)}),i.push.apply(i,K)}else{var re=Y(C,h.attacker.length+1),Ge=Y(k,h.defender.length+1);V(h,re,Ge,o),N(h,o),i.push(h)}}),i;function c(h,C,k){var S=k.antimassDeflectors?-1:0,B=h.filter(p),y;return C.plasmaScoring?y=ne(B,t.ThrowType.SpaceCannon,S):y=_(B,t.ThrowType.SpaceCannon,S),E(y,k.maneuveringJets?1:0)}function p(h){return h.spaceCannonDice!==0}function v(h,C,k,S,B){if(k===0||C===0)return e.Victim.Null;if(!B.gravitonLaser&&!S.nonEuclidean&&!h.some(R(t.UnitType.Ground))){var j=new e.Victim;return j._dead=Math.min(k,h.map(J).reduce(te)),j}for(var y=[],H=null,T=C-1;0<=T&&0<k;){var M=h[T];M.type===t.UnitType.Fighter&&B.gravitonLaser||M.type===t.UnitType.Ground?H=null:(H===null&&(H=[T+1,T+1],y.push(H)),H[0]--,k-=J(M)),T--}var H=null;if(B.gravitonLaser)for(var T=C-1;0<=T&&0<k;--T)h[T].type===t.UnitType.Fighter&&(H===null&&(H=[T+1,T+1],y.push(H)),H[0]--,k-=J(h[T]));y.sort(function(K,re){return K[0]-re[0]});var j=new e.Victim;return y.forEach(function(K){j.addRange(K[0],K[1])}),j;function J(K){return K.isDamageGhost&&S.nonEuclidean?2:1}function te(K,re){return K+re}}}},{name:"Assault Cannon",appliesTo:t.BattleType.Space,execute:function(a,r,s,o){if(!o.attacker.assaultCannon&&!o.defender.assaultCannon)return a;var i=[];return a.forEach(function(c){for(var p=new e.EnsembleSplit(c),v=u(c.attacker,o.attacker.assaultCannon),h=u(c.defender,o.defender.assaultCannon),C=g(c.attacker,h<c.defender.length,!0),k=g(c.defender,v<c.attacker.length,!1),S=c.distribution,B=0;B<S.rows;B++)for(var y=0;y<S.columns;y++)if(S[B][y]!==0){var T=h<y?C[B]:e.Victim.Null,M=v<B?k[y]:e.Victim.Null;p.increment(T,M,B,y,S[B][y])}var H=p.getSubproblems();H.forEach(function(j){N(j,o,c)}),i.push.apply(i,H)}),i;function u(c,p){for(var v=0,h=0;h<c.length;h++)if(L(c[h])&&v++,v>=3&&p)return h;return h}function g(c,p,v){var h=new Array(c.length+1);if(!p)h.fill(e.Victim.Null);else{h[0]=e.Victim.Null;for(var C=void 0,k=void 0,S=void 0,B=0;B<c.length;++B){(v?L:z)(c[B])?(C=c[B],k=B,S=void 0):C&&c[B].damageCorporeal===C&&(S=B);var y=new e.Victim;k!==void 0&&(y.addRange(k,void 0),S!==void 0&&y.addRange(S,void 0)),h[B+1]=y}}return h}}},{name:"Mentak racial",appliesTo:t.BattleType.Space,execute:function(a,r,s,o){return a.forEach(function(i){if(o.attacker.race!==t.Race.Mentak&&o.defender.race!==t.Race.Mentak)return;function u(p,v){var h=0,C=v.moraleBoost?1:0;return A(p,t.ThrowType.Battle,function(k){return 2<=h?!1:k.type===t.UnitType.Cruiser||k.type===t.UnitType.Destroyer?(h++,!0):!1},C)}var g,c;o.attacker.race===t.Race.Mentak?g=u(i.attacker,o.attacker):g=Y([1],i.attacker.length+1),o.defender.race===t.Race.Mentak?c=u(i.defender,o.defender):c=Y([1],i.defender.length+1),V(i,g,c,o),N(i,o)}),a}},{name:"Anti-Fighter Barrage",appliesTo:t.BattleType.Space,execute:function(a,r,s,o){var i=[];return a.forEach(function(p){for(var v=new e.EnsembleSplit(p),h=A(p.attacker,t.ThrowType.Barrage,u),C=A(p.defender,t.ThrowType.Barrage,u),k=g(p.attacker,R(t.UnitType.Fighter)),S=g(p.defender,R(t.UnitType.Fighter)),B=p.distribution,y=0;y<B.rows;y++)for(var T=0;T<B.columns;T++)if(B[y][T]!==0)for(var M=I(h[y],C[T]),H=0;H<M.rows;H++)for(var j=0;j<M.columns;j++){var J=c(k,y,j),te=c(S,T,H);v.increment(J,te,y,T,M.at(H,j)*B[y][T])}i.push.apply(i,v.getSubproblems())}),i;function u(p){return p.barrageDice!==0}function g(p,v){for(var h=void 0,C=0;C<p.length;C++)if(h===void 0)v(p[C])&&(h=C);else if(!v(p[C]))break;return h===void 0&&(h=C),{from:h,to:C}}function c(p,v,h){if(h===0||v<p.from)return e.Victim.Null;var C=new e.Victim;return C.addRange(p.from,Math.min(v,p.from+h,p.to)),C}}},{name:"Bombardment",appliesTo:t.BattleType.Ground,execute:function(a,r,s,o){return a.forEach(function(i){var u=ee(r,s,o),g=Y(u,i.attacker.length+1),c=Y([1],i.defender.length+1);V(i,g,c,o)}),a}},{name:"Space Cannon -> Ground Forces",appliesTo:t.BattleType.Ground,execute:function(a,r,s,o){return a.forEach(function(i){if(!o.attacker.l4Disruptors){var u=Y([1],i.attacker.length+1),g=o.attacker.antimassDeflectors?-1:0,c=s.filter(R(t.UnitType.PDS)),p;o.defender.plasmaScoring?p=ne(c,t.ThrowType.SpaceCannon,g):p=_(c,t.ThrowType.SpaceCannon,g);var v=Y(E(p,o.attacker.maneuveringJets?1:0),i.defender.length+1);V(i,u,v,o)}}),a}}]}function X(a,r,s,o,i){for(var u=void 0,g=0;g<l.length;g++)if(!(!i&&l[g].firstRoundOnly)){var c=l[g].apply(a,r,s,o);if(c&&!u){u=c;continue}c&&(u=p(u,c))}return u;function p(v,h){var C=typeof v=="function",k=typeof h=="function";return C||k?function(S){return(C?v(S):v)+(k?h(S):h)}:v+h}}function ae(){return[{name:"moraleBoost",firstRoundOnly:!0,apply:function(a,r){return r.moraleBoost?1:0}},{name:"fighterPrototype",firstRoundOnly:!0,apply:function(a,r){return a===t.BattleType.Space&&r.fighterPrototype?function(s){return s.type===t.UnitType.Fighter?2:0}:0}},{name:"Sardakk",firstRoundOnly:!1,apply:function(a,r){return r.race===t.Race.Sardakk?1:0}},{name:"Sardakk Flagship",firstRoundOnly:!1,apply:function(a,r,s,o){return r.race===t.Race.Sardakk&&a===t.BattleType.Space&&o.some(R(t.UnitType.Flagship))?function(i){return i.type!==t.UnitType.Flagship?1:0}:0}},{name:"JolNar",firstRoundOnly:!1,apply:function(a,r){return r.race===t.Race.JolNar?-1:0}},{name:"prophecyOfIxth",firstRoundOnly:!1,apply:function(a,r){return r.prophecyOfIxth?function(s){return s.type===t.UnitType.Fighter?1:0}:0}},{name:"tekklarLegion",firstRoundOnly:!1,apply:function(a,r){return a===t.BattleType.Ground&&r.tekklarLegion&&r.race!==t.Race.Sardakk?1:0}},{name:"tekklarLegion of the opponent",firstRoundOnly:!1,apply:function(a,r,s){return a===t.BattleType.Ground&&s.tekklarLegion&&r.race===t.Race.Sardakk?-1:0}}]}function _(a,r,s,o){return f(a,r,s,o).pop()}function Y(a,r){var s=new Array(r);return s.fill(a),s}function ee(a,r,s){var o=!s.defender.conventionsOfWar&&(!r.some(R(t.UnitType.PDS))||a.some(R(t.UnitType.WarSun))||s.attacker.race===t.Race.Letnev&&a.some(R(t.UnitType.Flagship)));if(!o)return[1];var i=s.defender.bunker?-4:0,u=a.filter(p),g=s.attacker.plasmaScoring?ne(u,t.ThrowType.Bombardment,i):_(u,t.ThrowType.Bombardment,i);if(s.attacker.x89Omega){var c=new Array(r.length+1);c.fill(0),c[0]=g[0],c[c.length-1]=g.reduce(function(v,h){return v+h})-g[0],g=c}return g;function p(v){return v.bombardmentDice!==0}}function ne(a,r,s){var o=f(a,r,s).pop(),i=P(a,t.ThrowValues[r]);if(i){var u=i.clone();u[t.ThrowDice[r]]=1;var g=D(u,r,s);o=W(g,o)}return o}function Q(a,r,s,o){if(o.nonEuclidean&&a.length>2){for(var i=a.slice(),u=1;u<i.length&&0<s;u++)r[s].isDamageGhost&&E(i,1,u),s--;return i}else return a}function w(a,r,s,o){return!r.attacker.valkyrieParticleWeave&&!r.defender.valkyrieParticleWeave?a:U({rows:a.rows+(r.attacker.valkyrieParticleWeave?1:0),columns:a.columns+(r.defender.valkyrieParticleWeave?1:0),at:function(i,u){if(i===0&&u===0)return a.at(0,0);if(i===0)return r.attacker.valkyrieParticleWeave||u===a.columns?0:a.at(i,u);if(u===0)return r.defender.valkyrieParticleWeave||i===a.rows?0:a.at(i,u);if(i===1&&u===1&&r.attacker.valkyrieParticleWeave&&r.defender.valkyrieParticleWeave)return(a.columns===1?0:a.at(0,1))+(a.rows===1?0:a.at(1,0));if(r.attacker.valkyrieParticleWeave&&r.defender.valkyrieParticleWeave&&(i===a.rows&&u===1||i===1&&u===a.columns))return 0;var g=r.attacker.valkyrieParticleWeave&&!(r.defender.valkyrieParticleWeave&&u===1)?1:0,c=r.defender.valkyrieParticleWeave&&!(r.attacker.valkyrieParticleWeave&&i===1)?1:0;return a.at(i-g,u-c)}},s,o)}function U(a,r,s){return a.rows<=r&&a.columns<=s?a:{rows:Math.min(a.rows,r),columns:Math.min(a.columns,s),at:function(o,i){for(var u=0,g=o===this.rows-1?a.rows:o+1,c=i===this.columns-1?a.columns:i+1,p=o;p<g;++p)for(var v=i;v<c;++v)u+=a.at(p,v);return u}}}function P(a,r){for(var s=null,o=1/0,i=0;i<a.length;i++)a[i][r]<o&&(s=a[i],o=a[i][r]);return s}function E(a,r,s){s=s||0;for(var o=0;o<r;++o){a.length>s+1&&(a[s]+=a[s+1]);for(var i=s+2;i<a.length;i++)a[i-1]=a[i];a.length>s+1&&a.pop()}return a}function x(a,r,s){var o=null;return a.filter(R(t.UnitType.Flagship)).forEach(function(i){i.battleDice=o===null?o=r.slice(0,s).filter(z).length:o}),o!==null}function N(a,r,s){if(r.attacker.race===t.Race.Yin||r.defender.race===t.Race.Yin){var o=u(a,r,s,t.BattleSide.attacker),i=u(a,r,s,t.BattleSide.defender);g(a.distribution,o,a.distribution.columns),g(a.distribution,a.distribution.rows,i)}function u(c,p,v,h){var C=q(c[h],R(t.UnitType.Flagship));return p[h].race===t.Race.Yin?v&&c[h].length<v[h].length&&C<q(v[h],R(t.UnitType.Flagship))?h===t.BattleSide.attacker?c.distribution.rows:c.distribution.columns:C+1:0}function g(c,p,v){for(var h=0;h<p;++h)for(var C=0;C<v;++C)h===0&&C===0||(c[0][0]+=c[h][C],c[h][C]=0)}}function R(a){return function(r){return r.type===a&&!r.isDamageGhost}}function L(a){return a.type!==t.UnitType.Fighter&&!a.isDamageGhost}function z(a){return a.type!==t.UnitType.Fighter&&a.type!==t.UnitType.Ground&&!a.isDamageGhost}function q(a,r){for(var s=a.length-1;0<=s;--s)if(r(a[s]))return s;return-1}}()})(Z)})(ue);const fe={"The Arborec":"Arborec","The Barony of Letnev":"Letnev","The Clan of Saar":"Saar","The Embers of Muaat":"Muaat","The Emirates of Hacan":"Hacan","The Federation of Sol":"Sol","The Ghosts of Creuss":"Creuss","The L1Z1X Mindnet":"L1Z1X","The Mentak Coalition":"Mentak","The Naalu Collective":"Naalu","The Nekro Virus":"Virus","The Sardakk N'orr":"Sardakk","The Universities of Jol-Nar":"JolNar","The Winnu":"Winnu","The Xxcha Kingdom":"Xxcha","The Yin Brotherhood":"Yin","The Yssaril Tribes":"Yssaril"},he={Flagship:"Flagship","War Sun":"WarSun",Dreadnought:"Dreadnought",Carrier:"Carrier",Cruiser:"Cruiser",Destroyer:"Destroyer",Fighter:"Fighter",PDS:"PDS",Infantry:"Ground","Space Dock":"PDS"};async function Ee(){const{allBoardSystems:Z}=await import("https://www.twilightwars.com/js/board-creation.js"),{getPlayers:n}=await import("https://www.twilightwars.com/js/api.js"),{getActiveSystem:e}=await import("https://www.twilightwars.com/js/utils/extras.js"),t=await n(),l=e(Z).userData,F=[];if(!l)return"No defending units";console.log(l);for(const V of Z)for(const O of V.unitsToMove??[])F.push(O);if(F.length===0){const V=l.units.filter(O=>O.color!==l.units[0].color);if(V.length>0)F.push(...V);else return"No attacking units"}const m={};for(const V of F){const O=he[V.name];m[O]||(m[O]={count:0}),m[O].count++}const b=t.find(V=>V.color===F[0].color),d=t.find(V=>V.color===l.units[0].color);console.log(b,d);const f={};for(const V of l.units){const O=he[V.name];f[O]||(f[O]={count:0}),f[O].count++}const A=fe[b.faction],D=fe[d.faction],W={attackerUnits:m,defenderUnits:f,battleType:"Space",options:{attacker:{race:A,riskDirectHit:!0},defender:{race:D,riskDirectHit:!0}}};console.log(W);var G=ue.calculator.computeProbabilities(W);console.log(G);let I=0,$=0;for(const V in G.distribution)Number.isInteger(parseInt(V))&&(console.log(G.distribution[V]),V.includes("-")?I+=G.distribution[V]:$+=G.distribution[V]);return console.log(I,$),`${I.toFixed(2)} - ${$.toFixed(2)}`}let ge=document.createElement("template");ge.innerHTML=`
    <style>
        #calculateButton {
            position: absolute;
            top: 15px;
            right: 658px;
            z-index: 1000;
        }
    </style>
    <button id="calculateButton">Calculate Odds</button>
`;class Re extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(ge.content.cloneNode(!0)),this.calculateButton=this.shadowRoot.getElementById("calculateButton")}async connectedCallback(){this.calculateButton.addEventListener("click",async()=>{const n=await Ee();this.calculateButton.innerText=n})}}window.customElements.define("ti-odds-component",Re);let pe=document.createElement("template");pe.innerHTML=`
    <style>
        table {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }
        #units {
            position: relative;
            background-color: rgba(0, 0, 0, 0.8);
            color: white;
            border-radius: 10px;
            padding: 10px;
            display: none; /* Hide the table by default */
        }
        #units td {
            text-align: center;
            min-width: 60px;
            font-size: 16px;
            padding: 5px;
        }
        #showButton {
            position: absolute;
            top: 15px;
            right: 318px;
            z-index: 1000;
        }
        #showButton:hover + #units {
            display: inline-block; /* Show the table when the button is hovered */
        }
    </style>
    <button id="showButton">Show Units</button>
    <table id="units">
    </table>
`;class Ve extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(pe.content.cloneNode(!0)),this.unitsContainer=this.shadowRoot.getElementById("units")}async connectedCallback(){const n=await import("https://www.twilightwars.com/js/api.js"),e=await n.getPlayers(),t=await n.getBoardSystems(),l=document.createElement("tr");this.unitsContainer.appendChild(l);const F=document.createElement("td");l.appendChild(F);const m={Flagship:0,"War Sun":0,Dreadnought:0,Carrier:0,Cruiser:0,Destroyer:0,Fighter:0,PDS:0,Infantry:0,"Space Dock":0},b=e.reduce((d,f)=>(d[f.color]={...m},d),{});t.forEach(d=>{d.units.forEach(f=>{b[f.color][f.name]++}),d.planets.forEach(f=>{f.units.forEach(A=>{b[A.color][A.name]++})})}),Object.keys(m).forEach(d=>{const f=document.createElement("td");f.textContent=d,l.appendChild(f)}),e.forEach(d=>{const f=document.createElement("tr");this.unitsContainer.appendChild(f);const A=document.createElement("td");A.textContent=d.faction,f.appendChild(A),Object.values(b[d.color]).forEach(D=>{const W=document.createElement("td");W.style.color=d.color,W.style.fontWeight="bold",W.style.fontSize="20px",W.textContent=D>0?D.toString():"",f.appendChild(W)})})}}window.customElements.define("ti-units-component",Ve);let me=document.createElement("template");me.innerHTML=`
    <style>
        #votes {
            position: fixed;
            top: 50%;
            left: 50%;
            background-color: rgba(0, 0, 0, 0.8);
            color: white;
            border-radius: 10px;
            transform: translate(-50%, -50%);
            display: none; /* Hide the table by default */

        }
        #showButton {
            position: absolute;
            top: 15px;
            right: 408px;
            z-index: 1000;
        }
        #showButton:hover + #votes {
            display: block; /* Show the table when the button is hovered */
        }

        .pie {
            width: 400px;
            height: 400px;
            border-radius: 50%
          }
    </style>
    <button id="showButton">Show Votes</button>
    <div id="votes">
          <div class="pie" id="pie1"></div>
    </div>
    <div id="outcomes">
    </div>
  `;const Pe={red:"#500000",green:"#005000",blue:"#000050",yellow:"#505000",purple:"#500050",orange:"#504000"};class xe extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(me.content.cloneNode(!0)),this.votesContainer=this.shadowRoot.getElementById("votes")}async connectedCallback(){const n=await import("https://www.twilightwars.com/js/api.js"),e=await n.getPlayers(),t=await n.getGame();globalThis.players=e,globalThis.game=t;const l=e.reduce((d,f)=>{if(f.faction==="The Nekro Virus")return d;let A=f.planetCards.reduce((W,G)=>W+G.influence,0),D=f.planetCards.reduce((W,G)=>W+(G.exhausted?G.influence:0),0);return t.phase==="voting"?(d[Pe[f.color]]=D,d[f.color]=A-D):d[f.color]=A,d},{});for(const d of e)d.vote&&!d.vote.abstain&&(l[d.color]=l[d.color]-d.vote.count);const F=Object.values(l).reduce((d,f)=>d+f,0);let m=0;const b=`conic-gradient(${Object.entries(l).map(([d,f],A)=>{const D=`${d} ${(100*m/F).toFixed(2)}%, ${d} ${(100*(m+f)/F).toFixed(2)}%`;return m+=f,D}).join(",")})`;this.votesContainer.getElementsByClassName("pie")[0].style.backgroundImage=b}}window.customElements.define("ti-votes-component",xe);let ve=document.createElement("template");ve.innerHTML=`
    <style>
        table {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }
        #objectives {
            position: relative;
            background-color: rgba(0, 0, 0, 0.8);
            color: white;
            border-radius: 10px;
            padding: 10px;
            display: none; /* Hide the table by default */
        }
        #objectives td {
            text-align: center;
            min-width: 60px;
            font-size: 16px;
            padding: 5px;
        }
        #showButton {
            position: absolute;
            top: 15px;
            right: 518px;
            z-index: 1000;
        }
        #showButton:hover + #objectives {
            display: inline-block; /* Show the table when the button is hovered */
        }
    </style>
    <button id="showButton">Show Objectives</button>
    <table id="objectives">
    </table>
`;class We extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(ve.content.cloneNode(!0)),this.objectivesContainer=this.shadowRoot.getElementById("objectives")}async connectedCallback(){const n=await import("https://www.twilightwars.com/js/api.js"),e=await n.getPlayers(),t=await n.getGame(),l=document.createElement("tr");this.objectivesContainer.appendChild(l);const F=document.createElement("td");l.appendChild(F),e.forEach(m=>{const b=document.createElement("td");b.textContent=m.faction,l.appendChild(b)}),t.publicObjectives.forEach(m=>{const b=document.createElement("tr");this.objectivesContainer.appendChild(b);const d=document.createElement("td");d.textContent=m.name,b.appendChild(d),e.forEach(f=>{const A=document.createElement("td");A.style.color=f.color,A.style.fontWeight="bold",A.style.fontSize="20px",A.textContent=m.scores.find(D=>D.playerId===f._id)?"✔":"",b.appendChild(A)})})}}window.customElements.define("ti-objectives-component",We);async function Me(){console.log("running main"),await Te(),document.body.appendChild(document.createElement("ti-cards-component")),document.body.appendChild(document.createElement("ti-units-component")),document.body.appendChild(document.createElement("ti-votes-component")),document.body.appendChild(document.createElement("ti-objectives-component")),document.body.appendChild(document.createElement("ti-odds-component"))}Me()})();
