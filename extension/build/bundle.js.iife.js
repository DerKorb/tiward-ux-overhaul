(function(){"use strict";let ce=document.createElement("template");ce.innerHTML=`
    <style>
        :host {
            position: fixed;
            bottom: 0px;
        }
        #cards {
            display: flex;
            position: fixed;
            bottom: -242px;
            transition: bottom 0.5s;
        }
        .card {
            border-radius: 5px;
            margin: 5px;
            overflow: hidden;
        }
        .card img {
            width: 200px;
            height: 300px;
        }
        #cards:hover {
            bottom: 0;
        }
    </style>
    <div id="cards">
    </div>
`;class we extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(ce.content.cloneNode(!0)),this.cardsContainer=this.shadowRoot.getElementById("cards")}async connectedCallback(){const a=await import("https://www.twilightwars.com/js/api.js"),{onActionCardDoubleClick:t}=await import("https://www.twilightwars.com/js/events/action-card.js"),{playerActionCards:e}=await import("https://www.twilightwars.com/js/loaders/load-player-cards.js"),u=await a.getPlayer(),{actionCards:C,secretObjectives:v,promissoryNotes:y}=u;C.forEach(g=>{const b=document.createElement("div");b.ondblclick=()=>{const d=e.find(V=>V.userData.name===g.name);d&&(d.material.opacity=.3,d.scale.x=100,d.scale.y=100,d.visible=!0,setTimeout(()=>{t(),d.scale.x=1,d.scale.y=1,d.material.opacity=1,d.visible=!1},1))},b.className="card",this.cardsContainer.appendChild(b);const s=document.createElement("img");s.src=`/img/action-cards/${g.name}.png`,b.appendChild(s)}),v.forEach(g=>{const b=document.createElement("div");b.className="card",this.cardsContainer.appendChild(b);const s=document.createElement("img");s.src=`/img/objectives/${g.name}.png`,b.appendChild(s)}),y.filter(g=>g.color!==u.color).forEach(g=>{const b=document.createElement("div");b.className="card",this.cardsContainer.appendChild(b);const s=document.createElement("img");"faction"in g?s.src=`/img/faction/${g.faction}/${g.name}.png`:s.src=`/img/misc/${g.color}/${g.name}.png`,b.appendChild(s)})}}window.customElements.define("ti-cards-component",we);const Ce={Alpha:"red",Beta:"blue",Delta:"green"},ke={red:"rgba(255, 0, 0, 1.0)",blue:"rgba(0, 0, 255, 1.0)",green:"rgba(0, 255, 0, 1.0)",yellow:"rgba(255, 255, 0, 1.0)",purple:"rgba(255, 0, 255, 1.0)",black:"rgba(0, 0, 0, 1.0)",orange:"rgba(255, 165, 0, 1.0)"},ie={red:"rgba(255, 150, 150, 1)",blue:"rgba(150, 150, 255, 1)",green:"rgba(150, 255, 150, 1)",yellow:"rgba(255, 255, 0, 1)",purple:"rgba(255, 150, 255, 1)",orange:"rgba(255, 150, 0, 1)",white:"white"},De={Alpha:"♻️",Beta:"🌀",Delta:"🔴",Yellow:"🟡"},Te="rgba(0, 0, 0, 0.8)",le=[[],[{position:[160,290]}],[{position:[120,20]},{position:[160,380]}],[{position:[150,270]},{position:[190,10]},{position:[200,380]}]];async function Se(){const W=await import("https://www.twilightwars.com/js/api.js"),{skeletonHexArray:a}=await import("https://www.twilightwars.com/js/board-creation.js"),t=await W.getBoardSystems();globalThis.boardSystems=t;const e=await W.getPlayers(),u=await W.getGame(),C=new Image;C.src="data:image/png;base64,"+Fe,await new Promise(v=>{C.onload=v}),t.forEach(async v=>{var g,b,s,d;const y=v.number===51?a[a.length-1]:a[v.position];await Be(e,u,v,C,y),(g=y.userData.boardTokens)==null||g.controlTokens.forEach(V=>{V.visible=!1}),(b=y.userData.boardTokens)==null||b.infantry.forEach(V=>{V.visible=!1}),(s=y.userData.boardTokens)==null||s.pds.forEach(V=>{V.visible=!1}),(d=y.userData.boardTokens)==null||d.spaceDock.forEach(V=>{V.visible=!1}),y.material.map.needsUpdate=!0,y.material.needsUpdate=!0})}const Fe="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";async function Be(W,a,t,e,u){var Z,J,Q,X;const{CanvasTexture:C,Mesh:v,MeshBasicMaterial:y}=await import("https://www.twilightwars.com/js/vendor/three/build/three.module.js"),{createHexagonGeometry:g}=await import("https://www.twilightwars.com/js/utils/geometries.js"),b=document.createElement("canvas"),s=b.getContext("2d"),d=25;b.width=512,b.height=512;const V=(Z=t.units)==null?void 0:Z[0],U=V?ke[V.color]:null;U&&(s.fillStyle=U,s.fillRect(0,0,b.width,b.height),s.globalCompositeOperation="destination-in",s.drawImage(e,-b.width*.1,-b.height*.1,b.width*1.2,b.height*1.2),s.globalCompositeOperation="source-over");function R(m,B,G,P,I="white",j=!1,M){s.font=`bold ${m}px Arial`;const O=s.measureText(B).width,ee=G-O/2;s.fillStyle=I,s.fillText(B,j?ee:G,P),M&&(s.strokeStyle=M,s.lineWidth=2,s.strokeText(B,j?ee:G,P))}function z(m,B,G,P,I,j="white"){s.beginPath(),s.moveTo(m+I,B),s.lineTo(m+G-I,B),s.quadraticCurveTo(m+G,B,m+G,B+I),s.lineTo(m+G,B+P-I),s.quadraticCurveTo(m+G,B+P,m+G-I,B+P),s.lineTo(m+I,B+P),s.quadraticCurveTo(m,B+P,m,B+P-I),s.lineTo(m,B+I),s.quadraticCurveTo(m,B,m+I,B),s.closePath(),s.fillStyle=j,s.fill()}if(t.anomaly&&R(d*1.5,t.anomaly,256,50,"white",!0),t.wormhole&&R(d*3.5,De[t.wormhole]??t.wormhole,256,500,Ce[t.wormhole],!0),t.isHomeSystem){const m=W.find(P=>P.faction===t.faction),B=m==null?void 0:m.strategyCards.map(P=>P.exhausted?P.number:P.number+"!"),G=a.turn.player.current===(m==null?void 0:m.number);R(d*5,(B==null?void 0:B.join(" "))??"",256,240,G?"red":"white",!0)}const E=W.reduce((m,B)=>(m[B.faction]=B.color,m),{});t.commandTokens&&t.commandTokens.forEach((m,B)=>{const G=E[m];s.lineWidth=20,s.beginPath();const P=2*Math.PI/6*B,I=256+226*Math.cos(P),j=256+266*Math.sin(P),M=256+226*Math.cos(P+2*Math.PI/6),O=256+266*Math.sin(P+2*Math.PI/6);s.moveTo(I,j),s.lineTo(M,O),s.strokeStyle=G,s.stroke()});for(let m=0;m<6;m++){const B=U??"black";s.lineWidth=5,s.beginPath();const G=2*Math.PI/6*m,P=256+256*Math.cos(G),I=256+296*Math.sin(G),j=256+256*Math.cos(G+2*Math.PI/6),M=256+296*Math.sin(G+2*Math.PI/6);s.moveTo(P,I),s.lineTo(j,M),s.strokeStyle=B,s.stroke()}if(t.planets){let m=0;for(const B of t.planets)K(B,m++)}const L=new C(b);console.log(u);const Y=g(.9),$=new y({map:L});new v(Y,$),u.userData.canvasTexture=L,u.material.onBeforeCompile=function(m){m.uniforms.canvasTexture={value:L},m.fragmentShader=`
        uniform sampler2D canvasTexture;
      `+m.fragmentShader,m.fragmentShader=m.fragmentShader.replace("gl_FragColor = vec4( outgoingLight, diffuseColor.a );",`
        vec4 tex1Color = texture2D( map, vUv );
        vec4 canvasColor = texture2D( canvasTexture, vUv );
        gl_FragColor = vec4(canvasColor.a * canvasColor.rgb + tex1Color.rgb * (1.0 - canvasColor.a), 1.0);
        `)};function K(m,B){const G=le[t.planets.length][B].position[0],P=le[t.planets.length][B].position[1],I=W.find(o=>o.planetCards.find(c=>c.name===m.name));function j(o,c,i){const A=I?ie[I.color]:"white";s.fillStyle="white",o.filter(l=>l.name==="PDS").forEach((l,p)=>{R(d,"🛡",c+10+p*30,i-25,A)}),o.filter(l=>l.name==="Space Dock").forEach((l,p)=>{R(d,"🏗",c+10+p*30,i,A)});const h=o.some(l=>l.name==="Infantry"&&l.upgraded);R(d,`🥆${h?"+":""}`,c+82,i+35,A),s.font=`bold ${d*2}px Arial`,R(d*2,o.filter(l=>l.name==="Infantry").length.toString(),c+95,i,A,!0)}const M=I?I.planetCards.find(o=>o.name===m.name):null,O=`${m.resources}/${m.influence}`;let ee,_="";switch(m.tech){case"Warfare":_="🔴";break;case"Biotic":_="🟢";break;case"Cybernetic":ee="white",_="🟡";break;case"Propulsion":ee="white",_="🔵";break}s.font=`bold ${d}px Arial`;const n=s.measureText(O).width;let r="";if(n>0){switch(m.trait){case"Hazardous":s.fillStyle="red",r="☢️";break;case"Industrial":s.fillStyle="green",r="🏭";break;case"Cultural":s.fillStyle="blue",r="🎭";break;default:s.fillStyle="white"}s.fillStyle=ee??"white";const o=I?E[I.faction]:"white";s.font=`bold ${d*2}px Arial`,z(G,P,200,100,10,Te),m.units&&j(m.units,G+80,P+50),R(d*2,O,G+10,P+50,ie[o]),M!=null&&M.exhausted&&(s.lineWidth=5,s.beginPath(),s.moveTo(G+25-n/2,P+30),s.lineTo(G+25+n*1.5,P+30),s.strokeStyle=ie[o],s.stroke()),R(d*.9,m.name+_+r,G+10,P+85,ie[o])}}if(t.units){const m=((J=t.units[0])==null?void 0:J.color)??"white",B=t.units.filter(O=>O.name==="Fighter"&&O.color===m).length,G=t.units.filter(O=>O.name==="Infantry"&&O.color===m).length,P=t.units.filter(O=>O.name==="Fighter"&&O.color!==m).length,I=t.units.filter(O=>O.name==="Infantry"&&O.color!==m).length;s.font=`bold ${d*2}px Arial`;const j=((Q=t.units[0])==null?void 0:Q.color)??"white",M=(X=t.units.find(O=>O.color!==m))==null?void 0:X.color;B+B>0&&(P>0?R(d*3,P.toFixed(0),90,231,j,!0,M):R(d*3,"🛦",90,231,j,!0,"white"),R(d*3,B.toFixed(0),90,331,j,!0,"white")),G+I>0&&(I>0?R(d*3,I.toFixed(0),410,231,j,!0,M):R(d*3,"🥆",410,231,j,!0,"white"),R(d*3,G.toFixed(0),410,331,j,!0,"white"))}}function xe(W){console.log("parsing combats",W);let a;const t=[];for(let e=0;e<W.length;e++)switch(W[e].event){case"system activated":a={time:W[e].time,attacker:W[e].user,defender:"",systemNumber:W[e].details.systemNumber,planetNames:[],rolls:[]};break;case"ships moved":a&&(a.defender=W[e].user);break;case"space combat hits assigned":a&&(W[e].user===a.attacker?a.attackerLosses=W[e].details.units:W[e].user===a.defender&&(a.defenderLosses=W[e].details.units));break;case"ground forces committed":a&&(a.planetNames=W[e].details.planetNames);break;case"ground combat rolled":case"space combat rolled":case"bombardment rolled":a&&(a.rolls=W[e].details.results);break;case"ended turn":a&&t.push(a),a=void 0;break}return console.log(t),t}let ue=document.createElement("template");ue.innerHTML=`
    <style>
        table {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        #stats {
            position: relative;
            background-color: rgba(0, 0, 0, 0.8);
            color: white;
            border-radius: 10px;
            padding: 10px;
            display: none; /* Hide the table by default */
        }
        #stats td {
            text-align: center;
            min-width: 60px;
            font-size: 16px;
            padding: 5px;
        }
        #showButton {
            position: absolute;
            top: 15px;
            right: 778px;
            z-index: 1000;
        }
        #showButton:hover + #stats {
            display: inline-block; /* Show the table when the button is hovered */
        }
    </style>
    <button id="showButton">Show Stats</button>
    <table id="stats">
    </table>
`;class Ee extends HTMLElement{constructor(){super(),this.currentPanelIndex=0,this.attachShadow({mode:"open"}).appendChild(ue.content.cloneNode(!0)),this.statsContainer=this.shadowRoot.getElementById("stats"),this.showButton=this.shadowRoot.getElementById("showButton"),this.showButton.addEventListener("wheel",t=>this.handleWheel(t))}handleWheel(a){const t=Math.sign(a.deltaY);this.statsContainer.children[this.currentPanelIndex].style.display="none",t>0?this.currentPanelIndex=(this.currentPanelIndex+1)%this.statsContainer.children.length:this.currentPanelIndex=(this.currentPanelIndex-1+this.statsContainer.children.length)%this.statsContainer.children.length,this.statsContainer.children[this.currentPanelIndex].style.display="block"}generatePanels(a){const t=document.createElement("div");let e="<h2>Trade Matrix</h2>";for(let v of a){let y=v.details.tradeRequest;e+=`
        <p>
          Trade from player ${y.from} to player ${y.to}:
          Offered ${y.offer.commodities} commodities for ${y.request.commodities} commodities
        </p>
      `}t.innerHTML=e;const u=document.createElement("div");u.innerHTML="<h2>Units Lost Chart</h2>";const C=document.createElement("div");C.innerHTML="<h2>Army Value Chart</h2>",this.statsContainer.appendChild(t),this.statsContainer.appendChild(u),this.statsContainer.appendChild(C),t.style.display="none",u.style.display="none",C.style.display="none",t.style.display="block"}async connectedCallback(){const a=await import("https://www.twilightwars.com/js/api.js"),t=await a.getGame(),e=indexedDB.open("TiWarsDB",1);e.onupgradeneeded=function(u){u.target.result.createObjectStore("logs",{keyPath:"_id"}).createIndex("time","time",{unique:!1})},e.onsuccess=async u=>{const C=u.target.result;let v;for(;;){const U=await a.getGameLogs(v);if(U.length===0)break;let R=!0;const E=C.transaction(["logs"],"readwrite").objectStore("logs");for(const L of U){const Y=E.get(L._id);await new Promise(($,K)=>{Y.onsuccess=function(Z){Y.result||(E.add(L),R=!1),$(null)},Y.onerror=function(Z){K(new Error("Error accessing the indexedDB"))}}),v=L._id}if(R)break}const b=C.transaction(["logs"],"readonly").objectStore("logs").getAll(),s=await new Promise((U,R)=>{b.onsuccess=function(z){U(b.result.filter(E=>E.game===t._id))},b.onerror=function(z){R(new Error("Error accessing the indexedDB"))}});xe(s);const d=s.reduce((U,R)=>(R.game===t._id&&(U[R.event]||(U[R.event]=[]),U[R.event].push(R)),U),{});window.events=d;let V=s.filter(U=>U.event==="trade request accepted");this.generatePanels(V)},e.onerror=function(u){console.log("Error opening/accessing the indexedDB")}}}window.customElements.define("ti-stats-component",Ee);function Ue(W){throw new Error('Could not dynamically require "'+W+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var Ae={},oe={},de;function Pe(){return de||(de=1,function(W){(function(a){a.createMatrix=function(t,e,u){for(var C=new Array(t),v=0;v<t;v++)C[v]=new Array(e),u!==void 0&&C[v].fill(u);return C.rows=t,C.columns=e,C},a.Problem=function(t,e,u){this.distribution=t,this.attacker=e,this.defender=u},a.DistributionBase=function(t,e){this.min=t,this.max=e},a.DistributionBase.prototype.at=function(t){return this[t]||0},a.DistributionBase.prototype.toString=function(){if(this.min===void 0||this.max===void 0)return"no stats";var t="Min: "+this.min+", Max: "+this.max+". ",e=0;t+="[";for(var u=Math.min(this.min,-1);u<=Math.max(this.max,1);++u)u===0&&(t+="| "),t+=C(this.at(u),3)+" ",e+=this.at(u),u===0&&(t+="| ");return t+="]",t+=" "+C(e,3),t+=". "+C(this.downTo(-1),3)+":"+C(this.downTo(1),3),t;function C(v,y){var g=Math.pow(10,y);return Math.round(v*g)/g}},a.DistributionBase.prototype.downTo=function(t){if(t===0)return this.at(t);var e=0;if(t<0)for(var u=this.min;u<=t;u++)e+=this.at(u);else for(var u=t;u<=this.max;u++)e+=this.at(u);return e},a.EmpiricalDistribution=function(){},a.EmpiricalDistribution.prototype=Object.create(a.DistributionBase.prototype),a.EmpiricalDistribution.prototype.increment=function(t){this[t]=this.at(t)+1,this.min===void 0?this.min=t:t<this.min&&(this.min=t),this.max===void 0?this.max=t:this.max<t&&(this.max=t)},a.EmpiricalDistribution.prototype.normalize=function(){for(var t=0,e=this.min;e<=this.max;++e)t+=this.at(e);if(t!==0)for(var e=this.min;e<=this.max;++e)this[e]=this.at(e)/t},a.EnsembleSplit=function(t){this.subproblems={},this.parentProblem=t},a.EnsembleSplit.prototype.increment=function(t,e,u,C,v){if(v!==0){t=t.collapseRanges(u),e=e.collapseRanges(C);var y=this._subproblemKey(t,e);this.subproblems[y]||(this.subproblems[y]=this._problemFactory(t,e)),this.subproblems[y].distribution[u-t.dead()][C-e.dead()]+=v}},a.EnsembleSplit.prototype.getSubproblems=function(){var t=this.subproblems;return Object.keys(this.subproblems).map(function(e){return t[e]})},a.EnsembleSplit.prototype._problemFactory=function(t,e){var u=t.rangesLength(),C=e.rangesLength(),v=a.createMatrix(this.parentProblem.distribution.rows-u,this.parentProblem.distribution.columns-C,0),y=b(this.parentProblem.attacker,t.ranges),g=b(this.parentProblem.defender,e.ranges);return new a.Problem(v,y,g);function b(s,d){for(var V=!0,U=0;U<d.length/2;++U)if(!isNaN(d[U*2])){V=!1;break}if(V)return s;for(var R=s.slice(),U=d.length/2-1;0<=U;--U)isNaN(d[U*2])||R.splice(d[U*2],d[U*2+1]-d[U*2]||1);return R}},a.EnsembleSplit.prototype._subproblemKey=function(t,e){return"a"+t.rangesKey()+"d"+e.rangesKey()},a.Victim=function(){this.ranges=[]},a.Victim.prototype.addRange=function(t,e){var u=this.ranges;if(!isNaN(t)&&t!==e){if(u.length){if(u[u.length-1]===t){u[u.length-1]=e===void 0?t+1:e;return}if(u[u.length-1]===void 0&&u[u.length-2]+1===t){e===void 0?u[u.length-1]=t+1:u[u.length-1]=e;return}}t+1===e?this.ranges.push(t,void 0):this.ranges.push(t,e)}},a.Victim.prototype.rangesLength=function(){for(var t=0,e=0;e<this.ranges.length/2;++e)t+=u(this.ranges,e);return t;function u(C,v){var y=v*2;return isNaN(C[y])?0:isNaN(C[y+1])?1:C[y+1]-C[y]}},a.Victim.prototype.dead=function(){return this._dead!==void 0?this._dead:this.rangesLength()},a.Victim.prototype.collapseRanges=function(t){var e=this.ranges;if(e.length&&(e[e.length-1]===t||e[e.length-1]===void 0&&e[e.length-2]+1===t)){var u;return u=new a.Victim,u.ranges=e.slice(0,e.length-2),u._dead=this.rangesLength(),u}return this},a.Victim.prototype.rangesKey=function(){for(var t=[],e=0;e<this.ranges.length/2;++e)t.push(this.ranges[e*2]+(this.ranges[e*2+1]===void 0?"":"-"+this.ranges[e*2+1]));return t.join(",")},a.Victim.Null=new a.Victim,a.binarySearch=function(t,e,u){for(var C=0,v=t.length-1;C<=v;){var y=v+C>>1,g=u(e,t[y]);if(g>0)C=y+1;else if(g<0)v=y-1;else return y}return-C-1}})(W)}(oe)),oe}var se={},fe;function Re(){return fe||(fe=1,function(W){(function(a){a.dieSides=10,a.BattleType={Space:"Space",Ground:"Ground"},a.BattleSide={attacker:"attacker",defender:"defender",opponent:function(v){return{attacker:"defender",defender:"attacker"}[v]}},a.SideUnits={attacker:"attackerUnits",defender:"defenderUnits"};var t={Flagship:"Flagship",WarSun:"WarSun",Dreadnought:"Dreadnought",Cruiser:"Cruiser",Carrier:"Carrier",Destroyer:"Destroyer",Fighter:"Fighter",Ground:"Ground",PDS:"PDS"};a.UnitType=t;var e={Flagship:"X",WarSun:"W",Dreadnought:"D",Cruiser:"C",Destroyer:"+",Carrier:"V",Fighter:"F",Ground:"G",PDS:"P"};a.Race={Arborec:"Arborec",Creuss:"Creuss",Hacan:"Hacan",JolNar:"JolNar",L1Z1X:"L1Z1X",Letnev:"Letnev",Mentak:"Mentak",Muaat:"Muaat",Naalu:"Naalu",Saar:"Saar",Sardakk:"Sardakk",Sol:"Sol",Virus:"Virus",Winnu:"Winnu",Xxcha:"Xxcha",Yin:"Yin",Yssaril:"Yssaril"},a.RacesDisplayNames={Arborec:"Arborec",Creuss:"Creuss",Hacan:"Hacan",JolNar:"Jol-Nar",L1Z1X:"L1Z1X",Letnev:"Letnev",Mentak:"Mentak",Muaat:"Muaat",Naalu:"Naalu",Virus:"Nekro Virus",Saar:"Saar",Sardakk:"Sardakk N'orr",Sol:"Sol",Winnu:"Winnu",Xxcha:"Xxcha",Yin:"Yin",Yssaril:"Yssaril"};function u(v,y,g){this.title=v,this.description=y,this.limitedTo=g}u.prototype.availableFor=function(v){return this.limitedTo===void 0||this.limitedTo===v},a.ActionCards={moraleBoost:new u("Morale Boost 1st round","+1 dice modifier to all units during the first battle round"),fireTeam:new u("Fire Team 1st round","Reroll dice after first round of invasion combat"),fighterPrototype:new u("Fighter Prototype","+2 dice modifier to Fighters during the first battle round"),bunker:new u("Bunker","-4 dice modifier to Bombardment rolls","defender"),experimentalBattlestation:new u("Experimental Battlestation","Additional unit with Space Cannon 5(x3)"),maneuveringJets:new u("Maneuvering Jets","Cancel 1 Space Cannon hit"),riskDirectHit:new u("Risk Direct Hit","Damage units vulnerable to Direct Hit before killing off fodder")},a.Technologies={antimassDeflectors:new u("Antimass Deflectors","-1 to opponents' Space Cannon rolls"),gravitonLaser:new u("Graviton Laser System","Space Cannon hits should be applied to non-fighters if possible"),plasmaScoring:new u("Plasma Scoring","One additional die for one unit during Space Cannon or Bombardment"),magenDefense:new u("Magen Defense Grid","Opponent doesn't throw dice for one round if you have Planetary Shield","defender"),x89Omega:new u("X-89 Bacterial Weapon Ω","Destroy all by bombardment if at least one destroyed","attacker"),magenDefenseOmega:new u("Magen Defense Grid Ω","1 hit at the start of ground combat when having structures","defender"),hasDock:new u("Has Dock","Defender has a dock for Magen Defence Grid Ω","defender"),duraniumArmor:new u("Duranium Armor","After each round repair 1 unit that wasn't damaged this round"),assaultCannon:new u("Assault Cannon","Opponent destroys 1 non-Fighter ship if you have at least 3 non-Fighters")},a.Agendas={publicizeSchematics:new u("Publicize Weapon Schematics","WarSuns don't sustain damage"),conventionsOfWar:new u("Conventions of War","No bombardment","defender"),prophecyOfIxth:new u("Prophecy of IXTH","+1 to Fighters rolls")},a.Promissory={letnevMunitionsFunding:new u("Munitions Reserves / War Funding 1st round","Reroll dice during first space combat round"),tekklarLegion:new u("Tekklar Legion","+1 in invasion combat. -1 to Sardakk if he's the opponent")},a.RaceSpecificTechnologies={Letnev:{nonEuclidean:new u("Non-Euclidean Shielding","Sustain Damage absorbs 2 hits"),l4Disruptors:new u("L4 Disruptors","During an Invasion units cannot use Space Cannon against you","attacker")},Sardakk:{valkyrieParticleWeave:new u("Valkyrie Particle Weave","If opponent produces at least one hit in Ground combat, you produce one additional hit")}},a.UnitInfo=function(){function v(y,g){this.type=y;var b=e[this.type];this.shortType=g.isDamageGhost?b.toLowerCase():b,this.battleValue=g.battleValue||NaN,this.battleDice=g.battleDice!==void 0?g.battleDice:1,this.bombardmentValue=g.bombardmentValue||NaN,this.bombardmentDice=g.bombardmentDice||0,this.spaceCannonValue=g.spaceCannonValue||NaN,this.spaceCannonDice=g.spaceCannonDice||0,this.barrageValue=g.barrageValue||NaN,this.barrageDice=g.barrageDice||0,this.sustainDamageHits=g.sustainDamageHits||0,this.isDamageGhost=g.isDamageGhost||!1,this.damageCorporeal=void 0,this.damaged=!1,this.damagedThisRound=!1,this.race=g.race,this.cost=g.cost}return v.prototype.clone=function(){return new v(this.type,this)},v.prototype.toDamageGhost=function(){var y=new v(this.type,{sustainDamageHits:this.sustainDamageHits,battleDice:0,isDamageGhost:!0});return y.damageCorporeal=this,this.damaged=!1,this.damagedThisRound=!1,y},v}(),a.ThrowType={Battle:"battle",Bombardment:"bombardment",SpaceCannon:"spaceCannon",Barrage:"barrage"},a.ThrowValues={battle:"battleValue",bombardment:"bombardmentValue",spaceCannon:"spaceCannonValue",barrage:"barrageValue"},a.ThrowDice={battle:"battleDice",bombardment:"bombardmentDice",spaceCannon:"spaceCannonDice",barrage:"barrageDice"},a.StandardUnits={WarSun:new a.UnitInfo(t.WarSun,{sustainDamageHits:1,battleValue:3,battleDice:3,bombardmentValue:3,bombardmentDice:3,cost:12}),Dreadnought:new a.UnitInfo(t.Dreadnought,{sustainDamageHits:1,battleValue:5,bombardmentValue:5,bombardmentDice:1,cost:4}),Cruiser:new a.UnitInfo(t.Cruiser,{battleValue:7,cost:2}),Carrier:new a.UnitInfo(t.Carrier,{battleValue:9,cost:3}),Destroyer:new a.UnitInfo(t.Destroyer,{battleValue:9,barrageValue:9,barrageDice:2,cost:1}),Fighter:new a.UnitInfo(t.Fighter,{battleValue:9,cost:.5}),PDS:new a.UnitInfo(t.PDS,{spaceCannonValue:6,spaceCannonDice:1}),Ground:new a.UnitInfo(t.Ground,{battleValue:8,cost:.5}),ExperimentalBattlestation:new a.UnitInfo("Bloodthirsty Space Dock",{spaceCannonValue:5,spaceCannonDice:3})},a.RaceSpecificUnits={Sardakk:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:6,battleDice:2,race:a.Race.Sardakk,cost:8}),Dreadnought:new a.UnitInfo(t.Dreadnought,{sustainDamageHits:1,battleValue:5,bombardmentValue:4,bombardmentDice:2,cost:4})},JolNar:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:6,battleDice:2,race:a.Race.JolNar,cost:8})},Winnu:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:7,battleDice:void 0,race:a.Race.Winnu,cost:8})},Xxcha:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:7,battleDice:2,spaceCannonValue:5,spaceCannonDice:3,race:a.Race.Xxcha,cost:8})},Yin:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:9,battleDice:2,race:a.Race.Yin,cost:8})},Yssaril:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,race:a.Race.Yssaril,cost:8})},Sol:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,race:a.Race.Sol,cost:8}),Ground:new a.UnitInfo(t.Ground,{battleValue:7,cost:.5})},Creuss:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:1,race:a.Race.Creuss,cost:8})},L1Z1X:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,race:a.Race.L1Z1X,cost:8})},Mentak:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:7,battleDice:2,race:a.Race.Mentak,cost:8})},Naalu:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:9,battleDice:2,race:a.Race.Naalu,cost:8}),Fighter:new a.UnitInfo(t.Fighter,{battleValue:8,cost:.5})},Virus:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:9,battleDice:2,race:a.Race.Virus,cost:8})},Arborec:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:7,battleDice:2,race:a.Race.Arborec,cost:8})},Letnev:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,bombardmentValue:5,bombardmentDice:3,race:a.Race.Letnev,cost:8})},Saar:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,barrageValue:6,barrageDice:4,race:a.Race.Saar,cost:8})},Muaat:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,race:a.Race.Muaat,cost:8})},Hacan:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:7,battleDice:2,race:a.Race.Hacan,cost:8})}},a.StandardUpgrades={Dreadnought:new a.UnitInfo(t.Dreadnought,{sustainDamageHits:1,battleValue:5,bombardmentValue:5,bombardmentDice:1,cost:4}),Cruiser:new a.UnitInfo(t.Cruiser,{battleValue:6,cost:2}),Destroyer:new a.UnitInfo(t.Destroyer,{battleValue:8,barrageValue:6,barrageDice:3,cost:1}),Fighter:new a.UnitInfo(t.Fighter,{battleValue:8,cost:.5}),PDS:new a.UnitInfo(t.PDS,{spaceCannonValue:5,spaceCannonDice:1}),Ground:new a.UnitInfo(t.Ground,{battleValue:7,cost:.5})},a.RaceSpecificUpgrades={Sol:{Carrier:new a.UnitInfo(t.Carrier,{sustainDamageHits:1,battleValue:9,cost:3}),Ground:new a.UnitInfo(t.Ground,{battleValue:6,cost:.5})},L1Z1X:{Dreadnought:new a.UnitInfo(t.Dreadnought,{sustainDamageHits:1,battleValue:4,bombardmentValue:4,bombardmentDice:1,cost:4})},Naalu:{Fighter:new a.UnitInfo(t.Fighter,{battleValue:7,cost:.5})},Muaat:{WarSun:new a.UnitInfo(t.WarSun,{sustainDamageHits:1,battleValue:3,battleDice:3,bombardmentValue:3,bombardmentDice:3,cost:10})}},a.MergedUnits={},a.MergedUpgrades={};for(var C in a.Race)a.MergedUnits[C]=Object.assign({},a.StandardUnits,a.RaceSpecificUnits[C]),a.MergedUpgrades[C]=Object.assign({},a.StandardUpgrades,a.RaceSpecificUpgrades[C]);a.expandFleet=function(v,y){var g=v.options||{attacker:{},defender:{}},b=v.battleType,s=g[y],d=a.BattleSide.opponent(y),V=g[d],U=a.MergedUnits[s.race],R=a.MergedUpgrades[s.race],z=b===a.BattleType.Space&&V.race===a.Race.Mentak&&(v[a.SideUnits[d]][t.Flagship]||{count:0}).count!==0,E=[],L=v[a.SideUnits[y]];for(var Y in t)for(var $=L[Y]||{count:0},K=0;K<$.count;K++){var Z=($.upgraded?R:U)[Y],J=Z.clone();E.push(J),Z.sustainDamageHits>0&&!z&&!(Y===t.WarSun&&s.publicizeSchematics)&&(K<$.count-($.damaged||0)?E.push(J.toDamageGhost()):J.damaged=!0)}var Q=j(),X=b===a.BattleType.Space&&s.race===a.Race.Virus&&(L[t.Flagship]||{count:0}).count!==0,m=b===a.BattleType.Ground&&s.race===a.Race.Naalu&&(L[t.Flagship]||{count:0}).count!==0,B=M(X),G={};G[t.Ground]=1,G[t.Fighter]=2;var P,I;return m?(I=(L[t.Fighter]||{}).upgraded&&!(L[t.Ground]||{}).upgraded&&E.find(function(r){return r.type===t.Ground}),P=_):(L[t.Dreadnought]||{}).upgraded?P=ee:P=O,E.sort(P),b===a.BattleType.Space&&s.experimentalBattlestation&&E.push(a.StandardUnits.ExperimentalBattlestation),E.comparer=P,E.filterForBattle=n,E;function j(){return[t.Flagship,t.WarSun,t.Dreadnought,t.Cruiser,t.Destroyer,t.Carrier,t.Fighter]}function M(r){var o=[],c=0;for(var i in t)o[i]=c++;if(r){var A=o[t.Ground];o[t.Ground]=o[t.Fighter],o[t.Fighter]=A}return o}function O(r,o){var c=B[r.type]-B[o.type],i=(r.isDamageGhost?1:0)-(o.isDamageGhost?1:0),A=(o.damaged?1:0)-(r.damaged?1:0);if(s.riskDirectHit){var h=i*1e3+c*10+A;return s.race!==a.Race.Letnev?h:r.type===t.Flagship&&r.isDamageGhost?o.type===t.Flagship&&o.isDamageGhost?0:1:o.type===t.Flagship&&o.isDamageGhost?-1:h}else return c*1e3+i*10+A}function ee(r,o){return s.riskDirectHit?O(r,o):r.type===t.Dreadnought&&r.isDamageGhost?o.type===t.Dreadnought&&o.isDamageGhost?0:1:o.type===t.Dreadnought&&o.isDamageGhost?-1:O(r,o)}function _(r,o){var c=G[r.type]-G[o.type];return I?r===I?-1:o===I?1:-c:c}function n(){var r=this.filter(function(o){return b===a.BattleType.Space?Q.indexOf(o.type)>=0||X&&o.type===a.UnitType.Ground:o.type===t.Ground||m&&o.type===a.UnitType.Fighter});return r.comparer=this.comparer,r}},a.upgradeable=function(v,y){return!!(a.StandardUpgrades.hasOwnProperty(y)||a.RaceSpecificUpgrades[v]&&a.RaceSpecificUpgrades[v].hasOwnProperty(y))},a.damageable=function(v,y,g){return(g?a.MergedUpgrades:a.MergedUnits)[v][y].sustainDamageHits>0}})(W)}(se)),se}(function(W){(function(a){var t,e;typeof Ue=="function"?(t=Pe(),e=Re()):(t=window,e=window),a.calculator=function(){var u=$(),C=L();return{computeProbabilities:v};function v(n){var r=n.battleType,o=n.options||{attacker:{},defender:{}},c=e.expandFleet(n,e.BattleSide.attacker),i=e.expandFleet(n,e.BattleSide.defender),A=c.filterForBattle(),h=i.filterForBattle(),l=t.createMatrix(A.length+1,h.length+1,0);l[A.length][h.length]=1;var p=[new t.Problem(l,A,h)],w=C;if(o.attacker.race===e.Race.Mentak){w=C.slice();var f=w[1];if(w[1]=w[2],w[2]=f,w[1].name!=="Mentak racial"||w[2].name!=="Assault Cannon")throw new Error("unexpected pre-battle actions order")}w.forEach(function(k){k.appliesTo===r&&(p=k.execute(p,c,i,o))});for(var S=0;S<p.length;++S)p[S].attacker.length&&p[S].defender.length&&y(p[S],r,c,i,o);var D=new t.DistributionBase(-A.length,h.length),F=A.map(function(k){return[k.shortType]}),x=h.map(function(k){return[k.shortType]});return p.forEach(function(k){D[0]=D.at(0)+k.distribution[0][0];for(var T=1;T<k.distribution.rows;T++)D[-T]=D.at(-T)+k.distribution[T][0],F[T-1].indexOf(k.attacker[T-1].shortType)<0&&F[T-1].push(k.attacker[T-1].shortType);for(var H=1;H<k.distribution.columns;H++)D[H]=D.at(H)+k.distribution[0][H],x[H-1].indexOf(k.defender[H-1].shortType)<0&&x[H-1].push(k.defender[H-1].shortType)}),{distribution:D,attacker:F.map(function(k){return k.reduce(function(T,H){return T+H})}),defender:x.map(function(k){return k.reduce(function(T,H){return T+H})})}}function y(n,r,o,c,i){var A=Y(r,i.attacker,i.defender,n.attacker,!0),h=Y(r,i.defender,i.attacker,n.defender,!0),l=r===e.BattleType.Ground&&i.attacker.fireTeam||r===e.BattleType.Space&&i.attacker.letnevMunitionsFunding,p=r===e.BattleType.Ground&&i.defender.fireTeam||r===e.BattleType.Space&&i.defender.letnevMunitionsFunding,w=r===e.BattleType.Ground&&i.defender.magenDefense&&c.some(M(e.UnitType.PDS))&&!o.some(M(e.UnitType.WarSun)),f={valkyrieParticleWeave:r===e.BattleType.Ground,winnuFlagship:r===e.BattleType.Space};if(r===e.BattleType.Ground&&i.defender.magenDefenseOmega&&(i.defender.hasDock||c.some(M(e.UnitType.PDS)))){var S=Z([1],n.attacker.length+1),D=Z([0,1],n.defender.length);D.unshift([1]),E(n,S,D,i)}if(A!==void 0||h!==void 0||w||l||p){var F;w?F=function(){return Z([1],n.attacker.length+1)}:F=function(){return b(n.attacker,e.ThrowType.Battle,A,l)};var x=function(){return b(n.defender,e.ThrowType.Battle,h,p)};if(i.attacker.race===e.Race.L1Z1X&&r===e.BattleType.Ground){var k=n.distribution[0];n.distribution[0]=new Array(n.distribution.columns),n.distribution[0].fill(0),E(n,F,x,i,f),C.find(function(H){return H.name==="Bombardment"}).execute([n],o,c,i);for(var T=0;T<n.distribution.columns;++T)n.distribution[0][T]+=k[T]}else E(n,F,x,i,f);r===e.BattleType.Space&&j(n,i)}if(w&&(A!==void 0||l)){var F=function(){return b(n.attacker,e.ThrowType.Battle,A,l)},x=function(){return b(n.defender,e.ThrowType.Battle,Y(r,i.defender,i.attacker,n.defender,!1))};E(n,F,x,i,f)}g(n,r,o,c,i)}function g(n,r,o,c,i){var A=n.distribution,h=b(n.attacker,e.ThrowType.Battle,Y(r,i.attacker,i.defender,n.attacker,!1)),l=b(n.defender,e.ThrowType.Battle,Y(r,i.defender,i.attacker,n.defender,!1));if(i.attacker.race===e.Race.L1Z1X&&r===e.BattleType.Ground){var p=J(o,c,i);p.length===1&&(p=void 0)}else var p=void 0;for(var w=r===e.BattleType.Space&&(i.attacker.race===e.Race.Winnu&&n.attacker.some(M(e.UnitType.Flagship))||i.defender.race===e.Race.Winnu&&n.defender.some(M(e.UnitType.Flagship))),f=i.attacker.race===e.Race.Yin?_(n.attacker,M(e.UnitType.Flagship))+1:0,S=i.defender.race===e.Race.Yin?_(n.defender,M(e.UnitType.Flagship))+1:0,D=A.rows-1;0<D;D--)for(var F=A.columns-1;0<F;F--){w&&(i.attacker.race===e.Race.Winnu&&I(n.attacker,n.defender,F)&&(h=b(n.attacker,e.ThrowType.Battle,Y(r,i.attacker,i.defender,n.attacker,!1))),i.defender.race===e.Race.Winnu&&I(n.defender,n.attacker,D)&&(l=b(n.defender,e.ThrowType.Battle,Y(r,i.defender,i.attacker,n.defender,!1))));var x=X(h[D],n.defender,F-1,i.defender),k=X(l[F],n.attacker,D-1,i.attacker),T=U(x,k,F+1,D+1);r===e.BattleType.Ground&&(T=m(T,i,F+1,D+1)),p&&(T=z(T,p,F+1,D+1));var H;if(A[D][F]!==0){H=A[D][F]/(1-T.at(0,0));for(var N=0;N<T.rows;N++)for(var q=0;q<T.columns&&q<=D;q++)if(!(N===0&&q===0)){var te=D-q,ae=F-N;(te<f||ae<S)&&(te=ae=0),A[te][ae]+=T.at(N,q)*H}A[D][F]=0}}}function b(n,r,o,c){o=o||0;for(var i=[[1]],A=1;A<=n.length;++A){var h=n[A-1],l=d(h,r,o,c);i.push(V(l,i[A-1]))}return i}function s(n,r,o,c){for(var i=[[1]],A=[[1]],h=0;h<n.length;h++){var l=n[h];if(o(l)){var p=d(l,r,c);A=V(A,p)}i.push(A)}return i}function d(n,r,o,c){var i=n[e.ThrowValues[r]],A=n[e.ThrowDice[r]];if(A===0)return[1];o=o||0;var h=typeof o=="function"?o:function(T){return o},l=[],p=Math.max(Math.min((i-1-h(n))/e.dieSides,1),0);if(n.type===e.UnitType.Flagship&&n.race===e.Race.JolNar&&r===e.ThrowType.Battle){var w=1-p,f=Math.min(.8,p),S=Math.max(0,w-.2),D=Math.max(0,.2-w),F=Math.min(.2,w);l[0]=f*(c?f:1),l[1]=S+(c?p*S:0),l[2]=D+(c?p*D:0),l[3]=F+(c?p*F:0)}else l[0]=p,c&&(l[0]=l[0]*l[0]),l[1]=1-l[0];for(var x=l,k=1;k<A;k++)x=V(x,l);return x}function V(n,r){for(var o=[],c=0;c<n.length+r.length-1;++c)o[c]=0;for(var i=0;i<n.length;++i)for(var A=0;A<r.length;++A)o[i+A]+=n[i]*r[A];return o}function U(n,r,o,c){return{rows:Math.min(o,n.length),columns:Math.min(c,r.length),at:function(i,A){var h=n[i];if(i===o-1)for(;++i<n.length;)h+=n[i];var l=r[A];if(A===c-1)for(;++A<r.length;)l+=r[A];return h*l}}}function R(n,r){return{rows:n.length,columns:r.length,at:function(o,c){return n[o]*r[c]}}}function z(n,r,o,c){return!r||r.length===1?n:B({rows:n.rows+r.length-1,columns:n.columns,at:function(i,A){for(var h=0,l=0;l<=i&&l<r.length;++l)if(i-l<n.rows){var p=r[l];h+=p*n.at(i-l,A)}return h}},o,c)}function E(n,r,o,c,i){var A=n.distribution;i&&!(i.winnuFlagship&&c.attacker.race===e.Race.Winnu)&&(r=r()),i&&!(i.winnuFlagship&&c.defender.race===e.Race.Winnu)&&(o=o()),i=i||{};for(var h=0;h<A.rows;h++)for(var l=0;l<A.columns;l++)if(A[h][l]!==0){var p=r,w=o;i.winnuFlagship&&(c.attacker.race===e.Race.Winnu&&(I(n.attacker,n.defender,l),p=r()),c.defender.race===e.Race.Winnu&&(I(n.defender,n.attacker,h),w=o()));var f=X(p[h],n.defender,l-1,c.defender),S=X(w[l],n.attacker,h-1,c.attacker),D=U(f,S,l+1,h+1);i.valkyrieParticleWeave&&(D=m(D,c,l+1,h+1));for(var F=0;F<D.rows;F++)for(var x=0;x<D.columns;x++)F===0&&x===0||(A[h-x][l-F]+=D.at(F,x)*A[h][l]);A[h][l]*=D.at(0,0)}}function L(){return[{name:"Space Cannon -> Ships",appliesTo:e.BattleType.Space,execute:function(n,r,o,c){var i=[],A=c.attacker.race===e.Race.Virus&&r.some(M(e.UnitType.Flagship))&&r.some(M(e.UnitType.Ground)),h=c.defender.race===e.Race.Virus&&o.some(M(e.UnitType.Flagship))&&o.some(M(e.UnitType.Ground));return n.forEach(function(f){var S=l(r,c.attacker,c.defender),D=l(o,c.defender,c.attacker);if(c.attacker.gravitonLaser||c.defender.gravitonLaser||A||h){for(var F=new t.EnsembleSplit(f),x=f.distribution,k=0;k<x.rows;k++)for(var T=0;T<x.columns;T++)if(x[k][T]!==0)for(var H=R(S,D),N=0;N<H.rows;N++)for(var q=0;q<H.columns;q++){var te=w(f.attacker,k,q,c.attacker,c.defender),ae=w(f.defender,T,N,c.defender,c.attacker);F.increment(te,ae,k,T,H.at(N,q)*x[k][T])}var ne=F.getSubproblems();ne.forEach(function(Oe){j(Oe,c,f)}),i.push.apply(i,ne)}else{var re=Z(S,f.attacker.length+1),Ne=Z(D,f.defender.length+1);E(f,re,Ne,c),j(f,c),i.push(f)}}),i;function l(f,S,D){var F=D.antimassDeflectors?-1:0,x=f.filter(p),k;return S.plasmaScoring?k=Q(x,e.ThrowType.SpaceCannon,F):k=K(x,e.ThrowType.SpaceCannon,F),P(k,D.maneuveringJets?1:0)}function p(f){return f.spaceCannonDice!==0}function w(f,S,D,F,x){if(D===0||S===0)return t.Victim.Null;if(!x.gravitonLaser&&!F.nonEuclidean&&!f.some(M(e.UnitType.Ground))){var q=new t.Victim;return q._dead=Math.min(D,f.map(te).reduce(ae)),q}for(var k=[],N=null,T=S-1;0<=T&&0<D;){var H=f[T];H.type===e.UnitType.Fighter&&x.gravitonLaser||H.type===e.UnitType.Ground?N=null:(N===null&&(N=[T+1,T+1],k.push(N)),N[0]--,D-=te(H)),T--}var N=null;if(x.gravitonLaser)for(var T=S-1;0<=T&&0<D;--T)f[T].type===e.UnitType.Fighter&&(N===null&&(N=[T+1,T+1],k.push(N)),N[0]--,D-=te(f[T]));k.sort(function(ne,re){return ne[0]-re[0]});var q=new t.Victim;return k.forEach(function(ne){q.addRange(ne[0],ne[1])}),q;function te(ne){return ne.isDamageGhost&&F.nonEuclidean?2:1}function ae(ne,re){return ne+re}}}},{name:"Assault Cannon",appliesTo:e.BattleType.Space,execute:function(n,r,o,c){if(!c.attacker.assaultCannon&&!c.defender.assaultCannon)return n;var i=[];return n.forEach(function(l){for(var p=new t.EnsembleSplit(l),w=A(l.attacker,c.attacker.assaultCannon),f=A(l.defender,c.defender.assaultCannon),S=h(l.attacker,f<l.defender.length,!0),D=h(l.defender,w<l.attacker.length,!1),F=l.distribution,x=0;x<F.rows;x++)for(var k=0;k<F.columns;k++)if(F[x][k]!==0){var T=f<k?S[x]:t.Victim.Null,H=w<x?D[k]:t.Victim.Null;p.increment(T,H,x,k,F[x][k])}var N=p.getSubproblems();N.forEach(function(q){j(q,c,l)}),i.push.apply(i,N)}),i;function A(l,p){for(var w=0,f=0;f<l.length;f++)if(O(l[f])&&w++,w>=3&&p)return f;return f}function h(l,p,w){var f=new Array(l.length+1);if(!p)f.fill(t.Victim.Null);else{f[0]=t.Victim.Null;for(var S=void 0,D=void 0,F=void 0,x=0;x<l.length;++x){(w?O:ee)(l[x])?(S=l[x],D=x,F=void 0):S&&l[x].damageCorporeal===S&&(F=x);var k=new t.Victim;D!==void 0&&(k.addRange(D,void 0),F!==void 0&&k.addRange(F,void 0)),f[x+1]=k}}return f}}},{name:"Mentak racial",appliesTo:e.BattleType.Space,execute:function(n,r,o,c){return n.forEach(function(i){if(c.attacker.race!==e.Race.Mentak&&c.defender.race!==e.Race.Mentak)return;function A(p,w){var f=0,S=w.moraleBoost?1:0;return s(p,e.ThrowType.Battle,function(D){return 2<=f?!1:D.type===e.UnitType.Cruiser||D.type===e.UnitType.Destroyer?(f++,!0):!1},S)}var h,l;c.attacker.race===e.Race.Mentak?h=A(i.attacker,c.attacker):h=Z([1],i.attacker.length+1),c.defender.race===e.Race.Mentak?l=A(i.defender,c.defender):l=Z([1],i.defender.length+1),E(i,h,l,c),j(i,c)}),n}},{name:"Anti-Fighter Barrage",appliesTo:e.BattleType.Space,execute:function(n,r,o,c){var i=[];return n.forEach(function(p){for(var w=new t.EnsembleSplit(p),f=s(p.attacker,e.ThrowType.Barrage,A),S=s(p.defender,e.ThrowType.Barrage,A),D=h(p.attacker,M(e.UnitType.Fighter)),F=h(p.defender,M(e.UnitType.Fighter)),x=p.distribution,k=0;k<x.rows;k++)for(var T=0;T<x.columns;T++)if(x[k][T]!==0)for(var H=R(f[k],S[T]),N=0;N<H.rows;N++)for(var q=0;q<H.columns;q++){var te=l(D,k,q),ae=l(F,T,N);w.increment(te,ae,k,T,H.at(N,q)*x[k][T])}i.push.apply(i,w.getSubproblems())}),i;function A(p){return p.barrageDice!==0}function h(p,w){for(var f=void 0,S=0;S<p.length;S++)if(f===void 0)w(p[S])&&(f=S);else if(!w(p[S]))break;return f===void 0&&(f=S),{from:f,to:S}}function l(p,w,f){if(f===0||w<p.from)return t.Victim.Null;var S=new t.Victim;return S.addRange(p.from,Math.min(w,p.from+f,p.to)),S}}},{name:"Bombardment",appliesTo:e.BattleType.Ground,execute:function(n,r,o,c){return n.forEach(function(i){var A=J(r,o,c),h=Z(A,i.attacker.length+1),l=Z([1],i.defender.length+1);E(i,h,l,c)}),n}},{name:"Space Cannon -> Ground Forces",appliesTo:e.BattleType.Ground,execute:function(n,r,o,c){return n.forEach(function(i){if(!c.attacker.l4Disruptors){var A=Z([1],i.attacker.length+1),h=c.attacker.antimassDeflectors?-1:0,l=o.filter(M(e.UnitType.PDS)),p;c.defender.plasmaScoring?p=Q(l,e.ThrowType.SpaceCannon,h):p=K(l,e.ThrowType.SpaceCannon,h);var w=Z(P(p,c.attacker.maneuveringJets?1:0),i.defender.length+1);E(i,A,w,c)}}),n}}]}function Y(n,r,o,c,i){for(var A=void 0,h=0;h<u.length;h++)if(!(!i&&u[h].firstRoundOnly)){var l=u[h].apply(n,r,o,c);if(l&&!A){A=l;continue}l&&(A=p(A,l))}return A;function p(w,f){var S=typeof w=="function",D=typeof f=="function";return S||D?function(F){return(S?w(F):w)+(D?f(F):f)}:w+f}}function $(){return[{name:"moraleBoost",firstRoundOnly:!0,apply:function(n,r){return r.moraleBoost?1:0}},{name:"fighterPrototype",firstRoundOnly:!0,apply:function(n,r){return n===e.BattleType.Space&&r.fighterPrototype?function(o){return o.type===e.UnitType.Fighter?2:0}:0}},{name:"Sardakk",firstRoundOnly:!1,apply:function(n,r){return r.race===e.Race.Sardakk?1:0}},{name:"Sardakk Flagship",firstRoundOnly:!1,apply:function(n,r,o,c){return r.race===e.Race.Sardakk&&n===e.BattleType.Space&&c.some(M(e.UnitType.Flagship))?function(i){return i.type!==e.UnitType.Flagship?1:0}:0}},{name:"JolNar",firstRoundOnly:!1,apply:function(n,r){return r.race===e.Race.JolNar?-1:0}},{name:"prophecyOfIxth",firstRoundOnly:!1,apply:function(n,r){return r.prophecyOfIxth?function(o){return o.type===e.UnitType.Fighter?1:0}:0}},{name:"tekklarLegion",firstRoundOnly:!1,apply:function(n,r){return n===e.BattleType.Ground&&r.tekklarLegion&&r.race!==e.Race.Sardakk?1:0}},{name:"tekklarLegion of the opponent",firstRoundOnly:!1,apply:function(n,r,o){return n===e.BattleType.Ground&&o.tekklarLegion&&r.race===e.Race.Sardakk?-1:0}}]}function K(n,r,o,c){return b(n,r,o,c).pop()}function Z(n,r){var o=new Array(r);return o.fill(n),o}function J(n,r,o){var c=!o.defender.conventionsOfWar&&(!r.some(M(e.UnitType.PDS))||n.some(M(e.UnitType.WarSun))||o.attacker.race===e.Race.Letnev&&n.some(M(e.UnitType.Flagship)));if(!c)return[1];var i=o.defender.bunker?-4:0,A=n.filter(p),h=o.attacker.plasmaScoring?Q(A,e.ThrowType.Bombardment,i):K(A,e.ThrowType.Bombardment,i);if(o.attacker.x89Omega){var l=new Array(r.length+1);l.fill(0),l[0]=h[0],l[l.length-1]=h.reduce(function(w,f){return w+f})-h[0],h=l}return h;function p(w){return w.bombardmentDice!==0}}function Q(n,r,o){var c=b(n,r,o).pop(),i=G(n,e.ThrowValues[r]);if(i){var A=i.clone();A[e.ThrowDice[r]]=1;var h=d(A,r,o);c=V(h,c)}return c}function X(n,r,o,c){if(c.nonEuclidean&&n.length>2){for(var i=n.slice(),A=1;A<i.length&&0<o;A++)r[o].isDamageGhost&&P(i,1,A),o--;return i}else return n}function m(n,r,o,c){return!r.attacker.valkyrieParticleWeave&&!r.defender.valkyrieParticleWeave?n:B({rows:n.rows+(r.attacker.valkyrieParticleWeave?1:0),columns:n.columns+(r.defender.valkyrieParticleWeave?1:0),at:function(i,A){if(i===0&&A===0)return n.at(0,0);if(i===0)return r.attacker.valkyrieParticleWeave||A===n.columns?0:n.at(i,A);if(A===0)return r.defender.valkyrieParticleWeave||i===n.rows?0:n.at(i,A);if(i===1&&A===1&&r.attacker.valkyrieParticleWeave&&r.defender.valkyrieParticleWeave)return(n.columns===1?0:n.at(0,1))+(n.rows===1?0:n.at(1,0));if(r.attacker.valkyrieParticleWeave&&r.defender.valkyrieParticleWeave&&(i===n.rows&&A===1||i===1&&A===n.columns))return 0;var h=r.attacker.valkyrieParticleWeave&&!(r.defender.valkyrieParticleWeave&&A===1)?1:0,l=r.defender.valkyrieParticleWeave&&!(r.attacker.valkyrieParticleWeave&&i===1)?1:0;return n.at(i-h,A-l)}},o,c)}function B(n,r,o){return n.rows<=r&&n.columns<=o?n:{rows:Math.min(n.rows,r),columns:Math.min(n.columns,o),at:function(c,i){for(var A=0,h=c===this.rows-1?n.rows:c+1,l=i===this.columns-1?n.columns:i+1,p=c;p<h;++p)for(var w=i;w<l;++w)A+=n.at(p,w);return A}}}function G(n,r){for(var o=null,c=1/0,i=0;i<n.length;i++)n[i][r]<c&&(o=n[i],c=n[i][r]);return o}function P(n,r,o){o=o||0;for(var c=0;c<r;++c){n.length>o+1&&(n[o]+=n[o+1]);for(var i=o+2;i<n.length;i++)n[i-1]=n[i];n.length>o+1&&n.pop()}return n}function I(n,r,o){var c=null;return n.filter(M(e.UnitType.Flagship)).forEach(function(i){i.battleDice=c===null?c=r.slice(0,o).filter(ee).length:c}),c!==null}function j(n,r,o){if(r.attacker.race===e.Race.Yin||r.defender.race===e.Race.Yin){var c=A(n,r,o,e.BattleSide.attacker),i=A(n,r,o,e.BattleSide.defender);h(n.distribution,c,n.distribution.columns),h(n.distribution,n.distribution.rows,i)}function A(l,p,w,f){var S=_(l[f],M(e.UnitType.Flagship));return p[f].race===e.Race.Yin?w&&l[f].length<w[f].length&&S<_(w[f],M(e.UnitType.Flagship))?f===e.BattleSide.attacker?l.distribution.rows:l.distribution.columns:S+1:0}function h(l,p,w){for(var f=0;f<p;++f)for(var S=0;S<w;++S)f===0&&S===0||(l[0][0]+=l[f][S],l[f][S]=0)}}function M(n){return function(r){return r.type===n&&!r.isDamageGhost}}function O(n){return n.type!==e.UnitType.Fighter&&!n.isDamageGhost}function ee(n){return n.type!==e.UnitType.Fighter&&n.type!==e.UnitType.Ground&&!n.isDamageGhost}function _(n,r){for(var o=n.length-1;0<=o;--o)if(r(n[o]))return o;return-1}}()})(W)})(Ae);const he={"The Arborec":"Arborec","The Barony of Letnev":"Letnev","The Clan of Saar":"Saar","The Embers of Muaat":"Muaat","The Emirates of Hacan":"Hacan","The Federation of Sol":"Sol","The Ghosts of Creuss":"Creuss","The L1Z1X Mindnet":"L1Z1X","The Mentak Coalition":"Mentak","The Naalu Collective":"Naalu","The Nekro Virus":"Virus","The Sardakk N'orr":"Sardakk","The Universities of Jol-Nar":"JolNar","The Winnu":"Winnu","The Xxcha Kingdom":"Xxcha","The Yin Brotherhood":"Yin","The Yssaril Tribes":"Yssaril"},pe={Flagship:"Flagship","War Sun":"WarSun",Dreadnought:"Dreadnought",Carrier:"Carrier",Cruiser:"Cruiser",Destroyer:"Destroyer",Fighter:"Fighter",PDS:"PDS",Infantry:"Ground","Space Dock":"PDS"};async function Ve(){const{allBoardSystems:W}=await import("https://www.twilightwars.com/js/board-creation.js"),{getPlayers:a}=await import("https://www.twilightwars.com/js/api.js"),{getActiveSystem:t}=await import("https://www.twilightwars.com/js/utils/extras.js"),e=await a(),u=t(W).userData,C=[];if(!u)return"No defending units";for(const E of W)for(const L of E.unitsToMove??[])C.push(L);if(C.length===0){const E=u.units.filter(L=>L.color!==u.units[0].color);if(E.length>0)C.push(...E);else return"No attacking units"}const v={};for(const E of C){const L=pe[E.name];v[L]||(v[L]={count:0}),v[L].count++}const y=e.find(E=>E.color===C[0].color),g=e.find(E=>E.color===u.units[0].color),b={};for(const E of u.units){const L=pe[E.name];b[L]||(b[L]={count:0}),b[L].count++}const s=he[y.faction],d=he[g.faction],V={attackerUnits:v,defenderUnits:b,battleType:"Space",options:{attacker:{race:s,riskDirectHit:!0},defender:{race:d,riskDirectHit:!0}}};var U=Ae.calculator.computeProbabilities(V);let R=0,z=0;for(const E in U.distribution)Number.isInteger(parseInt(E))&&(E.includes("-")?R+=U.distribution[E]:z+=U.distribution[E]);return`${R.toFixed(2)} - ${z.toFixed(2)}`}let ge=document.createElement("template");ge.innerHTML=`
    <style>
        #calculateButton {
            position: absolute;
            top: 15px;
            right: 658px;
            z-index: 1000;
        }
    </style>
    <button id="calculateButton">Calculate Odds</button>
`;class We extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(ge.content.cloneNode(!0)),this.calculateButton=this.shadowRoot.getElementById("calculateButton")}async connectedCallback(){this.calculateButton.addEventListener("click",async()=>{const a=await Ve();this.calculateButton.innerText=a})}}window.customElements.define("ti-odds-component",We);let me=document.createElement("template");me.innerHTML=`
    <style>
        table {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        #units {
            position: relative;
            background-color: rgba(0, 0, 0, 0.8);
            color: white;
            border-radius: 10px;
            padding: 10px;
            display: none; /* Hide the table by default */
        }
        #units td {
            text-align: center;
            min-width: 60px;
            font-size: 16px;
            padding: 5px;
        }
        #showButton {
            position: absolute;
            top: 15px;
            right: 318px;
            z-index: 1000;
        }
        #showButton:hover + #units {
            display: inline-block; /* Show the table when the button is hovered */
        }
    </style>
    <button id="showButton">Show Units</button>
    <table id="units">
    </table>
`;const ve={Flagship:8,"War Sun":12,Dreadnought:4,Carrier:3,Cruiser:2,Destroyer:1,Fighter:.5,PDS:2,Infantry:.5,"Space Dock":0};class Me extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(me.content.cloneNode(!0)),this.unitsContainer=this.shadowRoot.getElementById("units")}async connectedCallback(){const a=await import("https://www.twilightwars.com/js/api.js"),t=await a.getPlayers(),e=await a.getBoardSystems();a.getGameLogs().then(s=>{console.log(s)});const u=document.createElement("tr");this.unitsContainer.appendChild(u);const C=document.createElement("td");u.appendChild(C);const v={Flagship:0,"War Sun":0,Dreadnought:0,Carrier:0,Cruiser:0,Destroyer:0,Fighter:0,PDS:0,Infantry:0,"Space Dock":0},y=t.reduce((s,d)=>(s[d.color]={...v},s),{}),g=t.reduce((s,d)=>(s[d.color]={...v},s),{});e.forEach(s=>{s.units.forEach(d=>{y[d.color][d.name]++,g[d.color][d.name]+=ve[d.name]}),s.planets.forEach(d=>{d.units.forEach(V=>{y[V.color][V.name]++,g[V.color][V.name]+=ve[V.name]})})}),Object.keys(v).forEach(s=>{const d=document.createElement("td");d.textContent=s,u.appendChild(d)});const b=["Unit Value","Trade Goods","Influence","Resources","Technology","Command Counter","Score"];for(const s of b){const d=document.createElement("td");d.textContent=s,u.appendChild(d)}t.forEach(s=>{const d=document.createElement("tr");this.unitsContainer.appendChild(d);const V=document.createElement("td");V.textContent=s.faction,d.appendChild(V),Object.values(y[s.color]).forEach(m=>{const B=document.createElement("td");B.style.color=s.color,B.style.fontWeight="bold",B.style.fontSize="20px",B.textContent=m>0?m.toString():"",d.appendChild(B)});const U=document.createElement("td");U.style.color=s.color,U.style.fontWeight="bold",U.style.fontSize="20px";const R=Object.values(g[s.color]).reduce((m,B)=>m+B,0);U.textContent=R.toString(),d.appendChild(U);const z=document.createElement("td");z.style.color=s.color,z.style.fontWeight="bold",z.style.fontSize="20px",z.textContent=s.tradeGoods.toString(),d.appendChild(z);const E=document.createElement("td");E.style.color=s.color,E.style.fontWeight="bold",E.style.fontSize="20px";const L=Object.values(s.planetCards.map(m=>m.exhausted?0:m.influence)).reduce((m,B)=>m+B,0);E.textContent=L.toString(),d.appendChild(E);const Y=document.createElement("td");Y.style.color=s.color,Y.style.fontWeight="bold",Y.style.fontSize="20px";const $=Object.values(s.planetCards.map(m=>m.exhausted?0:m.resources)).reduce((m,B)=>m+B,0);Y.textContent=$.toString(),d.appendChild(Y);const K=(s.fleetPool+s.strategyPool+s.tacticPool)*2,Z=s.technology.length*6,J=document.createElement("td");J.style.color=s.color,J.style.fontWeight="bold",J.style.fontSize="20px",J.textContent=Z.toString(),d.appendChild(J);const Q=document.createElement("td");Q.style.color=s.color,Q.style.fontWeight="bold",Q.style.fontSize="20px",Q.textContent=K.toString(),d.appendChild(Q);const X=document.createElement("td");X.style.color=s.color,X.style.fontWeight="bold",X.style.fontSize="20px",X.textContent=($+L*2/3+R+Z+K+s.tradeGoods).toFixed(0),d.appendChild(X)})}}window.customElements.define("ti-units-component",Me);let be=document.createElement("template");be.innerHTML=`
    <style>
        #votes {
            position: fixed;
            top: 50%;
            left: 50%;
            background-color: rgba(0, 0, 0, 0.8);
            color: white;
            border-radius: 10px;
            transform: translate(-50%, -50%);
            display: none; /* Hide the table by default */

        }
        #showButton {
            position: absolute;
            top: 15px;
            right: 408px;
            z-index: 1000;
        }
        #showButton:hover + #votes {
            display: block; /* Show the table when the button is hovered */
        }

        .pie {
            width: 400px;
            height: 400px;
            border-radius: 50%
          }
    </style>
    <button id="showButton">Show Votes</button>
    <div id="votes">
          <div class="pie" id="pie1"></div>
    </div>
    <div id="outcomes">
    </div>
  `;const Ge={red:"#500000",green:"#005000",blue:"#000050",yellow:"#505000",purple:"#500050",orange:"#504000"};class Ie extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(be.content.cloneNode(!0)),this.votesContainer=this.shadowRoot.getElementById("votes")}async connectedCallback(){const a=await import("https://www.twilightwars.com/js/api.js"),t=await a.getPlayers(),e=await a.getGame();globalThis.players=t,globalThis.game=e;const u=t.reduce((g,b)=>{if(b.faction==="The Nekro Virus")return g;let s=b.planetCards.reduce((V,U)=>V+U.influence,0),d=b.planetCards.reduce((V,U)=>V+(U.exhausted?U.influence:0),0);return e.phase==="voting"?(g[Ge[b.color]]=d,g[b.color]=s-d):g[b.color]=s,g},{});for(const g of t)g.vote&&!g.vote.abstain&&(u[g.color]=u[g.color]-g.vote.count);const C=Object.values(u).reduce((g,b)=>g+b,0);let v=0;const y=`conic-gradient(${Object.entries(u).map(([g,b],s)=>{const d=`${g} ${(100*v/C).toFixed(2)}%, ${g} ${(100*(v+b)/C).toFixed(2)}%`;return v+=b,d}).join(",")})`;this.votesContainer.getElementsByClassName("pie")[0].style.backgroundImage=y}}window.customElements.define("ti-votes-component",Ie);let ye=document.createElement("template");ye.innerHTML=`
    <style>
        table {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }
        #objectives {
            position: relative;
            background-color: rgba(0, 0, 0, 0.8);
            color: white;
            border-radius: 10px;
            padding: 10px;
            display: none; /* Hide the table by default */
        }
        #objectives td {
            text-align: center;
            min-width: 60px;
            font-size: 16px;
            padding: 5px;
        }
        #showButton {
            position: absolute;
            top: 15px;
            right: 518px;
            z-index: 1000;
        }
        #showButton:hover + #objectives {
            display: inline-block; /* Show the table when the button is hovered */
        }
    </style>
    <button id="showButton">Show Objectives</button>
    <table id="objectives">
    </table>
`;class He extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(ye.content.cloneNode(!0)),this.objectivesContainer=this.shadowRoot.getElementById("objectives")}async connectedCallback(){const a=await import("https://www.twilightwars.com/js/api.js"),t=await a.getPlayers(),e=await a.getGame(),u=document.createElement("tr");this.objectivesContainer.appendChild(u);const C=document.createElement("td");u.appendChild(C),t.forEach(v=>{const y=document.createElement("td");y.textContent=v.faction,u.appendChild(y)}),e.publicObjectives.forEach(v=>{const y=document.createElement("tr");this.objectivesContainer.appendChild(y);const g=document.createElement("td");g.textContent=v.name,y.appendChild(g),t.forEach(b=>{const s=document.createElement("td");s.style.color=b.color,s.style.fontWeight="bold",s.style.fontSize="20px",s.textContent=v.scores.find(d=>d.playerId===b._id)?"✔":"",y.appendChild(s)})})}}window.customElements.define("ti-objectives-component",He);async function Le(){console.log("running main"),await Se(),document.body.appendChild(document.createElement("ti-cards-component")),document.body.appendChild(document.createElement("ti-units-component")),document.body.appendChild(document.createElement("ti-votes-component")),document.body.appendChild(document.createElement("ti-objectives-component")),document.body.appendChild(document.createElement("ti-odds-component")),document.body.appendChild(document.createElement("ti-stats-component"))}Le()})();
