(function(){"use strict";let ce=document.createElement("template");ce.innerHTML=`
    <style>
        :host {
            position: fixed;
            bottom: 0px;
        }
        #cards {
            display: flex;
            position: fixed;
            bottom: -242px;
            transition: bottom 0.5s;
        }
        .card {
            border-radius: 5px;
            margin: 5px;
            overflow: hidden;
        }
        .card img {
            width: 200px;
            height: 300px;
        }
        #cards:hover {
            bottom: 0;
        }
    </style>
    <div id="cards">
    </div>
`;class we extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(ce.content.cloneNode(!0)),this.cardsContainer=this.shadowRoot.getElementById("cards")}async connectedCallback(){const a=await import("https://www.twilightwars.com/js/api.js"),{onActionCardDoubleClick:t}=await import("https://www.twilightwars.com/js/events/action-card.js"),{playerActionCards:e}=await import("https://www.twilightwars.com/js/loaders/load-player-cards.js"),u=await a.getPlayer(),{actionCards:k,secretObjectives:v,promissoryNotes:y}=u;k.forEach(g=>{const b=document.createElement("div");b.ondblclick=()=>{const d=e.find(R=>R.userData.name===g.name);d&&(d.material.opacity=.3,d.scale.x=100,d.scale.y=100,d.visible=!0,setTimeout(()=>{t(),d.scale.x=1,d.scale.y=1,d.material.opacity=1,d.visible=!1},1))},b.className="card",this.cardsContainer.appendChild(b);const o=document.createElement("img");o.src=`/img/action-cards/${g.name}.png`,b.appendChild(o)}),v.forEach(g=>{const b=document.createElement("div");b.className="card",this.cardsContainer.appendChild(b);const o=document.createElement("img");o.src=`/img/objectives/${g.name}.png`,b.appendChild(o)}),y.filter(g=>g.color!==u.color).forEach(g=>{const b=document.createElement("div");b.className="card",this.cardsContainer.appendChild(b);const o=document.createElement("img");"faction"in g?o.src=`/img/faction/${g.faction}/${g.name}.png`:o.src=`/img/misc/${g.color}/${g.name}.png`,b.appendChild(o)})}}window.customElements.define("ti-cards-component",we);const Ce={Alpha:"red",Beta:"blue",Delta:"green"},ke={red:"rgba(255, 0, 0, 1.0)",blue:"rgba(0, 0, 255, 1.0)",green:"rgba(0, 255, 0, 1.0)",yellow:"rgba(255, 255, 0, 1.0)",purple:"rgba(255, 0, 255, 1.0)",black:"rgba(0, 0, 0, 1.0)",orange:"rgba(255, 165, 0, 1.0)"},ie={red:"rgba(255, 150, 150, 1)",blue:"rgba(150, 150, 255, 1)",green:"rgba(150, 255, 150, 1)",yellow:"rgba(255, 255, 0, 1)",purple:"rgba(255, 150, 255, 1)",orange:"rgba(255, 150, 0, 1)",white:"white"},De={Alpha:"♻️",Beta:"🌀",Delta:"🔴",Yellow:"🟡"},Te="rgba(0, 0, 0, 0.8)",le=[[],[{position:[160,290]}],[{position:[120,20]},{position:[160,380]}],[{position:[150,270]},{position:[190,10]},{position:[200,380]}]];async function Se(){const V=await import("https://www.twilightwars.com/js/api.js"),{skeletonHexArray:a}=await import("https://www.twilightwars.com/js/board-creation.js"),t=await V.getBoardSystems();globalThis.boardSystems=t;const e=await V.getPlayers(),u=await V.getGame(),k=new Image;k.src="data:image/png;base64,"+Fe,await new Promise(v=>{k.onload=v}),t.forEach(async v=>{var g,b,o,d;const y=v.number===51?a[a.length-1]:a[v.position];await Be(e,u,v,k,y),(g=y.userData.boardTokens)==null||g.controlTokens.forEach(R=>{R.visible=!1}),(b=y.userData.boardTokens)==null||b.infantry.forEach(R=>{R.visible=!1}),(o=y.userData.boardTokens)==null||o.pds.forEach(R=>{R.visible=!1}),(d=y.userData.boardTokens)==null||d.spaceDock.forEach(R=>{R.visible=!1}),y.material.map.needsUpdate=!0,y.material.needsUpdate=!0})}const Fe="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";async function Be(V,a,t,e,u){var Y,X,$,z;const{CanvasTexture:k,Mesh:v,MeshBasicMaterial:y}=await import("https://www.twilightwars.com/js/vendor/three/build/three.module.js"),{createHexagonGeometry:g}=await import("https://www.twilightwars.com/js/utils/geometries.js"),b=document.createElement("canvas"),o=b.getContext("2d"),d=25;b.width=512,b.height=512;const R=(Y=t.units)==null?void 0:Y[0],M=R?ke[R.color]:null;M&&(o.fillStyle=M,o.fillRect(0,0,b.width,b.height),o.globalCompositeOperation="destination-in",o.drawImage(e,-b.width*.1,-b.height*.1,b.width*1.2,b.height*1.2),o.globalCompositeOperation="source-over");function L(m,x,G,P,I="white",q=!1,W){o.font=`bold ${m}px Arial`;const O=o.measureText(x).width,ee=G-O/2;o.fillStyle=I,o.fillText(x,q?ee:G,P),W&&(o.strokeStyle=W,o.lineWidth=2,o.strokeText(x,q?ee:G,P))}function J(m,x,G,P,I,q="white"){o.beginPath(),o.moveTo(m+I,x),o.lineTo(m+G-I,x),o.quadraticCurveTo(m+G,x,m+G,x+I),o.lineTo(m+G,x+P-I),o.quadraticCurveTo(m+G,x+P,m+G-I,x+P),o.lineTo(m+I,x+P),o.quadraticCurveTo(m,x+P,m,x+P-I),o.lineTo(m,x+I),o.quadraticCurveTo(m,x,m+I,x),o.closePath(),o.fillStyle=q,o.fill()}if(t.anomaly&&L(d*1.5,t.anomaly,256,50,"white",!0),t.wormhole&&L(d*3.5,De[t.wormhole]??t.wormhole,256,500,Ce[t.wormhole],!0),t.isHomeSystem){const m=V.find(P=>P.faction===t.faction),x=m==null?void 0:m.strategyCards.map(P=>P.exhausted?P.number:P.number+"!"),G=a.turn.player.current===(m==null?void 0:m.number);L(d*5,(x==null?void 0:x.join(" "))??"",256,240,G?"red":"white",!0)}const w=V.reduce((m,x)=>(m[x.faction]=x.color,m),{});t.commandTokens&&t.commandTokens.forEach((m,x)=>{const G=w[m];o.lineWidth=20,o.beginPath();const P=2*Math.PI/6*x,I=256+226*Math.cos(P),q=256+266*Math.sin(P),W=256+226*Math.cos(P+2*Math.PI/6),O=256+266*Math.sin(P+2*Math.PI/6);o.moveTo(I,q),o.lineTo(W,O),o.strokeStyle=G,o.stroke()});for(let m=0;m<6;m++){const x=M??"black";o.lineWidth=5,o.beginPath();const G=2*Math.PI/6*m,P=256+256*Math.cos(G),I=256+296*Math.sin(G),q=256+256*Math.cos(G+2*Math.PI/6),W=256+296*Math.sin(G+2*Math.PI/6);o.moveTo(P,I),o.lineTo(q,W),o.strokeStyle=x,o.stroke()}if(t.planets){let m=0;for(const x of t.planets)Q(x,m++)}const U=new k(b);console.log(u);const j=g(.9),K=new y({map:U});new v(j,K),u.userData.canvasTexture=U,u.material.onBeforeCompile=function(m){m.uniforms.canvasTexture={value:U},m.fragmentShader=`
        uniform sampler2D canvasTexture;
      `+m.fragmentShader,m.fragmentShader=m.fragmentShader.replace("gl_FragColor = vec4( outgoingLight, diffuseColor.a );",`
        vec4 tex1Color = texture2D( map, vUv );
        vec4 canvasColor = texture2D( canvasTexture, vUv );
        gl_FragColor = vec4(canvasColor.a * canvasColor.rgb + tex1Color.rgb * (1.0 - canvasColor.a), 1.0);
        `)};function Q(m,x){const G=le[t.planets.length][x].position[0],P=le[t.planets.length][x].position[1],I=V.find(s=>s.planetCards.find(c=>c.name===m.name));function q(s,c,i){const A=I?ie[I.color]:"white";o.fillStyle="white",s.filter(l=>l.name==="PDS").forEach((l,p)=>{L(d,"🛡",c+10+p*30,i-25,A)}),s.filter(l=>l.name==="Space Dock").forEach((l,p)=>{L(d,"🏗",c+10+p*30,i,A)});const h=s.some(l=>l.name==="Infantry"&&l.upgraded);L(d,`🥆${h?"+":""}`,c+82,i+35,A),o.font=`bold ${d*2}px Arial`,L(d*2,s.filter(l=>l.name==="Infantry").length.toString(),c+95,i,A,!0)}const W=I?I.planetCards.find(s=>s.name===m.name):null,O=`${m.resources}/${m.influence}`;let ee,_="";switch(m.tech){case"Warfare":_="🔴";break;case"Biotic":_="🟢";break;case"Cybernetic":ee="white",_="🟡";break;case"Propulsion":ee="white",_="🔵";break}o.font=`bold ${d}px Arial`;const n=o.measureText(O).width;let r="";if(n>0){switch(m.trait){case"Hazardous":o.fillStyle="red",r="☢️";break;case"Industrial":o.fillStyle="green",r="🏭";break;case"Cultural":o.fillStyle="blue",r="🎭";break;default:o.fillStyle="white"}o.fillStyle=ee??"white";const s=I?w[I.faction]:"white";o.font=`bold ${d*2}px Arial`,J(G,P,200,100,10,Te),m.units&&q(m.units,G+80,P+50),L(d*2,O,G+10,P+50,ie[s]),W!=null&&W.exhausted&&(o.lineWidth=5,o.beginPath(),o.moveTo(G+25-n/2,P+30),o.lineTo(G+25+n*1.5,P+30),o.strokeStyle=ie[s],o.stroke()),L(d*.9,m.name+_+r,G+10,P+85,ie[s])}}if(t.units){const m=((X=t.units[0])==null?void 0:X.color)??"white",x=t.units.filter(O=>O.name==="Fighter"&&O.color===m).length,G=t.units.filter(O=>O.name==="Infantry"&&O.color===m).length,P=t.units.filter(O=>O.name==="Fighter"&&O.color!==m).length,I=t.units.filter(O=>O.name==="Infantry"&&O.color!==m).length;o.font=`bold ${d*2}px Arial`;const q=(($=t.units[0])==null?void 0:$.color)??"white",W=(z=t.units.find(O=>O.color!==m))==null?void 0:z.color;x+x>0&&(P>0?L(d*3,P.toFixed(0),90,231,q,!0,W):L(d*3,"🛦",90,231,q,!0,"white"),L(d*3,x.toFixed(0),90,331,q,!0,"white")),G+I>0&&(I>0?L(d*3,I.toFixed(0),410,231,q,!0,W):L(d*3,"🥆",410,231,q,!0,"white"),L(d*3,G.toFixed(0),410,331,q,!0,"white"))}}function xe(V){console.log("parsing combats",V);let a;const t=[];for(let e=0;e<V.length;e++)switch(V[e].event){case"system activated":a={time:V[e].time,attacker:V[e].user,defender:"",systemNumber:V[e].details.systemNumber,planetNames:[],rolls:[]};break;case"ships moved":a&&(a.defender=V[e].user);break;case"space combat hits assigned":a&&(V[e].user===a.attacker?a.attackerLosses=V[e].details.units:V[e].user===a.defender&&(a.defenderLosses=V[e].details.units));break;case"ground forces committed":a&&(a.planetNames=V[e].details.planetNames);break;case"ground combat rolled":case"space combat rolled":case"bombardment rolled":a&&(a.rolls=V[e].details.results);break;case"ended turn":a&&t.push(a),a=void 0;break}return console.log(t),t}let ue=document.createElement("template");ue.innerHTML=`
    <style>
        table {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        #stats {
            position: relative;
            background-color: rgba(0, 0, 0, 0.8);
            color: white;
            border-radius: 10px;
            padding: 10px;
            display: none; /* Hide the table by default */
        }
        #stats td {
            text-align: center;
            min-width: 60px;
            font-size: 16px;
            padding: 5px;
        }
        #showButton {
            position: absolute;
            top: 15px;
            right: 778px;
            z-index: 1000;
        }
        #showButton:hover + #stats {
            display: inline-block; /* Show the table when the button is hovered */
        }
    </style>
    <button id="showButton">Show Stats</button>
    <table id="stats">
    </table>
`;class Ee extends HTMLElement{constructor(){super(),this.currentPanelIndex=0,this.attachShadow({mode:"open"}).appendChild(ue.content.cloneNode(!0)),this.statsContainer=this.shadowRoot.getElementById("stats"),this.showButton=this.shadowRoot.getElementById("showButton"),this.showButton.addEventListener("wheel",t=>this.handleWheel(t))}handleWheel(a){const t=Math.sign(a.deltaY);this.statsContainer.children[this.currentPanelIndex].style.display="none",t>0?this.currentPanelIndex=(this.currentPanelIndex+1)%this.statsContainer.children.length:this.currentPanelIndex=(this.currentPanelIndex-1+this.statsContainer.children.length)%this.statsContainer.children.length,this.statsContainer.children[this.currentPanelIndex].style.display="block"}generatePanels(a){const t=document.createElement("div");let e="<h2>Trade Matrix</h2>";for(let v of a){let y=v.details.tradeRequest;e+=`
        <p>
          Trade from player ${y.from} to player ${y.to}:
          Offered ${y.offer.commodities} commodities for ${y.request.commodities} commodities
        </p>
      `}t.innerHTML=e;const u=document.createElement("div");u.innerHTML="<h2>Units Lost Chart</h2>";const k=document.createElement("div");k.innerHTML="<h2>Army Value Chart</h2>",this.statsContainer.appendChild(t),this.statsContainer.appendChild(u),this.statsContainer.appendChild(k),t.style.display="none",u.style.display="none",k.style.display="none",t.style.display="block"}async connectedCallback(){const a=await import("https://www.twilightwars.com/js/api.js"),t=await a.getGame(),e=indexedDB.open("TiWarsDB",1);e.onupgradeneeded=function(u){u.target.result.createObjectStore("logs",{keyPath:"_id"}).createIndex("time","time",{unique:!1})},e.onsuccess=async u=>{const k=u.target.result;let v;for(;;){const w=await a.getGameLogs(v);if(w.length===0)break;let U=!0;const K=k.transaction(["logs"],"readwrite").objectStore("logs");for(const Q of w){const Y=K.get(Q._id);await new Promise((X,$)=>{Y.onsuccess=function(z){Y.result||(K.add(Q),U=!1),X(null)},Y.onerror=function(z){$(new Error("Error accessing the indexedDB"))}}),v=Q._id}if(U)break}const b=k.transaction(["logs"],"readonly").objectStore("logs").getAll(),o=await new Promise((w,U)=>{b.onsuccess=function(j){w(b.result.filter(K=>K.game===t._id))},b.onerror=function(j){U(new Error("Error accessing the indexedDB"))}});window.gameLogs=o;const d=o.reduce((w,U,j)=>(w[U.user]||(w[U.user]=[]),j===0||w[U.user].push(new Date(U.time).getTime()-new Date(o[j-1].time).getTime()),w),{}),R=Object.entries(d).map(([w,U])=>({user:w,delays:U}));window.delays=R;const M=xe(o);window.combats=M;const L=o.reduce((w,U)=>(U.game===t._id&&(w[U.event]||(w[U.event]=[]),w[U.event].push(U)),w),{});window.events=L;let J=o.filter(w=>w.event==="trade request accepted");this.generatePanels(J)},e.onerror=function(u){console.log("Error opening/accessing the indexedDB")}}}window.customElements.define("ti-stats-component",Ee);function Ue(V){throw new Error('Could not dynamically require "'+V+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var Ae={},se={},de;function Pe(){return de||(de=1,function(V){(function(a){a.createMatrix=function(t,e,u){for(var k=new Array(t),v=0;v<t;v++)k[v]=new Array(e),u!==void 0&&k[v].fill(u);return k.rows=t,k.columns=e,k},a.Problem=function(t,e,u){this.distribution=t,this.attacker=e,this.defender=u},a.DistributionBase=function(t,e){this.min=t,this.max=e},a.DistributionBase.prototype.at=function(t){return this[t]||0},a.DistributionBase.prototype.toString=function(){if(this.min===void 0||this.max===void 0)return"no stats";var t="Min: "+this.min+", Max: "+this.max+". ",e=0;t+="[";for(var u=Math.min(this.min,-1);u<=Math.max(this.max,1);++u)u===0&&(t+="| "),t+=k(this.at(u),3)+" ",e+=this.at(u),u===0&&(t+="| ");return t+="]",t+=" "+k(e,3),t+=". "+k(this.downTo(-1),3)+":"+k(this.downTo(1),3),t;function k(v,y){var g=Math.pow(10,y);return Math.round(v*g)/g}},a.DistributionBase.prototype.downTo=function(t){if(t===0)return this.at(t);var e=0;if(t<0)for(var u=this.min;u<=t;u++)e+=this.at(u);else for(var u=t;u<=this.max;u++)e+=this.at(u);return e},a.EmpiricalDistribution=function(){},a.EmpiricalDistribution.prototype=Object.create(a.DistributionBase.prototype),a.EmpiricalDistribution.prototype.increment=function(t){this[t]=this.at(t)+1,this.min===void 0?this.min=t:t<this.min&&(this.min=t),this.max===void 0?this.max=t:this.max<t&&(this.max=t)},a.EmpiricalDistribution.prototype.normalize=function(){for(var t=0,e=this.min;e<=this.max;++e)t+=this.at(e);if(t!==0)for(var e=this.min;e<=this.max;++e)this[e]=this.at(e)/t},a.EnsembleSplit=function(t){this.subproblems={},this.parentProblem=t},a.EnsembleSplit.prototype.increment=function(t,e,u,k,v){if(v!==0){t=t.collapseRanges(u),e=e.collapseRanges(k);var y=this._subproblemKey(t,e);this.subproblems[y]||(this.subproblems[y]=this._problemFactory(t,e)),this.subproblems[y].distribution[u-t.dead()][k-e.dead()]+=v}},a.EnsembleSplit.prototype.getSubproblems=function(){var t=this.subproblems;return Object.keys(this.subproblems).map(function(e){return t[e]})},a.EnsembleSplit.prototype._problemFactory=function(t,e){var u=t.rangesLength(),k=e.rangesLength(),v=a.createMatrix(this.parentProblem.distribution.rows-u,this.parentProblem.distribution.columns-k,0),y=b(this.parentProblem.attacker,t.ranges),g=b(this.parentProblem.defender,e.ranges);return new a.Problem(v,y,g);function b(o,d){for(var R=!0,M=0;M<d.length/2;++M)if(!isNaN(d[M*2])){R=!1;break}if(R)return o;for(var L=o.slice(),M=d.length/2-1;0<=M;--M)isNaN(d[M*2])||L.splice(d[M*2],d[M*2+1]-d[M*2]||1);return L}},a.EnsembleSplit.prototype._subproblemKey=function(t,e){return"a"+t.rangesKey()+"d"+e.rangesKey()},a.Victim=function(){this.ranges=[]},a.Victim.prototype.addRange=function(t,e){var u=this.ranges;if(!isNaN(t)&&t!==e){if(u.length){if(u[u.length-1]===t){u[u.length-1]=e===void 0?t+1:e;return}if(u[u.length-1]===void 0&&u[u.length-2]+1===t){e===void 0?u[u.length-1]=t+1:u[u.length-1]=e;return}}t+1===e?this.ranges.push(t,void 0):this.ranges.push(t,e)}},a.Victim.prototype.rangesLength=function(){for(var t=0,e=0;e<this.ranges.length/2;++e)t+=u(this.ranges,e);return t;function u(k,v){var y=v*2;return isNaN(k[y])?0:isNaN(k[y+1])?1:k[y+1]-k[y]}},a.Victim.prototype.dead=function(){return this._dead!==void 0?this._dead:this.rangesLength()},a.Victim.prototype.collapseRanges=function(t){var e=this.ranges;if(e.length&&(e[e.length-1]===t||e[e.length-1]===void 0&&e[e.length-2]+1===t)){var u;return u=new a.Victim,u.ranges=e.slice(0,e.length-2),u._dead=this.rangesLength(),u}return this},a.Victim.prototype.rangesKey=function(){for(var t=[],e=0;e<this.ranges.length/2;++e)t.push(this.ranges[e*2]+(this.ranges[e*2+1]===void 0?"":"-"+this.ranges[e*2+1]));return t.join(",")},a.Victim.Null=new a.Victim,a.binarySearch=function(t,e,u){for(var k=0,v=t.length-1;k<=v;){var y=v+k>>1,g=u(e,t[y]);if(g>0)k=y+1;else if(g<0)v=y-1;else return y}return-k-1}})(V)}(se)),se}var oe={},fe;function Re(){return fe||(fe=1,function(V){(function(a){a.dieSides=10,a.BattleType={Space:"Space",Ground:"Ground"},a.BattleSide={attacker:"attacker",defender:"defender",opponent:function(v){return{attacker:"defender",defender:"attacker"}[v]}},a.SideUnits={attacker:"attackerUnits",defender:"defenderUnits"};var t={Flagship:"Flagship",WarSun:"WarSun",Dreadnought:"Dreadnought",Cruiser:"Cruiser",Carrier:"Carrier",Destroyer:"Destroyer",Fighter:"Fighter",Ground:"Ground",PDS:"PDS"};a.UnitType=t;var e={Flagship:"X",WarSun:"W",Dreadnought:"D",Cruiser:"C",Destroyer:"+",Carrier:"V",Fighter:"F",Ground:"G",PDS:"P"};a.Race={Arborec:"Arborec",Creuss:"Creuss",Hacan:"Hacan",JolNar:"JolNar",L1Z1X:"L1Z1X",Letnev:"Letnev",Mentak:"Mentak",Muaat:"Muaat",Naalu:"Naalu",Saar:"Saar",Sardakk:"Sardakk",Sol:"Sol",Virus:"Virus",Winnu:"Winnu",Xxcha:"Xxcha",Yin:"Yin",Yssaril:"Yssaril"},a.RacesDisplayNames={Arborec:"Arborec",Creuss:"Creuss",Hacan:"Hacan",JolNar:"Jol-Nar",L1Z1X:"L1Z1X",Letnev:"Letnev",Mentak:"Mentak",Muaat:"Muaat",Naalu:"Naalu",Virus:"Nekro Virus",Saar:"Saar",Sardakk:"Sardakk N'orr",Sol:"Sol",Winnu:"Winnu",Xxcha:"Xxcha",Yin:"Yin",Yssaril:"Yssaril"};function u(v,y,g){this.title=v,this.description=y,this.limitedTo=g}u.prototype.availableFor=function(v){return this.limitedTo===void 0||this.limitedTo===v},a.ActionCards={moraleBoost:new u("Morale Boost 1st round","+1 dice modifier to all units during the first battle round"),fireTeam:new u("Fire Team 1st round","Reroll dice after first round of invasion combat"),fighterPrototype:new u("Fighter Prototype","+2 dice modifier to Fighters during the first battle round"),bunker:new u("Bunker","-4 dice modifier to Bombardment rolls","defender"),experimentalBattlestation:new u("Experimental Battlestation","Additional unit with Space Cannon 5(x3)"),maneuveringJets:new u("Maneuvering Jets","Cancel 1 Space Cannon hit"),riskDirectHit:new u("Risk Direct Hit","Damage units vulnerable to Direct Hit before killing off fodder")},a.Technologies={antimassDeflectors:new u("Antimass Deflectors","-1 to opponents' Space Cannon rolls"),gravitonLaser:new u("Graviton Laser System","Space Cannon hits should be applied to non-fighters if possible"),plasmaScoring:new u("Plasma Scoring","One additional die for one unit during Space Cannon or Bombardment"),magenDefense:new u("Magen Defense Grid","Opponent doesn't throw dice for one round if you have Planetary Shield","defender"),x89Omega:new u("X-89 Bacterial Weapon Ω","Destroy all by bombardment if at least one destroyed","attacker"),magenDefenseOmega:new u("Magen Defense Grid Ω","1 hit at the start of ground combat when having structures","defender"),hasDock:new u("Has Dock","Defender has a dock for Magen Defence Grid Ω","defender"),duraniumArmor:new u("Duranium Armor","After each round repair 1 unit that wasn't damaged this round"),assaultCannon:new u("Assault Cannon","Opponent destroys 1 non-Fighter ship if you have at least 3 non-Fighters")},a.Agendas={publicizeSchematics:new u("Publicize Weapon Schematics","WarSuns don't sustain damage"),conventionsOfWar:new u("Conventions of War","No bombardment","defender"),prophecyOfIxth:new u("Prophecy of IXTH","+1 to Fighters rolls")},a.Promissory={letnevMunitionsFunding:new u("Munitions Reserves / War Funding 1st round","Reroll dice during first space combat round"),tekklarLegion:new u("Tekklar Legion","+1 in invasion combat. -1 to Sardakk if he's the opponent")},a.RaceSpecificTechnologies={Letnev:{nonEuclidean:new u("Non-Euclidean Shielding","Sustain Damage absorbs 2 hits"),l4Disruptors:new u("L4 Disruptors","During an Invasion units cannot use Space Cannon against you","attacker")},Sardakk:{valkyrieParticleWeave:new u("Valkyrie Particle Weave","If opponent produces at least one hit in Ground combat, you produce one additional hit")}},a.UnitInfo=function(){function v(y,g){this.type=y;var b=e[this.type];this.shortType=g.isDamageGhost?b.toLowerCase():b,this.battleValue=g.battleValue||NaN,this.battleDice=g.battleDice!==void 0?g.battleDice:1,this.bombardmentValue=g.bombardmentValue||NaN,this.bombardmentDice=g.bombardmentDice||0,this.spaceCannonValue=g.spaceCannonValue||NaN,this.spaceCannonDice=g.spaceCannonDice||0,this.barrageValue=g.barrageValue||NaN,this.barrageDice=g.barrageDice||0,this.sustainDamageHits=g.sustainDamageHits||0,this.isDamageGhost=g.isDamageGhost||!1,this.damageCorporeal=void 0,this.damaged=!1,this.damagedThisRound=!1,this.race=g.race,this.cost=g.cost}return v.prototype.clone=function(){return new v(this.type,this)},v.prototype.toDamageGhost=function(){var y=new v(this.type,{sustainDamageHits:this.sustainDamageHits,battleDice:0,isDamageGhost:!0});return y.damageCorporeal=this,this.damaged=!1,this.damagedThisRound=!1,y},v}(),a.ThrowType={Battle:"battle",Bombardment:"bombardment",SpaceCannon:"spaceCannon",Barrage:"barrage"},a.ThrowValues={battle:"battleValue",bombardment:"bombardmentValue",spaceCannon:"spaceCannonValue",barrage:"barrageValue"},a.ThrowDice={battle:"battleDice",bombardment:"bombardmentDice",spaceCannon:"spaceCannonDice",barrage:"barrageDice"},a.StandardUnits={WarSun:new a.UnitInfo(t.WarSun,{sustainDamageHits:1,battleValue:3,battleDice:3,bombardmentValue:3,bombardmentDice:3,cost:12}),Dreadnought:new a.UnitInfo(t.Dreadnought,{sustainDamageHits:1,battleValue:5,bombardmentValue:5,bombardmentDice:1,cost:4}),Cruiser:new a.UnitInfo(t.Cruiser,{battleValue:7,cost:2}),Carrier:new a.UnitInfo(t.Carrier,{battleValue:9,cost:3}),Destroyer:new a.UnitInfo(t.Destroyer,{battleValue:9,barrageValue:9,barrageDice:2,cost:1}),Fighter:new a.UnitInfo(t.Fighter,{battleValue:9,cost:.5}),PDS:new a.UnitInfo(t.PDS,{spaceCannonValue:6,spaceCannonDice:1}),Ground:new a.UnitInfo(t.Ground,{battleValue:8,cost:.5}),ExperimentalBattlestation:new a.UnitInfo("Bloodthirsty Space Dock",{spaceCannonValue:5,spaceCannonDice:3})},a.RaceSpecificUnits={Sardakk:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:6,battleDice:2,race:a.Race.Sardakk,cost:8}),Dreadnought:new a.UnitInfo(t.Dreadnought,{sustainDamageHits:1,battleValue:5,bombardmentValue:4,bombardmentDice:2,cost:4})},JolNar:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:6,battleDice:2,race:a.Race.JolNar,cost:8})},Winnu:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:7,battleDice:void 0,race:a.Race.Winnu,cost:8})},Xxcha:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:7,battleDice:2,spaceCannonValue:5,spaceCannonDice:3,race:a.Race.Xxcha,cost:8})},Yin:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:9,battleDice:2,race:a.Race.Yin,cost:8})},Yssaril:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,race:a.Race.Yssaril,cost:8})},Sol:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,race:a.Race.Sol,cost:8}),Ground:new a.UnitInfo(t.Ground,{battleValue:7,cost:.5})},Creuss:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:1,race:a.Race.Creuss,cost:8})},L1Z1X:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,race:a.Race.L1Z1X,cost:8})},Mentak:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:7,battleDice:2,race:a.Race.Mentak,cost:8})},Naalu:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:9,battleDice:2,race:a.Race.Naalu,cost:8}),Fighter:new a.UnitInfo(t.Fighter,{battleValue:8,cost:.5})},Virus:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:9,battleDice:2,race:a.Race.Virus,cost:8})},Arborec:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:7,battleDice:2,race:a.Race.Arborec,cost:8})},Letnev:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,bombardmentValue:5,bombardmentDice:3,race:a.Race.Letnev,cost:8})},Saar:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,barrageValue:6,barrageDice:4,race:a.Race.Saar,cost:8})},Muaat:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,race:a.Race.Muaat,cost:8})},Hacan:{Flagship:new a.UnitInfo(t.Flagship,{sustainDamageHits:1,battleValue:7,battleDice:2,race:a.Race.Hacan,cost:8})}},a.StandardUpgrades={Dreadnought:new a.UnitInfo(t.Dreadnought,{sustainDamageHits:1,battleValue:5,bombardmentValue:5,bombardmentDice:1,cost:4}),Cruiser:new a.UnitInfo(t.Cruiser,{battleValue:6,cost:2}),Destroyer:new a.UnitInfo(t.Destroyer,{battleValue:8,barrageValue:6,barrageDice:3,cost:1}),Fighter:new a.UnitInfo(t.Fighter,{battleValue:8,cost:.5}),PDS:new a.UnitInfo(t.PDS,{spaceCannonValue:5,spaceCannonDice:1}),Ground:new a.UnitInfo(t.Ground,{battleValue:7,cost:.5})},a.RaceSpecificUpgrades={Sol:{Carrier:new a.UnitInfo(t.Carrier,{sustainDamageHits:1,battleValue:9,cost:3}),Ground:new a.UnitInfo(t.Ground,{battleValue:6,cost:.5})},L1Z1X:{Dreadnought:new a.UnitInfo(t.Dreadnought,{sustainDamageHits:1,battleValue:4,bombardmentValue:4,bombardmentDice:1,cost:4})},Naalu:{Fighter:new a.UnitInfo(t.Fighter,{battleValue:7,cost:.5})},Muaat:{WarSun:new a.UnitInfo(t.WarSun,{sustainDamageHits:1,battleValue:3,battleDice:3,bombardmentValue:3,bombardmentDice:3,cost:10})}},a.MergedUnits={},a.MergedUpgrades={};for(var k in a.Race)a.MergedUnits[k]=Object.assign({},a.StandardUnits,a.RaceSpecificUnits[k]),a.MergedUpgrades[k]=Object.assign({},a.StandardUpgrades,a.RaceSpecificUpgrades[k]);a.expandFleet=function(v,y){var g=v.options||{attacker:{},defender:{}},b=v.battleType,o=g[y],d=a.BattleSide.opponent(y),R=g[d],M=a.MergedUnits[o.race],L=a.MergedUpgrades[o.race],J=b===a.BattleType.Space&&R.race===a.Race.Mentak&&(v[a.SideUnits[d]][t.Flagship]||{count:0}).count!==0,w=[],U=v[a.SideUnits[y]];for(var j in t)for(var K=U[j]||{count:0},Q=0;Q<K.count;Q++){var Y=(K.upgraded?L:M)[j],X=Y.clone();w.push(X),Y.sustainDamageHits>0&&!J&&!(j===t.WarSun&&o.publicizeSchematics)&&(Q<K.count-(K.damaged||0)?w.push(X.toDamageGhost()):X.damaged=!0)}var $=q(),z=b===a.BattleType.Space&&o.race===a.Race.Virus&&(U[t.Flagship]||{count:0}).count!==0,m=b===a.BattleType.Ground&&o.race===a.Race.Naalu&&(U[t.Flagship]||{count:0}).count!==0,x=W(z),G={};G[t.Ground]=1,G[t.Fighter]=2;var P,I;return m?(I=(U[t.Fighter]||{}).upgraded&&!(U[t.Ground]||{}).upgraded&&w.find(function(r){return r.type===t.Ground}),P=_):(U[t.Dreadnought]||{}).upgraded?P=ee:P=O,w.sort(P),b===a.BattleType.Space&&o.experimentalBattlestation&&w.push(a.StandardUnits.ExperimentalBattlestation),w.comparer=P,w.filterForBattle=n,w;function q(){return[t.Flagship,t.WarSun,t.Dreadnought,t.Cruiser,t.Destroyer,t.Carrier,t.Fighter]}function W(r){var s=[],c=0;for(var i in t)s[i]=c++;if(r){var A=s[t.Ground];s[t.Ground]=s[t.Fighter],s[t.Fighter]=A}return s}function O(r,s){var c=x[r.type]-x[s.type],i=(r.isDamageGhost?1:0)-(s.isDamageGhost?1:0),A=(s.damaged?1:0)-(r.damaged?1:0);if(o.riskDirectHit){var h=i*1e3+c*10+A;return o.race!==a.Race.Letnev?h:r.type===t.Flagship&&r.isDamageGhost?s.type===t.Flagship&&s.isDamageGhost?0:1:s.type===t.Flagship&&s.isDamageGhost?-1:h}else return c*1e3+i*10+A}function ee(r,s){return o.riskDirectHit?O(r,s):r.type===t.Dreadnought&&r.isDamageGhost?s.type===t.Dreadnought&&s.isDamageGhost?0:1:s.type===t.Dreadnought&&s.isDamageGhost?-1:O(r,s)}function _(r,s){var c=G[r.type]-G[s.type];return I?r===I?-1:s===I?1:-c:c}function n(){var r=this.filter(function(s){return b===a.BattleType.Space?$.indexOf(s.type)>=0||z&&s.type===a.UnitType.Ground:s.type===t.Ground||m&&s.type===a.UnitType.Fighter});return r.comparer=this.comparer,r}},a.upgradeable=function(v,y){return!!(a.StandardUpgrades.hasOwnProperty(y)||a.RaceSpecificUpgrades[v]&&a.RaceSpecificUpgrades[v].hasOwnProperty(y))},a.damageable=function(v,y,g){return(g?a.MergedUpgrades:a.MergedUnits)[v][y].sustainDamageHits>0}})(V)}(oe)),oe}(function(V){(function(a){var t,e;typeof Ue=="function"?(t=Pe(),e=Re()):(t=window,e=window),a.calculator=function(){var u=K(),k=U();return{computeProbabilities:v};function v(n){var r=n.battleType,s=n.options||{attacker:{},defender:{}},c=e.expandFleet(n,e.BattleSide.attacker),i=e.expandFleet(n,e.BattleSide.defender),A=c.filterForBattle(),h=i.filterForBattle(),l=t.createMatrix(A.length+1,h.length+1,0);l[A.length][h.length]=1;var p=[new t.Problem(l,A,h)],C=k;if(s.attacker.race===e.Race.Mentak){C=k.slice();var f=C[1];if(C[1]=C[2],C[2]=f,C[1].name!=="Mentak racial"||C[2].name!=="Assault Cannon")throw new Error("unexpected pre-battle actions order")}C.forEach(function(D){D.appliesTo===r&&(p=D.execute(p,c,i,s))});for(var F=0;F<p.length;++F)p[F].attacker.length&&p[F].defender.length&&y(p[F],r,c,i,s);var T=new t.DistributionBase(-A.length,h.length),B=A.map(function(D){return[D.shortType]}),E=h.map(function(D){return[D.shortType]});return p.forEach(function(D){T[0]=T.at(0)+D.distribution[0][0];for(var S=1;S<D.distribution.rows;S++)T[-S]=T.at(-S)+D.distribution[S][0],B[S-1].indexOf(D.attacker[S-1].shortType)<0&&B[S-1].push(D.attacker[S-1].shortType);for(var H=1;H<D.distribution.columns;H++)T[H]=T.at(H)+D.distribution[0][H],E[H-1].indexOf(D.defender[H-1].shortType)<0&&E[H-1].push(D.defender[H-1].shortType)}),{distribution:T,attacker:B.map(function(D){return D.reduce(function(S,H){return S+H})}),defender:E.map(function(D){return D.reduce(function(S,H){return S+H})})}}function y(n,r,s,c,i){var A=j(r,i.attacker,i.defender,n.attacker,!0),h=j(r,i.defender,i.attacker,n.defender,!0),l=r===e.BattleType.Ground&&i.attacker.fireTeam||r===e.BattleType.Space&&i.attacker.letnevMunitionsFunding,p=r===e.BattleType.Ground&&i.defender.fireTeam||r===e.BattleType.Space&&i.defender.letnevMunitionsFunding,C=r===e.BattleType.Ground&&i.defender.magenDefense&&c.some(W(e.UnitType.PDS))&&!s.some(W(e.UnitType.WarSun)),f={valkyrieParticleWeave:r===e.BattleType.Ground,winnuFlagship:r===e.BattleType.Space};if(r===e.BattleType.Ground&&i.defender.magenDefenseOmega&&(i.defender.hasDock||c.some(W(e.UnitType.PDS)))){var F=Y([1],n.attacker.length+1),T=Y([0,1],n.defender.length);T.unshift([1]),w(n,F,T,i)}if(A!==void 0||h!==void 0||C||l||p){var B;C?B=function(){return Y([1],n.attacker.length+1)}:B=function(){return b(n.attacker,e.ThrowType.Battle,A,l)};var E=function(){return b(n.defender,e.ThrowType.Battle,h,p)};if(i.attacker.race===e.Race.L1Z1X&&r===e.BattleType.Ground){var D=n.distribution[0];n.distribution[0]=new Array(n.distribution.columns),n.distribution[0].fill(0),w(n,B,E,i,f),k.find(function(H){return H.name==="Bombardment"}).execute([n],s,c,i);for(var S=0;S<n.distribution.columns;++S)n.distribution[0][S]+=D[S]}else w(n,B,E,i,f);r===e.BattleType.Space&&q(n,i)}if(C&&(A!==void 0||l)){var B=function(){return b(n.attacker,e.ThrowType.Battle,A,l)},E=function(){return b(n.defender,e.ThrowType.Battle,j(r,i.defender,i.attacker,n.defender,!1))};w(n,B,E,i,f)}g(n,r,s,c,i)}function g(n,r,s,c,i){var A=n.distribution,h=b(n.attacker,e.ThrowType.Battle,j(r,i.attacker,i.defender,n.attacker,!1)),l=b(n.defender,e.ThrowType.Battle,j(r,i.defender,i.attacker,n.defender,!1));if(i.attacker.race===e.Race.L1Z1X&&r===e.BattleType.Ground){var p=X(s,c,i);p.length===1&&(p=void 0)}else var p=void 0;for(var C=r===e.BattleType.Space&&(i.attacker.race===e.Race.Winnu&&n.attacker.some(W(e.UnitType.Flagship))||i.defender.race===e.Race.Winnu&&n.defender.some(W(e.UnitType.Flagship))),f=i.attacker.race===e.Race.Yin?_(n.attacker,W(e.UnitType.Flagship))+1:0,F=i.defender.race===e.Race.Yin?_(n.defender,W(e.UnitType.Flagship))+1:0,T=A.rows-1;0<T;T--)for(var B=A.columns-1;0<B;B--){C&&(i.attacker.race===e.Race.Winnu&&I(n.attacker,n.defender,B)&&(h=b(n.attacker,e.ThrowType.Battle,j(r,i.attacker,i.defender,n.attacker,!1))),i.defender.race===e.Race.Winnu&&I(n.defender,n.attacker,T)&&(l=b(n.defender,e.ThrowType.Battle,j(r,i.defender,i.attacker,n.defender,!1))));var E=z(h[T],n.defender,B-1,i.defender),D=z(l[B],n.attacker,T-1,i.attacker),S=M(E,D,B+1,T+1);r===e.BattleType.Ground&&(S=m(S,i,B+1,T+1)),p&&(S=J(S,p,B+1,T+1));var H;if(A[T][B]!==0){H=A[T][B]/(1-S.at(0,0));for(var N=0;N<S.rows;N++)for(var Z=0;Z<S.columns&&Z<=T;Z++)if(!(N===0&&Z===0)){var te=T-Z,ae=B-N;(te<f||ae<F)&&(te=ae=0),A[te][ae]+=S.at(N,Z)*H}A[T][B]=0}}}function b(n,r,s,c){s=s||0;for(var i=[[1]],A=1;A<=n.length;++A){var h=n[A-1],l=d(h,r,s,c);i.push(R(l,i[A-1]))}return i}function o(n,r,s,c){for(var i=[[1]],A=[[1]],h=0;h<n.length;h++){var l=n[h];if(s(l)){var p=d(l,r,c);A=R(A,p)}i.push(A)}return i}function d(n,r,s,c){var i=n[e.ThrowValues[r]],A=n[e.ThrowDice[r]];if(A===0)return[1];s=s||0;var h=typeof s=="function"?s:function(S){return s},l=[],p=Math.max(Math.min((i-1-h(n))/e.dieSides,1),0);if(n.type===e.UnitType.Flagship&&n.race===e.Race.JolNar&&r===e.ThrowType.Battle){var C=1-p,f=Math.min(.8,p),F=Math.max(0,C-.2),T=Math.max(0,.2-C),B=Math.min(.2,C);l[0]=f*(c?f:1),l[1]=F+(c?p*F:0),l[2]=T+(c?p*T:0),l[3]=B+(c?p*B:0)}else l[0]=p,c&&(l[0]=l[0]*l[0]),l[1]=1-l[0];for(var E=l,D=1;D<A;D++)E=R(E,l);return E}function R(n,r){for(var s=[],c=0;c<n.length+r.length-1;++c)s[c]=0;for(var i=0;i<n.length;++i)for(var A=0;A<r.length;++A)s[i+A]+=n[i]*r[A];return s}function M(n,r,s,c){return{rows:Math.min(s,n.length),columns:Math.min(c,r.length),at:function(i,A){var h=n[i];if(i===s-1)for(;++i<n.length;)h+=n[i];var l=r[A];if(A===c-1)for(;++A<r.length;)l+=r[A];return h*l}}}function L(n,r){return{rows:n.length,columns:r.length,at:function(s,c){return n[s]*r[c]}}}function J(n,r,s,c){return!r||r.length===1?n:x({rows:n.rows+r.length-1,columns:n.columns,at:function(i,A){for(var h=0,l=0;l<=i&&l<r.length;++l)if(i-l<n.rows){var p=r[l];h+=p*n.at(i-l,A)}return h}},s,c)}function w(n,r,s,c,i){var A=n.distribution;i&&!(i.winnuFlagship&&c.attacker.race===e.Race.Winnu)&&(r=r()),i&&!(i.winnuFlagship&&c.defender.race===e.Race.Winnu)&&(s=s()),i=i||{};for(var h=0;h<A.rows;h++)for(var l=0;l<A.columns;l++)if(A[h][l]!==0){var p=r,C=s;i.winnuFlagship&&(c.attacker.race===e.Race.Winnu&&(I(n.attacker,n.defender,l),p=r()),c.defender.race===e.Race.Winnu&&(I(n.defender,n.attacker,h),C=s()));var f=z(p[h],n.defender,l-1,c.defender),F=z(C[l],n.attacker,h-1,c.attacker),T=M(f,F,l+1,h+1);i.valkyrieParticleWeave&&(T=m(T,c,l+1,h+1));for(var B=0;B<T.rows;B++)for(var E=0;E<T.columns;E++)B===0&&E===0||(A[h-E][l-B]+=T.at(B,E)*A[h][l]);A[h][l]*=T.at(0,0)}}function U(){return[{name:"Space Cannon -> Ships",appliesTo:e.BattleType.Space,execute:function(n,r,s,c){var i=[],A=c.attacker.race===e.Race.Virus&&r.some(W(e.UnitType.Flagship))&&r.some(W(e.UnitType.Ground)),h=c.defender.race===e.Race.Virus&&s.some(W(e.UnitType.Flagship))&&s.some(W(e.UnitType.Ground));return n.forEach(function(f){var F=l(r,c.attacker,c.defender),T=l(s,c.defender,c.attacker);if(c.attacker.gravitonLaser||c.defender.gravitonLaser||A||h){for(var B=new t.EnsembleSplit(f),E=f.distribution,D=0;D<E.rows;D++)for(var S=0;S<E.columns;S++)if(E[D][S]!==0)for(var H=L(F,T),N=0;N<H.rows;N++)for(var Z=0;Z<H.columns;Z++){var te=C(f.attacker,D,Z,c.attacker,c.defender),ae=C(f.defender,S,N,c.defender,c.attacker);B.increment(te,ae,D,S,H.at(N,Z)*E[D][S])}var ne=B.getSubproblems();ne.forEach(function(Oe){q(Oe,c,f)}),i.push.apply(i,ne)}else{var re=Y(F,f.attacker.length+1),Ne=Y(T,f.defender.length+1);w(f,re,Ne,c),q(f,c),i.push(f)}}),i;function l(f,F,T){var B=T.antimassDeflectors?-1:0,E=f.filter(p),D;return F.plasmaScoring?D=$(E,e.ThrowType.SpaceCannon,B):D=Q(E,e.ThrowType.SpaceCannon,B),P(D,T.maneuveringJets?1:0)}function p(f){return f.spaceCannonDice!==0}function C(f,F,T,B,E){if(T===0||F===0)return t.Victim.Null;if(!E.gravitonLaser&&!B.nonEuclidean&&!f.some(W(e.UnitType.Ground))){var Z=new t.Victim;return Z._dead=Math.min(T,f.map(te).reduce(ae)),Z}for(var D=[],N=null,S=F-1;0<=S&&0<T;){var H=f[S];H.type===e.UnitType.Fighter&&E.gravitonLaser||H.type===e.UnitType.Ground?N=null:(N===null&&(N=[S+1,S+1],D.push(N)),N[0]--,T-=te(H)),S--}var N=null;if(E.gravitonLaser)for(var S=F-1;0<=S&&0<T;--S)f[S].type===e.UnitType.Fighter&&(N===null&&(N=[S+1,S+1],D.push(N)),N[0]--,T-=te(f[S]));D.sort(function(ne,re){return ne[0]-re[0]});var Z=new t.Victim;return D.forEach(function(ne){Z.addRange(ne[0],ne[1])}),Z;function te(ne){return ne.isDamageGhost&&B.nonEuclidean?2:1}function ae(ne,re){return ne+re}}}},{name:"Assault Cannon",appliesTo:e.BattleType.Space,execute:function(n,r,s,c){if(!c.attacker.assaultCannon&&!c.defender.assaultCannon)return n;var i=[];return n.forEach(function(l){for(var p=new t.EnsembleSplit(l),C=A(l.attacker,c.attacker.assaultCannon),f=A(l.defender,c.defender.assaultCannon),F=h(l.attacker,f<l.defender.length,!0),T=h(l.defender,C<l.attacker.length,!1),B=l.distribution,E=0;E<B.rows;E++)for(var D=0;D<B.columns;D++)if(B[E][D]!==0){var S=f<D?F[E]:t.Victim.Null,H=C<E?T[D]:t.Victim.Null;p.increment(S,H,E,D,B[E][D])}var N=p.getSubproblems();N.forEach(function(Z){q(Z,c,l)}),i.push.apply(i,N)}),i;function A(l,p){for(var C=0,f=0;f<l.length;f++)if(O(l[f])&&C++,C>=3&&p)return f;return f}function h(l,p,C){var f=new Array(l.length+1);if(!p)f.fill(t.Victim.Null);else{f[0]=t.Victim.Null;for(var F=void 0,T=void 0,B=void 0,E=0;E<l.length;++E){(C?O:ee)(l[E])?(F=l[E],T=E,B=void 0):F&&l[E].damageCorporeal===F&&(B=E);var D=new t.Victim;T!==void 0&&(D.addRange(T,void 0),B!==void 0&&D.addRange(B,void 0)),f[E+1]=D}}return f}}},{name:"Mentak racial",appliesTo:e.BattleType.Space,execute:function(n,r,s,c){return n.forEach(function(i){if(c.attacker.race!==e.Race.Mentak&&c.defender.race!==e.Race.Mentak)return;function A(p,C){var f=0,F=C.moraleBoost?1:0;return o(p,e.ThrowType.Battle,function(T){return 2<=f?!1:T.type===e.UnitType.Cruiser||T.type===e.UnitType.Destroyer?(f++,!0):!1},F)}var h,l;c.attacker.race===e.Race.Mentak?h=A(i.attacker,c.attacker):h=Y([1],i.attacker.length+1),c.defender.race===e.Race.Mentak?l=A(i.defender,c.defender):l=Y([1],i.defender.length+1),w(i,h,l,c),q(i,c)}),n}},{name:"Anti-Fighter Barrage",appliesTo:e.BattleType.Space,execute:function(n,r,s,c){var i=[];return n.forEach(function(p){for(var C=new t.EnsembleSplit(p),f=o(p.attacker,e.ThrowType.Barrage,A),F=o(p.defender,e.ThrowType.Barrage,A),T=h(p.attacker,W(e.UnitType.Fighter)),B=h(p.defender,W(e.UnitType.Fighter)),E=p.distribution,D=0;D<E.rows;D++)for(var S=0;S<E.columns;S++)if(E[D][S]!==0)for(var H=L(f[D],F[S]),N=0;N<H.rows;N++)for(var Z=0;Z<H.columns;Z++){var te=l(T,D,Z),ae=l(B,S,N);C.increment(te,ae,D,S,H.at(N,Z)*E[D][S])}i.push.apply(i,C.getSubproblems())}),i;function A(p){return p.barrageDice!==0}function h(p,C){for(var f=void 0,F=0;F<p.length;F++)if(f===void 0)C(p[F])&&(f=F);else if(!C(p[F]))break;return f===void 0&&(f=F),{from:f,to:F}}function l(p,C,f){if(f===0||C<p.from)return t.Victim.Null;var F=new t.Victim;return F.addRange(p.from,Math.min(C,p.from+f,p.to)),F}}},{name:"Bombardment",appliesTo:e.BattleType.Ground,execute:function(n,r,s,c){return n.forEach(function(i){var A=X(r,s,c),h=Y(A,i.attacker.length+1),l=Y([1],i.defender.length+1);w(i,h,l,c)}),n}},{name:"Space Cannon -> Ground Forces",appliesTo:e.BattleType.Ground,execute:function(n,r,s,c){return n.forEach(function(i){if(!c.attacker.l4Disruptors){var A=Y([1],i.attacker.length+1),h=c.attacker.antimassDeflectors?-1:0,l=s.filter(W(e.UnitType.PDS)),p;c.defender.plasmaScoring?p=$(l,e.ThrowType.SpaceCannon,h):p=Q(l,e.ThrowType.SpaceCannon,h);var C=Y(P(p,c.attacker.maneuveringJets?1:0),i.defender.length+1);w(i,A,C,c)}}),n}}]}function j(n,r,s,c,i){for(var A=void 0,h=0;h<u.length;h++)if(!(!i&&u[h].firstRoundOnly)){var l=u[h].apply(n,r,s,c);if(l&&!A){A=l;continue}l&&(A=p(A,l))}return A;function p(C,f){var F=typeof C=="function",T=typeof f=="function";return F||T?function(B){return(F?C(B):C)+(T?f(B):f)}:C+f}}function K(){return[{name:"moraleBoost",firstRoundOnly:!0,apply:function(n,r){return r.moraleBoost?1:0}},{name:"fighterPrototype",firstRoundOnly:!0,apply:function(n,r){return n===e.BattleType.Space&&r.fighterPrototype?function(s){return s.type===e.UnitType.Fighter?2:0}:0}},{name:"Sardakk",firstRoundOnly:!1,apply:function(n,r){return r.race===e.Race.Sardakk?1:0}},{name:"Sardakk Flagship",firstRoundOnly:!1,apply:function(n,r,s,c){return r.race===e.Race.Sardakk&&n===e.BattleType.Space&&c.some(W(e.UnitType.Flagship))?function(i){return i.type!==e.UnitType.Flagship?1:0}:0}},{name:"JolNar",firstRoundOnly:!1,apply:function(n,r){return r.race===e.Race.JolNar?-1:0}},{name:"prophecyOfIxth",firstRoundOnly:!1,apply:function(n,r){return r.prophecyOfIxth?function(s){return s.type===e.UnitType.Fighter?1:0}:0}},{name:"tekklarLegion",firstRoundOnly:!1,apply:function(n,r){return n===e.BattleType.Ground&&r.tekklarLegion&&r.race!==e.Race.Sardakk?1:0}},{name:"tekklarLegion of the opponent",firstRoundOnly:!1,apply:function(n,r,s){return n===e.BattleType.Ground&&s.tekklarLegion&&r.race===e.Race.Sardakk?-1:0}}]}function Q(n,r,s,c){return b(n,r,s,c).pop()}function Y(n,r){var s=new Array(r);return s.fill(n),s}function X(n,r,s){var c=!s.defender.conventionsOfWar&&(!r.some(W(e.UnitType.PDS))||n.some(W(e.UnitType.WarSun))||s.attacker.race===e.Race.Letnev&&n.some(W(e.UnitType.Flagship)));if(!c)return[1];var i=s.defender.bunker?-4:0,A=n.filter(p),h=s.attacker.plasmaScoring?$(A,e.ThrowType.Bombardment,i):Q(A,e.ThrowType.Bombardment,i);if(s.attacker.x89Omega){var l=new Array(r.length+1);l.fill(0),l[0]=h[0],l[l.length-1]=h.reduce(function(C,f){return C+f})-h[0],h=l}return h;function p(C){return C.bombardmentDice!==0}}function $(n,r,s){var c=b(n,r,s).pop(),i=G(n,e.ThrowValues[r]);if(i){var A=i.clone();A[e.ThrowDice[r]]=1;var h=d(A,r,s);c=R(h,c)}return c}function z(n,r,s,c){if(c.nonEuclidean&&n.length>2){for(var i=n.slice(),A=1;A<i.length&&0<s;A++)r[s].isDamageGhost&&P(i,1,A),s--;return i}else return n}function m(n,r,s,c){return!r.attacker.valkyrieParticleWeave&&!r.defender.valkyrieParticleWeave?n:x({rows:n.rows+(r.attacker.valkyrieParticleWeave?1:0),columns:n.columns+(r.defender.valkyrieParticleWeave?1:0),at:function(i,A){if(i===0&&A===0)return n.at(0,0);if(i===0)return r.attacker.valkyrieParticleWeave||A===n.columns?0:n.at(i,A);if(A===0)return r.defender.valkyrieParticleWeave||i===n.rows?0:n.at(i,A);if(i===1&&A===1&&r.attacker.valkyrieParticleWeave&&r.defender.valkyrieParticleWeave)return(n.columns===1?0:n.at(0,1))+(n.rows===1?0:n.at(1,0));if(r.attacker.valkyrieParticleWeave&&r.defender.valkyrieParticleWeave&&(i===n.rows&&A===1||i===1&&A===n.columns))return 0;var h=r.attacker.valkyrieParticleWeave&&!(r.defender.valkyrieParticleWeave&&A===1)?1:0,l=r.defender.valkyrieParticleWeave&&!(r.attacker.valkyrieParticleWeave&&i===1)?1:0;return n.at(i-h,A-l)}},s,c)}function x(n,r,s){return n.rows<=r&&n.columns<=s?n:{rows:Math.min(n.rows,r),columns:Math.min(n.columns,s),at:function(c,i){for(var A=0,h=c===this.rows-1?n.rows:c+1,l=i===this.columns-1?n.columns:i+1,p=c;p<h;++p)for(var C=i;C<l;++C)A+=n.at(p,C);return A}}}function G(n,r){for(var s=null,c=1/0,i=0;i<n.length;i++)n[i][r]<c&&(s=n[i],c=n[i][r]);return s}function P(n,r,s){s=s||0;for(var c=0;c<r;++c){n.length>s+1&&(n[s]+=n[s+1]);for(var i=s+2;i<n.length;i++)n[i-1]=n[i];n.length>s+1&&n.pop()}return n}function I(n,r,s){var c=null;return n.filter(W(e.UnitType.Flagship)).forEach(function(i){i.battleDice=c===null?c=r.slice(0,s).filter(ee).length:c}),c!==null}function q(n,r,s){if(r.attacker.race===e.Race.Yin||r.defender.race===e.Race.Yin){var c=A(n,r,s,e.BattleSide.attacker),i=A(n,r,s,e.BattleSide.defender);h(n.distribution,c,n.distribution.columns),h(n.distribution,n.distribution.rows,i)}function A(l,p,C,f){var F=_(l[f],W(e.UnitType.Flagship));return p[f].race===e.Race.Yin?C&&l[f].length<C[f].length&&F<_(C[f],W(e.UnitType.Flagship))?f===e.BattleSide.attacker?l.distribution.rows:l.distribution.columns:F+1:0}function h(l,p,C){for(var f=0;f<p;++f)for(var F=0;F<C;++F)f===0&&F===0||(l[0][0]+=l[f][F],l[f][F]=0)}}function W(n){return function(r){return r.type===n&&!r.isDamageGhost}}function O(n){return n.type!==e.UnitType.Fighter&&!n.isDamageGhost}function ee(n){return n.type!==e.UnitType.Fighter&&n.type!==e.UnitType.Ground&&!n.isDamageGhost}function _(n,r){for(var s=n.length-1;0<=s;--s)if(r(n[s]))return s;return-1}}()})(V)})(Ae);const he={"The Arborec":"Arborec","The Barony of Letnev":"Letnev","The Clan of Saar":"Saar","The Embers of Muaat":"Muaat","The Emirates of Hacan":"Hacan","The Federation of Sol":"Sol","The Ghosts of Creuss":"Creuss","The L1Z1X Mindnet":"L1Z1X","The Mentak Coalition":"Mentak","The Naalu Collective":"Naalu","The Nekro Virus":"Virus","The Sardakk N'orr":"Sardakk","The Universities of Jol-Nar":"JolNar","The Winnu":"Winnu","The Xxcha Kingdom":"Xxcha","The Yin Brotherhood":"Yin","The Yssaril Tribes":"Yssaril"},pe={Flagship:"Flagship","War Sun":"WarSun",Dreadnought:"Dreadnought",Carrier:"Carrier",Cruiser:"Cruiser",Destroyer:"Destroyer",Fighter:"Fighter",PDS:"PDS",Infantry:"Ground","Space Dock":"PDS"};async function Ve(){const{allBoardSystems:V}=await import("https://www.twilightwars.com/js/board-creation.js"),{getPlayers:a}=await import("https://www.twilightwars.com/js/api.js"),{getActiveSystem:t}=await import("https://www.twilightwars.com/js/utils/extras.js"),e=await a(),u=t(V).userData,k=[];if(!u)return"No defending units";for(const w of V)for(const U of w.unitsToMove??[])k.push(U);if(k.length===0){const w=u.units.filter(U=>U.color!==u.units[0].color);if(w.length>0)k.push(...w);else return"No attacking units"}const v={};for(const w of k){const U=pe[w.name];v[U]||(v[U]={count:0}),v[U].count++}const y=e.find(w=>w.color===k[0].color),g=e.find(w=>w.color===u.units[0].color),b={};for(const w of u.units){const U=pe[w.name];b[U]||(b[U]={count:0}),b[U].count++}const o=he[y.faction],d=he[g.faction],R={attackerUnits:v,defenderUnits:b,battleType:"Space",options:{attacker:{race:o,riskDirectHit:!0},defender:{race:d,riskDirectHit:!0}}};var M=Ae.calculator.computeProbabilities(R);let L=0,J=0;for(const w in M.distribution)Number.isInteger(parseInt(w))&&(w.includes("-")?L+=M.distribution[w]:J+=M.distribution[w]);return`${L.toFixed(2)} - ${J.toFixed(2)}`}let ge=document.createElement("template");ge.innerHTML=`
    <style>
        #calculateButton {
            position: absolute;
            top: 15px;
            right: 658px;
            z-index: 1000;
        }
    </style>
    <button id="calculateButton">Calculate Odds</button>
`;class We extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(ge.content.cloneNode(!0)),this.calculateButton=this.shadowRoot.getElementById("calculateButton")}async connectedCallback(){this.calculateButton.addEventListener("click",async()=>{const a=await Ve();this.calculateButton.innerText=a})}}window.customElements.define("ti-odds-component",We);let me=document.createElement("template");me.innerHTML=`
    <style>
        table {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        #units {
            position: relative;
            background-color: rgba(0, 0, 0, 0.8);
            color: white;
            border-radius: 10px;
            padding: 10px;
            display: none; /* Hide the table by default */
        }
        #units td {
            text-align: center;
            min-width: 60px;
            font-size: 16px;
            padding: 5px;
        }
        #showButton {
            position: absolute;
            top: 15px;
            right: 318px;
            z-index: 1000;
        }
        #showButton:hover + #units {
            display: inline-block; /* Show the table when the button is hovered */
        }
    </style>
    <button id="showButton">Show Units</button>
    <table id="units">
    </table>
`;const ve={Flagship:8,"War Sun":12,Dreadnought:4,Carrier:3,Cruiser:2,Destroyer:1,Fighter:.5,PDS:2,Infantry:.5,"Space Dock":0};class Me extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(me.content.cloneNode(!0)),this.unitsContainer=this.shadowRoot.getElementById("units")}async connectedCallback(){const a=await import("https://www.twilightwars.com/js/api.js"),t=await a.getPlayers(),e=await a.getBoardSystems();a.getGameLogs().then(o=>{console.log(o)});const u=document.createElement("tr");this.unitsContainer.appendChild(u);const k=document.createElement("td");u.appendChild(k);const v={Flagship:0,"War Sun":0,Dreadnought:0,Carrier:0,Cruiser:0,Destroyer:0,Fighter:0,PDS:0,Infantry:0,"Space Dock":0},y=t.reduce((o,d)=>(o[d.color]={...v},o),{}),g=t.reduce((o,d)=>(o[d.color]={...v},o),{});e.forEach(o=>{o.units.forEach(d=>{y[d.color][d.name]++,g[d.color][d.name]+=ve[d.name]}),o.planets.forEach(d=>{d.units.forEach(R=>{y[R.color][R.name]++,g[R.color][R.name]+=ve[R.name]})})}),Object.keys(v).forEach(o=>{const d=document.createElement("td");d.textContent=o,u.appendChild(d)});const b=["Unit Value","Trade Goods","Influence","Resources","Technology","Command Counter","Score"];for(const o of b){const d=document.createElement("td");d.textContent=o,u.appendChild(d)}t.forEach(o=>{const d=document.createElement("tr");this.unitsContainer.appendChild(d);const R=document.createElement("td");R.textContent=o.faction,d.appendChild(R),Object.values(y[o.color]).forEach(m=>{const x=document.createElement("td");x.style.color=o.color,x.style.fontWeight="bold",x.style.fontSize="20px",x.textContent=m>0?m.toString():"",d.appendChild(x)});const M=document.createElement("td");M.style.color=o.color,M.style.fontWeight="bold",M.style.fontSize="20px";const L=Object.values(g[o.color]).reduce((m,x)=>m+x,0);M.textContent=L.toString(),d.appendChild(M);const J=document.createElement("td");J.style.color=o.color,J.style.fontWeight="bold",J.style.fontSize="20px",J.textContent=o.tradeGoods.toString(),d.appendChild(J);const w=document.createElement("td");w.style.color=o.color,w.style.fontWeight="bold",w.style.fontSize="20px";const U=Object.values(o.planetCards.map(m=>m.exhausted?0:m.influence)).reduce((m,x)=>m+x,0);w.textContent=U.toString(),d.appendChild(w);const j=document.createElement("td");j.style.color=o.color,j.style.fontWeight="bold",j.style.fontSize="20px";const K=Object.values(o.planetCards.map(m=>m.exhausted?0:m.resources)).reduce((m,x)=>m+x,0);j.textContent=K.toString(),d.appendChild(j);const Q=(o.fleetPool+o.strategyPool+o.tacticPool)*2,Y=o.technology.length*6,X=document.createElement("td");X.style.color=o.color,X.style.fontWeight="bold",X.style.fontSize="20px",X.textContent=Y.toString(),d.appendChild(X);const $=document.createElement("td");$.style.color=o.color,$.style.fontWeight="bold",$.style.fontSize="20px",$.textContent=Q.toString(),d.appendChild($);const z=document.createElement("td");z.style.color=o.color,z.style.fontWeight="bold",z.style.fontSize="20px",z.textContent=(K+U*2/3+L+Y+Q+o.tradeGoods).toFixed(0),d.appendChild(z)})}}window.customElements.define("ti-units-component",Me);let be=document.createElement("template");be.innerHTML=`
    <style>
        #votes {
            position: fixed;
            top: 50%;
            left: 50%;
            background-color: rgba(0, 0, 0, 0.8);
            color: white;
            border-radius: 10px;
            transform: translate(-50%, -50%);
            display: none; /* Hide the table by default */

        }
        #showButton {
            position: absolute;
            top: 15px;
            right: 408px;
            z-index: 1000;
        }
        #showButton:hover + #votes {
            display: block; /* Show the table when the button is hovered */
        }

        .pie {
            width: 400px;
            height: 400px;
            border-radius: 50%
          }
    </style>
    <button id="showButton">Show Votes</button>
    <div id="votes">
          <div class="pie" id="pie1"></div>
    </div>
    <div id="outcomes">
    </div>
  `;const Ge={red:"#500000",green:"#005000",blue:"#000050",yellow:"#505000",purple:"#500050",orange:"#504000"};class Ie extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(be.content.cloneNode(!0)),this.votesContainer=this.shadowRoot.getElementById("votes")}async connectedCallback(){const a=await import("https://www.twilightwars.com/js/api.js"),t=await a.getPlayers(),e=await a.getGame();globalThis.players=t,globalThis.game=e;const u=t.reduce((g,b)=>{if(b.faction==="The Nekro Virus")return g;let o=b.planetCards.reduce((R,M)=>R+M.influence,0),d=b.planetCards.reduce((R,M)=>R+(M.exhausted?M.influence:0),0);return e.phase==="voting"?(g[Ge[b.color]]=d,g[b.color]=o-d):g[b.color]=o,g},{});for(const g of t)g.vote&&!g.vote.abstain&&(u[g.color]=u[g.color]-g.vote.count);const k=Object.values(u).reduce((g,b)=>g+b,0);let v=0;const y=`conic-gradient(${Object.entries(u).map(([g,b],o)=>{const d=`${g} ${(100*v/k).toFixed(2)}%, ${g} ${(100*(v+b)/k).toFixed(2)}%`;return v+=b,d}).join(",")})`;this.votesContainer.getElementsByClassName("pie")[0].style.backgroundImage=y}}window.customElements.define("ti-votes-component",Ie);let ye=document.createElement("template");ye.innerHTML=`
    <style>
        table {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }
        #objectives {
            position: relative;
            background-color: rgba(0, 0, 0, 0.8);
            color: white;
            border-radius: 10px;
            padding: 10px;
            display: none; /* Hide the table by default */
        }
        #objectives td {
            text-align: center;
            min-width: 60px;
            font-size: 16px;
            padding: 5px;
        }
        #showButton {
            position: absolute;
            top: 15px;
            right: 518px;
            z-index: 1000;
        }
        #showButton:hover + #objectives {
            display: inline-block; /* Show the table when the button is hovered */
        }
    </style>
    <button id="showButton">Show Objectives</button>
    <table id="objectives">
    </table>
`;class He extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(ye.content.cloneNode(!0)),this.objectivesContainer=this.shadowRoot.getElementById("objectives")}async connectedCallback(){const a=await import("https://www.twilightwars.com/js/api.js"),t=await a.getPlayers(),e=await a.getGame(),u=document.createElement("tr");this.objectivesContainer.appendChild(u);const k=document.createElement("td");u.appendChild(k),t.forEach(v=>{const y=document.createElement("td");y.textContent=v.faction,u.appendChild(y)}),e.publicObjectives.forEach(v=>{const y=document.createElement("tr");this.objectivesContainer.appendChild(y);const g=document.createElement("td");g.textContent=v.name,y.appendChild(g),t.forEach(b=>{const o=document.createElement("td");o.style.color=b.color,o.style.fontWeight="bold",o.style.fontSize="20px",o.textContent=v.scores.find(d=>d.playerId===b._id)?"✔":"",y.appendChild(o)})})}}window.customElements.define("ti-objectives-component",He);async function Le(){console.log("running main"),await Se(),document.body.appendChild(document.createElement("ti-cards-component")),document.body.appendChild(document.createElement("ti-units-component")),document.body.appendChild(document.createElement("ti-votes-component")),document.body.appendChild(document.createElement("ti-objectives-component")),document.body.appendChild(document.createElement("ti-odds-component")),document.body.appendChild(document.createElement("ti-stats-component"))}Le()})();
