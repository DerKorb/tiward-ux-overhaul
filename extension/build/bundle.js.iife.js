(function(){"use strict";let ce=document.createElement("template");ce.innerHTML=`
    <style>
        :host {
            position: fixed;
            bottom: 0px;
        }
        #cards {
            display: flex;
            position: fixed;
            bottom: -242px;
            transition: bottom 0.5s;
        }
        .card {
            border-radius: 5px;
            margin: 5px;
            overflow: hidden;
        }
        .card img {
            width: 200px;
            height: 300px;
        }
        #cards:hover {
            bottom: 0;
        }
    </style>
    <div id="cards">
    </div>
`;class be extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(ce.content.cloneNode(!0)),this.cardsContainer=this.shadowRoot.getElementById("cards")}async connectedCallback(){const a=await import("https://www.twilightwars.com/js/api.js"),{onActionCardDoubleClick:e}=await import("https://www.twilightwars.com/js/events/action-card.js"),{playerActionCards:t}=await import("https://www.twilightwars.com/js/loaders/load-player-cards.js"),u=await a.getPlayer();console.log(u);const{actionCards:F,secretObjectives:y,promissoryNotes:w}=u;F.forEach(p=>{const v=document.createElement("div");v.ondblclick=()=>{const d=t.find(R=>R.userData.name===p.name);d&&(d.material.opacity=.3,d.scale.x=100,d.scale.y=100,d.visible=!0,setTimeout(()=>{e(),d.scale.x=1,d.scale.y=1,d.material.opacity=1,d.visible=!1},1))},v.className="card",this.cardsContainer.appendChild(v);const s=document.createElement("img");s.src=`/img/action-cards/${p.name}.png`,v.appendChild(s)}),y.forEach(p=>{const v=document.createElement("div");v.className="card",this.cardsContainer.appendChild(v);const s=document.createElement("img");s.src=`/img/objectives/${p.name}.png`,v.appendChild(s)}),w.filter(p=>p.color!==u.color).forEach(p=>{const v=document.createElement("div");v.className="card",this.cardsContainer.appendChild(v);const s=document.createElement("img");"faction"in p?s.src=`/img/faction/${p.faction}/${p.name}.png`:s.src=`/img/misc/${p.color}/${p.name}.png`,v.appendChild(s)})}}window.customElements.define("ti-cards-component",be);const we={Alpha:"red",Beta:"blue",Delta:"green"},ke={red:"rgba(255, 0, 0, 1.0)",blue:"rgba(0, 0, 255, 1.0)",green:"rgba(0, 255, 0, 1.0)",yellow:"rgba(255, 255, 0, 1.0)",purple:"rgba(255, 0, 255, 1.0)",black:"rgba(0, 0, 0, 1.0)",orange:"rgba(255, 165, 0, 1.0)"},ie={red:"rgba(255, 150, 150, 1)",blue:"rgba(150, 150, 255, 1)",green:"rgba(150, 255, 150, 1)",yellow:"rgba(255, 255, 0, 1)",purple:"rgba(255, 150, 255, 1)",orange:"rgba(255, 150, 0, 1)",white:"white"},Ce={Alpha:"♻️",Beta:"🌀",Delta:"🔴",Yellow:"🟡"},De="rgba(0, 0, 0, 0.8)",le=[[],[{position:[160,290]}],[{position:[120,20]},{position:[160,380]}],[{position:[150,270]},{position:[190,10]},{position:[200,380]}]];async function Te(){const Z=await import("https://www.twilightwars.com/js/api.js"),{skeletonHexArray:a}=await import("https://www.twilightwars.com/js/board-creation.js"),e=await Z.getBoardSystems();globalThis.boardSystems=e;const t=await Z.getPlayers(),u=await Z.getGame(),F=new Image;F.src="data:image/png;base64,"+Se,await new Promise(y=>{F.onload=y}),e.forEach(async y=>{var p,v,s,d;const w=y.number===51?a[a.length-1]:a[y.position];await Fe(t,u,y,F,w),(p=w.userData.boardTokens)==null||p.controlTokens.forEach(R=>{R.visible=!1}),(v=w.userData.boardTokens)==null||v.infantry.forEach(R=>{R.visible=!1}),(s=w.userData.boardTokens)==null||s.pds.forEach(R=>{R.visible=!1}),(d=w.userData.boardTokens)==null||d.spaceDock.forEach(R=>{R.visible=!1}),w.material.map.needsUpdate=!0,w.material.needsUpdate=!0})}const Se="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";async function Fe(Z,a,e,t,u){var Y,J,K,X;const{CanvasTexture:F,Mesh:y,MeshBasicMaterial:w}=await import("https://www.twilightwars.com/js/vendor/three/build/three.module.js"),{createHexagonGeometry:p}=await import("https://www.twilightwars.com/js/utils/geometries.js"),v=document.createElement("canvas"),s=v.getContext("2d"),d=25;v.width=512,v.height=512;const R=(Y=e.units)==null?void 0:Y[0],P=R?ke[R.color]:null;P&&(s.fillStyle=P,s.fillRect(0,0,v.width,v.height),s.globalCompositeOperation="destination-in",s.drawImage(t,-v.width*.1,-v.height*.1,v.width*1.2,v.height*1.2),s.globalCompositeOperation="source-over");function H(m,B,W,x,M="white",O=!1,V){s.font=`bold ${m}px Arial`;const N=s.measureText(B).width,ee=W-N/2;s.fillStyle=M,s.fillText(B,O?ee:W,x),V&&(s.strokeStyle=V,s.lineWidth=2,s.strokeText(B,O?ee:W,x))}function q(m,B,W,x,M,O="white"){s.beginPath(),s.moveTo(m+M,B),s.lineTo(m+W-M,B),s.quadraticCurveTo(m+W,B,m+W,B+M),s.lineTo(m+W,B+x-M),s.quadraticCurveTo(m+W,B+x,m+W-M,B+x),s.lineTo(m+M,B+x),s.quadraticCurveTo(m,B+x,m,B+x-M),s.lineTo(m,B+M),s.quadraticCurveTo(m,B,m+M,B),s.closePath(),s.fillStyle=O,s.fill()}if(e.anomaly&&H(d*1.5,e.anomaly,256,50,"white",!0),e.wormhole&&H(d*3.5,Ce[e.wormhole]??e.wormhole,256,500,we[e.wormhole],!0),e.isHomeSystem){const m=Z.find(x=>x.faction===e.faction),B=m==null?void 0:m.strategyCards.map(x=>x.exhausted?x.number:x.number+"!"),W=a.turn.player.current===(m==null?void 0:m.number);H(d*5,(B==null?void 0:B.join(" "))??"",256,240,W?"red":"white",!0)}const E=Z.reduce((m,B)=>(m[B.faction]=B.color,m),{});e.commandTokens&&e.commandTokens.forEach((m,B)=>{const W=E[m];s.lineWidth=20,s.beginPath();const x=2*Math.PI/6*B,M=256+226*Math.cos(x),O=256+266*Math.sin(x),V=256+226*Math.cos(x+2*Math.PI/6),N=256+266*Math.sin(x+2*Math.PI/6);s.moveTo(M,O),s.lineTo(V,N),s.strokeStyle=W,s.stroke()});for(let m=0;m<6;m++){const B=P??"black";s.lineWidth=5,s.beginPath();const W=2*Math.PI/6*m,x=256+256*Math.cos(W),M=256+296*Math.sin(W),O=256+256*Math.cos(W+2*Math.PI/6),V=256+296*Math.sin(W+2*Math.PI/6);s.moveTo(x,M),s.lineTo(O,V),s.strokeStyle=B,s.stroke()}if(e.planets){let m=0;for(const B of e.planets)Q(B,m++)}const L=new F(v);console.log(u);const z=p(.9),_=new w({map:L});new y(z,_),u.userData.canvasTexture=L,u.material.onBeforeCompile=function(m){m.uniforms.canvasTexture={value:L},m.fragmentShader=`
        uniform sampler2D canvasTexture;
      `+m.fragmentShader,m.fragmentShader=m.fragmentShader.replace("gl_FragColor = vec4( outgoingLight, diffuseColor.a );",`
        vec4 tex1Color = texture2D( map, vUv );
        vec4 canvasColor = texture2D( canvasTexture, vUv );
        gl_FragColor = vec4(canvasColor.a * canvasColor.rgb + tex1Color.rgb * (1.0 - canvasColor.a), 1.0);
        `)};function Q(m,B){const W=le[e.planets.length][B].position[0],x=le[e.planets.length][B].position[1],M=Z.find(o=>o.planetCards.find(c=>c.name===m.name));function O(o,c,i){const A=M?ie[M.color]:"white";s.fillStyle="white",o.filter(l=>l.name==="PDS").forEach((l,g)=>{H(d,"🛡",c+10+g*30,i-25,A)}),o.filter(l=>l.name==="Space Dock").forEach((l,g)=>{H(d,"🏗",c+10+g*30,i,A)});const h=o.some(l=>l.name==="Infantry"&&l.upgraded);H(d,`🥆${h?"+":""}`,c+82,i+35,A),s.font=`bold ${d*2}px Arial`,H(d*2,o.filter(l=>l.name==="Infantry").length.toString(),c+95,i,A,!0)}const V=M?M.planetCards.find(o=>o.name===m.name):null;V!=null&&V.faction&&console.log(V);const N=`${m.resources}/${m.influence}`;let ee,$="";switch(m.tech){case"Warfare":$="🔴";break;case"Biotic":$="🟢";break;case"Cybernetic":ee="white",$="🟡";break;case"Propulsion":ee="white",$="🔵";break}s.font=`bold ${d}px Arial`;const n=s.measureText(N).width;let r="";if(n>0){switch(m.trait){case"Hazardous":s.fillStyle="red",r="☢️";break;case"Industrial":s.fillStyle="green",r="🏭";break;case"Cultural":s.fillStyle="blue",r="🎭";break;default:s.fillStyle="white"}s.fillStyle=ee??"white";const o=M?E[M.faction]:"white";s.font=`bold ${d*2}px Arial`,q(W,x,200,100,10,De),m.units&&O(m.units,W+80,x+50),H(d*2,N,W+10,x+50,ie[o]),V!=null&&V.exhausted&&(s.lineWidth=5,s.beginPath(),s.moveTo(W+25-n/2,x+30),s.lineTo(W+25+n*1.5,x+30),s.strokeStyle=ie[o],s.stroke()),H(d*.9,m.name+$+r,W+10,x+85,ie[o])}}if(e.units){const m=((J=e.units[0])==null?void 0:J.color)??"white",B=e.units.filter(N=>N.name==="Fighter"&&N.color===m).length,W=e.units.filter(N=>N.name==="Infantry"&&N.color===m).length,x=e.units.filter(N=>N.name==="Fighter"&&N.color!==m).length,M=e.units.filter(N=>N.name==="Infantry"&&N.color!==m).length;s.font=`bold ${d*2}px Arial`;const O=((K=e.units[0])==null?void 0:K.color)??"white",V=(X=e.units.find(N=>N.color!==m))==null?void 0:X.color;B+B>0&&(x>0?H(d*3,x.toFixed(0),90,231,O,!0,V):H(d*3,"🛦",90,231,O,!0,"white"),H(d*3,B.toFixed(0),90,331,O,!0,"white")),W+M>0&&(M>0?H(d*3,M.toFixed(0),410,231,O,!0,V):H(d*3,"🥆",410,231,O,!0,"white"),H(d*3,W.toFixed(0),410,331,O,!0,"white"))}}function Be(Z){throw new Error('Could not dynamically require "'+Z+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var ue={},oe={},Ae;function Ue(){return Ae||(Ae=1,function(Z){(function(a){a.createMatrix=function(e,t,u){for(var F=new Array(e),y=0;y<e;y++)F[y]=new Array(t),u!==void 0&&F[y].fill(u);return F.rows=e,F.columns=t,F},a.Problem=function(e,t,u){this.distribution=e,this.attacker=t,this.defender=u},a.DistributionBase=function(e,t){this.min=e,this.max=t},a.DistributionBase.prototype.at=function(e){return this[e]||0},a.DistributionBase.prototype.toString=function(){if(this.min===void 0||this.max===void 0)return"no stats";var e="Min: "+this.min+", Max: "+this.max+". ",t=0;e+="[";for(var u=Math.min(this.min,-1);u<=Math.max(this.max,1);++u)u===0&&(e+="| "),e+=F(this.at(u),3)+" ",t+=this.at(u),u===0&&(e+="| ");return e+="]",e+=" "+F(t,3),e+=". "+F(this.downTo(-1),3)+":"+F(this.downTo(1),3),e;function F(y,w){var p=Math.pow(10,w);return Math.round(y*p)/p}},a.DistributionBase.prototype.downTo=function(e){if(e===0)return this.at(e);var t=0;if(e<0)for(var u=this.min;u<=e;u++)t+=this.at(u);else for(var u=e;u<=this.max;u++)t+=this.at(u);return t},a.EmpiricalDistribution=function(){},a.EmpiricalDistribution.prototype=Object.create(a.DistributionBase.prototype),a.EmpiricalDistribution.prototype.increment=function(e){this[e]=this.at(e)+1,this.min===void 0?this.min=e:e<this.min&&(this.min=e),this.max===void 0?this.max=e:this.max<e&&(this.max=e)},a.EmpiricalDistribution.prototype.normalize=function(){for(var e=0,t=this.min;t<=this.max;++t)e+=this.at(t);if(e!==0)for(var t=this.min;t<=this.max;++t)this[t]=this.at(t)/e},a.EnsembleSplit=function(e){this.subproblems={},this.parentProblem=e},a.EnsembleSplit.prototype.increment=function(e,t,u,F,y){if(y!==0){e=e.collapseRanges(u),t=t.collapseRanges(F);var w=this._subproblemKey(e,t);this.subproblems[w]||(this.subproblems[w]=this._problemFactory(e,t)),this.subproblems[w].distribution[u-e.dead()][F-t.dead()]+=y}},a.EnsembleSplit.prototype.getSubproblems=function(){var e=this.subproblems;return Object.keys(this.subproblems).map(function(t){return e[t]})},a.EnsembleSplit.prototype._problemFactory=function(e,t){var u=e.rangesLength(),F=t.rangesLength(),y=a.createMatrix(this.parentProblem.distribution.rows-u,this.parentProblem.distribution.columns-F,0),w=v(this.parentProblem.attacker,e.ranges),p=v(this.parentProblem.defender,t.ranges);return new a.Problem(y,w,p);function v(s,d){for(var R=!0,P=0;P<d.length/2;++P)if(!isNaN(d[P*2])){R=!1;break}if(R)return s;for(var H=s.slice(),P=d.length/2-1;0<=P;--P)isNaN(d[P*2])||H.splice(d[P*2],d[P*2+1]-d[P*2]||1);return H}},a.EnsembleSplit.prototype._subproblemKey=function(e,t){return"a"+e.rangesKey()+"d"+t.rangesKey()},a.Victim=function(){this.ranges=[]},a.Victim.prototype.addRange=function(e,t){var u=this.ranges;if(!isNaN(e)&&e!==t){if(u.length){if(u[u.length-1]===e){u[u.length-1]=t===void 0?e+1:t;return}if(u[u.length-1]===void 0&&u[u.length-2]+1===e){t===void 0?u[u.length-1]=e+1:u[u.length-1]=t;return}}e+1===t?this.ranges.push(e,void 0):this.ranges.push(e,t)}},a.Victim.prototype.rangesLength=function(){for(var e=0,t=0;t<this.ranges.length/2;++t)e+=u(this.ranges,t);return e;function u(F,y){var w=y*2;return isNaN(F[w])?0:isNaN(F[w+1])?1:F[w+1]-F[w]}},a.Victim.prototype.dead=function(){return this._dead!==void 0?this._dead:this.rangesLength()},a.Victim.prototype.collapseRanges=function(e){var t=this.ranges;if(t.length&&(t[t.length-1]===e||t[t.length-1]===void 0&&t[t.length-2]+1===e)){var u;return u=new a.Victim,u.ranges=t.slice(0,t.length-2),u._dead=this.rangesLength(),u}return this},a.Victim.prototype.rangesKey=function(){for(var e=[],t=0;t<this.ranges.length/2;++t)e.push(this.ranges[t*2]+(this.ranges[t*2+1]===void 0?"":"-"+this.ranges[t*2+1]));return e.join(",")},a.Victim.Null=new a.Victim,a.binarySearch=function(e,t,u){for(var F=0,y=e.length-1;F<=y;){var w=y+F>>1,p=u(t,e[w]);if(p>0)F=w+1;else if(p<0)y=w-1;else return w}return-F-1}})(Z)}(oe)),oe}var se={},de;function Ee(){return de||(de=1,function(Z){(function(a){a.dieSides=10,a.BattleType={Space:"Space",Ground:"Ground"},a.BattleSide={attacker:"attacker",defender:"defender",opponent:function(y){return{attacker:"defender",defender:"attacker"}[y]}},a.SideUnits={attacker:"attackerUnits",defender:"defenderUnits"};var e={Flagship:"Flagship",WarSun:"WarSun",Dreadnought:"Dreadnought",Cruiser:"Cruiser",Carrier:"Carrier",Destroyer:"Destroyer",Fighter:"Fighter",Ground:"Ground",PDS:"PDS"};a.UnitType=e;var t={Flagship:"X",WarSun:"W",Dreadnought:"D",Cruiser:"C",Destroyer:"+",Carrier:"V",Fighter:"F",Ground:"G",PDS:"P"};a.Race={Arborec:"Arborec",Creuss:"Creuss",Hacan:"Hacan",JolNar:"JolNar",L1Z1X:"L1Z1X",Letnev:"Letnev",Mentak:"Mentak",Muaat:"Muaat",Naalu:"Naalu",Saar:"Saar",Sardakk:"Sardakk",Sol:"Sol",Virus:"Virus",Winnu:"Winnu",Xxcha:"Xxcha",Yin:"Yin",Yssaril:"Yssaril"},a.RacesDisplayNames={Arborec:"Arborec",Creuss:"Creuss",Hacan:"Hacan",JolNar:"Jol-Nar",L1Z1X:"L1Z1X",Letnev:"Letnev",Mentak:"Mentak",Muaat:"Muaat",Naalu:"Naalu",Virus:"Nekro Virus",Saar:"Saar",Sardakk:"Sardakk N'orr",Sol:"Sol",Winnu:"Winnu",Xxcha:"Xxcha",Yin:"Yin",Yssaril:"Yssaril"};function u(y,w,p){this.title=y,this.description=w,this.limitedTo=p}u.prototype.availableFor=function(y){return this.limitedTo===void 0||this.limitedTo===y},a.ActionCards={moraleBoost:new u("Morale Boost 1st round","+1 dice modifier to all units during the first battle round"),fireTeam:new u("Fire Team 1st round","Reroll dice after first round of invasion combat"),fighterPrototype:new u("Fighter Prototype","+2 dice modifier to Fighters during the first battle round"),bunker:new u("Bunker","-4 dice modifier to Bombardment rolls","defender"),experimentalBattlestation:new u("Experimental Battlestation","Additional unit with Space Cannon 5(x3)"),maneuveringJets:new u("Maneuvering Jets","Cancel 1 Space Cannon hit"),riskDirectHit:new u("Risk Direct Hit","Damage units vulnerable to Direct Hit before killing off fodder")},a.Technologies={antimassDeflectors:new u("Antimass Deflectors","-1 to opponents' Space Cannon rolls"),gravitonLaser:new u("Graviton Laser System","Space Cannon hits should be applied to non-fighters if possible"),plasmaScoring:new u("Plasma Scoring","One additional die for one unit during Space Cannon or Bombardment"),magenDefense:new u("Magen Defense Grid","Opponent doesn't throw dice for one round if you have Planetary Shield","defender"),x89Omega:new u("X-89 Bacterial Weapon Ω","Destroy all by bombardment if at least one destroyed","attacker"),magenDefenseOmega:new u("Magen Defense Grid Ω","1 hit at the start of ground combat when having structures","defender"),hasDock:new u("Has Dock","Defender has a dock for Magen Defence Grid Ω","defender"),duraniumArmor:new u("Duranium Armor","After each round repair 1 unit that wasn't damaged this round"),assaultCannon:new u("Assault Cannon","Opponent destroys 1 non-Fighter ship if you have at least 3 non-Fighters")},a.Agendas={publicizeSchematics:new u("Publicize Weapon Schematics","WarSuns don't sustain damage"),conventionsOfWar:new u("Conventions of War","No bombardment","defender"),prophecyOfIxth:new u("Prophecy of IXTH","+1 to Fighters rolls")},a.Promissory={letnevMunitionsFunding:new u("Munitions Reserves / War Funding 1st round","Reroll dice during first space combat round"),tekklarLegion:new u("Tekklar Legion","+1 in invasion combat. -1 to Sardakk if he's the opponent")},a.RaceSpecificTechnologies={Letnev:{nonEuclidean:new u("Non-Euclidean Shielding","Sustain Damage absorbs 2 hits"),l4Disruptors:new u("L4 Disruptors","During an Invasion units cannot use Space Cannon against you","attacker")},Sardakk:{valkyrieParticleWeave:new u("Valkyrie Particle Weave","If opponent produces at least one hit in Ground combat, you produce one additional hit")}},a.UnitInfo=function(){function y(w,p){this.type=w;var v=t[this.type];this.shortType=p.isDamageGhost?v.toLowerCase():v,this.battleValue=p.battleValue||NaN,this.battleDice=p.battleDice!==void 0?p.battleDice:1,this.bombardmentValue=p.bombardmentValue||NaN,this.bombardmentDice=p.bombardmentDice||0,this.spaceCannonValue=p.spaceCannonValue||NaN,this.spaceCannonDice=p.spaceCannonDice||0,this.barrageValue=p.barrageValue||NaN,this.barrageDice=p.barrageDice||0,this.sustainDamageHits=p.sustainDamageHits||0,this.isDamageGhost=p.isDamageGhost||!1,this.damageCorporeal=void 0,this.damaged=!1,this.damagedThisRound=!1,this.race=p.race,this.cost=p.cost}return y.prototype.clone=function(){return new y(this.type,this)},y.prototype.toDamageGhost=function(){var w=new y(this.type,{sustainDamageHits:this.sustainDamageHits,battleDice:0,isDamageGhost:!0});return w.damageCorporeal=this,this.damaged=!1,this.damagedThisRound=!1,w},y}(),a.ThrowType={Battle:"battle",Bombardment:"bombardment",SpaceCannon:"spaceCannon",Barrage:"barrage"},a.ThrowValues={battle:"battleValue",bombardment:"bombardmentValue",spaceCannon:"spaceCannonValue",barrage:"barrageValue"},a.ThrowDice={battle:"battleDice",bombardment:"bombardmentDice",spaceCannon:"spaceCannonDice",barrage:"barrageDice"},a.StandardUnits={WarSun:new a.UnitInfo(e.WarSun,{sustainDamageHits:1,battleValue:3,battleDice:3,bombardmentValue:3,bombardmentDice:3,cost:12}),Dreadnought:new a.UnitInfo(e.Dreadnought,{sustainDamageHits:1,battleValue:5,bombardmentValue:5,bombardmentDice:1,cost:4}),Cruiser:new a.UnitInfo(e.Cruiser,{battleValue:7,cost:2}),Carrier:new a.UnitInfo(e.Carrier,{battleValue:9,cost:3}),Destroyer:new a.UnitInfo(e.Destroyer,{battleValue:9,barrageValue:9,barrageDice:2,cost:1}),Fighter:new a.UnitInfo(e.Fighter,{battleValue:9,cost:.5}),PDS:new a.UnitInfo(e.PDS,{spaceCannonValue:6,spaceCannonDice:1}),Ground:new a.UnitInfo(e.Ground,{battleValue:8,cost:.5}),ExperimentalBattlestation:new a.UnitInfo("Bloodthirsty Space Dock",{spaceCannonValue:5,spaceCannonDice:3})},a.RaceSpecificUnits={Sardakk:{Flagship:new a.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:6,battleDice:2,race:a.Race.Sardakk,cost:8}),Dreadnought:new a.UnitInfo(e.Dreadnought,{sustainDamageHits:1,battleValue:5,bombardmentValue:4,bombardmentDice:2,cost:4})},JolNar:{Flagship:new a.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:6,battleDice:2,race:a.Race.JolNar,cost:8})},Winnu:{Flagship:new a.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:7,battleDice:void 0,race:a.Race.Winnu,cost:8})},Xxcha:{Flagship:new a.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:7,battleDice:2,spaceCannonValue:5,spaceCannonDice:3,race:a.Race.Xxcha,cost:8})},Yin:{Flagship:new a.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:9,battleDice:2,race:a.Race.Yin,cost:8})},Yssaril:{Flagship:new a.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,race:a.Race.Yssaril,cost:8})},Sol:{Flagship:new a.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,race:a.Race.Sol,cost:8}),Ground:new a.UnitInfo(e.Ground,{battleValue:7,cost:.5})},Creuss:{Flagship:new a.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:1,race:a.Race.Creuss,cost:8})},L1Z1X:{Flagship:new a.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,race:a.Race.L1Z1X,cost:8})},Mentak:{Flagship:new a.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:7,battleDice:2,race:a.Race.Mentak,cost:8})},Naalu:{Flagship:new a.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:9,battleDice:2,race:a.Race.Naalu,cost:8}),Fighter:new a.UnitInfo(e.Fighter,{battleValue:8,cost:.5})},Virus:{Flagship:new a.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:9,battleDice:2,race:a.Race.Virus,cost:8})},Arborec:{Flagship:new a.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:7,battleDice:2,race:a.Race.Arborec,cost:8})},Letnev:{Flagship:new a.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,bombardmentValue:5,bombardmentDice:3,race:a.Race.Letnev,cost:8})},Saar:{Flagship:new a.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,barrageValue:6,barrageDice:4,race:a.Race.Saar,cost:8})},Muaat:{Flagship:new a.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:5,battleDice:2,race:a.Race.Muaat,cost:8})},Hacan:{Flagship:new a.UnitInfo(e.Flagship,{sustainDamageHits:1,battleValue:7,battleDice:2,race:a.Race.Hacan,cost:8})}},a.StandardUpgrades={Dreadnought:new a.UnitInfo(e.Dreadnought,{sustainDamageHits:1,battleValue:5,bombardmentValue:5,bombardmentDice:1,cost:4}),Cruiser:new a.UnitInfo(e.Cruiser,{battleValue:6,cost:2}),Destroyer:new a.UnitInfo(e.Destroyer,{battleValue:8,barrageValue:6,barrageDice:3,cost:1}),Fighter:new a.UnitInfo(e.Fighter,{battleValue:8,cost:.5}),PDS:new a.UnitInfo(e.PDS,{spaceCannonValue:5,spaceCannonDice:1}),Ground:new a.UnitInfo(e.Ground,{battleValue:7,cost:.5})},a.RaceSpecificUpgrades={Sol:{Carrier:new a.UnitInfo(e.Carrier,{sustainDamageHits:1,battleValue:9,cost:3}),Ground:new a.UnitInfo(e.Ground,{battleValue:6,cost:.5})},L1Z1X:{Dreadnought:new a.UnitInfo(e.Dreadnought,{sustainDamageHits:1,battleValue:4,bombardmentValue:4,bombardmentDice:1,cost:4})},Naalu:{Fighter:new a.UnitInfo(e.Fighter,{battleValue:7,cost:.5})},Muaat:{WarSun:new a.UnitInfo(e.WarSun,{sustainDamageHits:1,battleValue:3,battleDice:3,bombardmentValue:3,bombardmentDice:3,cost:10})}},a.MergedUnits={},a.MergedUpgrades={};for(var F in a.Race)a.MergedUnits[F]=Object.assign({},a.StandardUnits,a.RaceSpecificUnits[F]),a.MergedUpgrades[F]=Object.assign({},a.StandardUpgrades,a.RaceSpecificUpgrades[F]);a.expandFleet=function(y,w){var p=y.options||{attacker:{},defender:{}},v=y.battleType,s=p[w],d=a.BattleSide.opponent(w),R=p[d],P=a.MergedUnits[s.race],H=a.MergedUpgrades[s.race],q=v===a.BattleType.Space&&R.race===a.Race.Mentak&&(y[a.SideUnits[d]][e.Flagship]||{count:0}).count!==0,E=[],L=y[a.SideUnits[w]];for(var z in e)for(var _=L[z]||{count:0},Q=0;Q<_.count;Q++){var Y=(_.upgraded?H:P)[z],J=Y.clone();E.push(J),Y.sustainDamageHits>0&&!q&&!(z===e.WarSun&&s.publicizeSchematics)&&(Q<_.count-(_.damaged||0)?E.push(J.toDamageGhost()):J.damaged=!0)}var K=O(),X=v===a.BattleType.Space&&s.race===a.Race.Virus&&(L[e.Flagship]||{count:0}).count!==0,m=v===a.BattleType.Ground&&s.race===a.Race.Naalu&&(L[e.Flagship]||{count:0}).count!==0,B=V(X),W={};W[e.Ground]=1,W[e.Fighter]=2;var x,M;return m?(M=(L[e.Fighter]||{}).upgraded&&!(L[e.Ground]||{}).upgraded&&E.find(function(r){return r.type===e.Ground}),x=$):(L[e.Dreadnought]||{}).upgraded?x=ee:x=N,E.sort(x),v===a.BattleType.Space&&s.experimentalBattlestation&&E.push(a.StandardUnits.ExperimentalBattlestation),E.comparer=x,E.filterForBattle=n,E;function O(){return[e.Flagship,e.WarSun,e.Dreadnought,e.Cruiser,e.Destroyer,e.Carrier,e.Fighter]}function V(r){var o=[],c=0;for(var i in e)o[i]=c++;if(r){var A=o[e.Ground];o[e.Ground]=o[e.Fighter],o[e.Fighter]=A}return o}function N(r,o){var c=B[r.type]-B[o.type],i=(r.isDamageGhost?1:0)-(o.isDamageGhost?1:0),A=(o.damaged?1:0)-(r.damaged?1:0);if(s.riskDirectHit){var h=i*1e3+c*10+A;return s.race!==a.Race.Letnev?h:r.type===e.Flagship&&r.isDamageGhost?o.type===e.Flagship&&o.isDamageGhost?0:1:o.type===e.Flagship&&o.isDamageGhost?-1:h}else return c*1e3+i*10+A}function ee(r,o){return s.riskDirectHit?N(r,o):r.type===e.Dreadnought&&r.isDamageGhost?o.type===e.Dreadnought&&o.isDamageGhost?0:1:o.type===e.Dreadnought&&o.isDamageGhost?-1:N(r,o)}function $(r,o){var c=W[r.type]-W[o.type];return M?r===M?-1:o===M?1:-c:c}function n(){var r=this.filter(function(o){return v===a.BattleType.Space?K.indexOf(o.type)>=0||X&&o.type===a.UnitType.Ground:o.type===e.Ground||m&&o.type===a.UnitType.Fighter});return r.comparer=this.comparer,r}},a.upgradeable=function(y,w){return!!(a.StandardUpgrades.hasOwnProperty(w)||a.RaceSpecificUpgrades[y]&&a.RaceSpecificUpgrades[y].hasOwnProperty(w))},a.damageable=function(y,w,p){return(p?a.MergedUpgrades:a.MergedUnits)[y][w].sustainDamageHits>0}})(Z)}(se)),se}(function(Z){(function(a){var e,t;typeof Be=="function"?(e=Ue(),t=Ee()):(e=window,t=window),a.calculator=function(){var u=_(),F=L();return{computeProbabilities:y};function y(n){var r=n.battleType,o=n.options||{attacker:{},defender:{}},c=t.expandFleet(n,t.BattleSide.attacker),i=t.expandFleet(n,t.BattleSide.defender),A=c.filterForBattle(),h=i.filterForBattle(),l=e.createMatrix(A.length+1,h.length+1,0);l[A.length][h.length]=1;var g=[new e.Problem(l,A,h)],b=F;if(o.attacker.race===t.Race.Mentak){b=F.slice();var f=b[1];if(b[1]=b[2],b[2]=f,b[1].name!=="Mentak racial"||b[2].name!=="Assault Cannon")throw new Error("unexpected pre-battle actions order")}b.forEach(function(k){k.appliesTo===r&&(g=k.execute(g,c,i,o))});for(var T=0;T<g.length;++T)g[T].attacker.length&&g[T].defender.length&&w(g[T],r,c,i,o);var C=new e.DistributionBase(-A.length,h.length),S=A.map(function(k){return[k.shortType]}),U=h.map(function(k){return[k.shortType]});return g.forEach(function(k){C[0]=C.at(0)+k.distribution[0][0];for(var D=1;D<k.distribution.rows;D++)C[-D]=C.at(-D)+k.distribution[D][0],S[D-1].indexOf(k.attacker[D-1].shortType)<0&&S[D-1].push(k.attacker[D-1].shortType);for(var G=1;G<k.distribution.columns;G++)C[G]=C.at(G)+k.distribution[0][G],U[G-1].indexOf(k.defender[G-1].shortType)<0&&U[G-1].push(k.defender[G-1].shortType)}),{distribution:C,attacker:S.map(function(k){return k.reduce(function(D,G){return D+G})}),defender:U.map(function(k){return k.reduce(function(D,G){return D+G})})}}function w(n,r,o,c,i){var A=z(r,i.attacker,i.defender,n.attacker,!0),h=z(r,i.defender,i.attacker,n.defender,!0),l=r===t.BattleType.Ground&&i.attacker.fireTeam||r===t.BattleType.Space&&i.attacker.letnevMunitionsFunding,g=r===t.BattleType.Ground&&i.defender.fireTeam||r===t.BattleType.Space&&i.defender.letnevMunitionsFunding,b=r===t.BattleType.Ground&&i.defender.magenDefense&&c.some(V(t.UnitType.PDS))&&!o.some(V(t.UnitType.WarSun)),f={valkyrieParticleWeave:r===t.BattleType.Ground,winnuFlagship:r===t.BattleType.Space};if(r===t.BattleType.Ground&&i.defender.magenDefenseOmega&&(i.defender.hasDock||c.some(V(t.UnitType.PDS)))){var T=Y([1],n.attacker.length+1),C=Y([0,1],n.defender.length);C.unshift([1]),E(n,T,C,i)}if(A!==void 0||h!==void 0||b||l||g){var S;b?S=function(){return Y([1],n.attacker.length+1)}:S=function(){return v(n.attacker,t.ThrowType.Battle,A,l)};var U=function(){return v(n.defender,t.ThrowType.Battle,h,g)};if(i.attacker.race===t.Race.L1Z1X&&r===t.BattleType.Ground){var k=n.distribution[0];n.distribution[0]=new Array(n.distribution.columns),n.distribution[0].fill(0),E(n,S,U,i,f),F.find(function(G){return G.name==="Bombardment"}).execute([n],o,c,i);for(var D=0;D<n.distribution.columns;++D)n.distribution[0][D]+=k[D]}else E(n,S,U,i,f);r===t.BattleType.Space&&O(n,i)}if(b&&(A!==void 0||l)){var S=function(){return v(n.attacker,t.ThrowType.Battle,A,l)},U=function(){return v(n.defender,t.ThrowType.Battle,z(r,i.defender,i.attacker,n.defender,!1))};E(n,S,U,i,f)}p(n,r,o,c,i)}function p(n,r,o,c,i){var A=n.distribution,h=v(n.attacker,t.ThrowType.Battle,z(r,i.attacker,i.defender,n.attacker,!1)),l=v(n.defender,t.ThrowType.Battle,z(r,i.defender,i.attacker,n.defender,!1));if(i.attacker.race===t.Race.L1Z1X&&r===t.BattleType.Ground){var g=J(o,c,i);g.length===1&&(g=void 0)}else var g=void 0;for(var b=r===t.BattleType.Space&&(i.attacker.race===t.Race.Winnu&&n.attacker.some(V(t.UnitType.Flagship))||i.defender.race===t.Race.Winnu&&n.defender.some(V(t.UnitType.Flagship))),f=i.attacker.race===t.Race.Yin?$(n.attacker,V(t.UnitType.Flagship))+1:0,T=i.defender.race===t.Race.Yin?$(n.defender,V(t.UnitType.Flagship))+1:0,C=A.rows-1;0<C;C--)for(var S=A.columns-1;0<S;S--){b&&(i.attacker.race===t.Race.Winnu&&M(n.attacker,n.defender,S)&&(h=v(n.attacker,t.ThrowType.Battle,z(r,i.attacker,i.defender,n.attacker,!1))),i.defender.race===t.Race.Winnu&&M(n.defender,n.attacker,C)&&(l=v(n.defender,t.ThrowType.Battle,z(r,i.defender,i.attacker,n.defender,!1))));var U=X(h[C],n.defender,S-1,i.defender),k=X(l[S],n.attacker,C-1,i.attacker),D=P(U,k,S+1,C+1);r===t.BattleType.Ground&&(D=m(D,i,S+1,C+1)),g&&(D=q(D,g,S+1,C+1));var G;if(A[C][S]!==0){G=A[C][S]/(1-D.at(0,0));for(var I=0;I<D.rows;I++)for(var j=0;j<D.columns&&j<=C;j++)if(!(I===0&&j===0)){var te=C-j,ae=S-I;(te<f||ae<T)&&(te=ae=0),A[te][ae]+=D.at(I,j)*G}A[C][S]=0}}}function v(n,r,o,c){o=o||0;for(var i=[[1]],A=1;A<=n.length;++A){var h=n[A-1],l=d(h,r,o,c);i.push(R(l,i[A-1]))}return i}function s(n,r,o,c){for(var i=[[1]],A=[[1]],h=0;h<n.length;h++){var l=n[h];if(o(l)){var g=d(l,r,c);A=R(A,g)}i.push(A)}return i}function d(n,r,o,c){var i=n[t.ThrowValues[r]],A=n[t.ThrowDice[r]];if(A===0)return[1];o=o||0;var h=typeof o=="function"?o:function(D){return o},l=[],g=Math.max(Math.min((i-1-h(n))/t.dieSides,1),0);if(n.type===t.UnitType.Flagship&&n.race===t.Race.JolNar&&r===t.ThrowType.Battle){var b=1-g,f=Math.min(.8,g),T=Math.max(0,b-.2),C=Math.max(0,.2-b),S=Math.min(.2,b);l[0]=f*(c?f:1),l[1]=T+(c?g*T:0),l[2]=C+(c?g*C:0),l[3]=S+(c?g*S:0)}else l[0]=g,c&&(l[0]=l[0]*l[0]),l[1]=1-l[0];for(var U=l,k=1;k<A;k++)U=R(U,l);return U}function R(n,r){for(var o=[],c=0;c<n.length+r.length-1;++c)o[c]=0;for(var i=0;i<n.length;++i)for(var A=0;A<r.length;++A)o[i+A]+=n[i]*r[A];return o}function P(n,r,o,c){return{rows:Math.min(o,n.length),columns:Math.min(c,r.length),at:function(i,A){var h=n[i];if(i===o-1)for(;++i<n.length;)h+=n[i];var l=r[A];if(A===c-1)for(;++A<r.length;)l+=r[A];return h*l}}}function H(n,r){return{rows:n.length,columns:r.length,at:function(o,c){return n[o]*r[c]}}}function q(n,r,o,c){return!r||r.length===1?n:B({rows:n.rows+r.length-1,columns:n.columns,at:function(i,A){for(var h=0,l=0;l<=i&&l<r.length;++l)if(i-l<n.rows){var g=r[l];h+=g*n.at(i-l,A)}return h}},o,c)}function E(n,r,o,c,i){var A=n.distribution;i&&!(i.winnuFlagship&&c.attacker.race===t.Race.Winnu)&&(r=r()),i&&!(i.winnuFlagship&&c.defender.race===t.Race.Winnu)&&(o=o()),i=i||{};for(var h=0;h<A.rows;h++)for(var l=0;l<A.columns;l++)if(A[h][l]!==0){var g=r,b=o;i.winnuFlagship&&(c.attacker.race===t.Race.Winnu&&(M(n.attacker,n.defender,l),g=r()),c.defender.race===t.Race.Winnu&&(M(n.defender,n.attacker,h),b=o()));var f=X(g[h],n.defender,l-1,c.defender),T=X(b[l],n.attacker,h-1,c.attacker),C=P(f,T,l+1,h+1);i.valkyrieParticleWeave&&(C=m(C,c,l+1,h+1));for(var S=0;S<C.rows;S++)for(var U=0;U<C.columns;U++)S===0&&U===0||(A[h-U][l-S]+=C.at(S,U)*A[h][l]);A[h][l]*=C.at(0,0)}}function L(){return[{name:"Space Cannon -> Ships",appliesTo:t.BattleType.Space,execute:function(n,r,o,c){var i=[],A=c.attacker.race===t.Race.Virus&&r.some(V(t.UnitType.Flagship))&&r.some(V(t.UnitType.Ground)),h=c.defender.race===t.Race.Virus&&o.some(V(t.UnitType.Flagship))&&o.some(V(t.UnitType.Ground));return n.forEach(function(f){var T=l(r,c.attacker,c.defender),C=l(o,c.defender,c.attacker);if(c.attacker.gravitonLaser||c.defender.gravitonLaser||A||h){for(var S=new e.EnsembleSplit(f),U=f.distribution,k=0;k<U.rows;k++)for(var D=0;D<U.columns;D++)if(U[k][D]!==0)for(var G=H(T,C),I=0;I<G.rows;I++)for(var j=0;j<G.columns;j++){var te=b(f.attacker,k,j,c.attacker,c.defender),ae=b(f.defender,D,I,c.defender,c.attacker);S.increment(te,ae,k,D,G.at(I,j)*U[k][D])}var ne=S.getSubproblems();ne.forEach(function(Ie){O(Ie,c,f)}),i.push.apply(i,ne)}else{var re=Y(T,f.attacker.length+1),He=Y(C,f.defender.length+1);E(f,re,He,c),O(f,c),i.push(f)}}),i;function l(f,T,C){var S=C.antimassDeflectors?-1:0,U=f.filter(g),k;return T.plasmaScoring?k=K(U,t.ThrowType.SpaceCannon,S):k=Q(U,t.ThrowType.SpaceCannon,S),x(k,C.maneuveringJets?1:0)}function g(f){return f.spaceCannonDice!==0}function b(f,T,C,S,U){if(C===0||T===0)return e.Victim.Null;if(!U.gravitonLaser&&!S.nonEuclidean&&!f.some(V(t.UnitType.Ground))){var j=new e.Victim;return j._dead=Math.min(C,f.map(te).reduce(ae)),j}for(var k=[],I=null,D=T-1;0<=D&&0<C;){var G=f[D];G.type===t.UnitType.Fighter&&U.gravitonLaser||G.type===t.UnitType.Ground?I=null:(I===null&&(I=[D+1,D+1],k.push(I)),I[0]--,C-=te(G)),D--}var I=null;if(U.gravitonLaser)for(var D=T-1;0<=D&&0<C;--D)f[D].type===t.UnitType.Fighter&&(I===null&&(I=[D+1,D+1],k.push(I)),I[0]--,C-=te(f[D]));k.sort(function(ne,re){return ne[0]-re[0]});var j=new e.Victim;return k.forEach(function(ne){j.addRange(ne[0],ne[1])}),j;function te(ne){return ne.isDamageGhost&&S.nonEuclidean?2:1}function ae(ne,re){return ne+re}}}},{name:"Assault Cannon",appliesTo:t.BattleType.Space,execute:function(n,r,o,c){if(!c.attacker.assaultCannon&&!c.defender.assaultCannon)return n;var i=[];return n.forEach(function(l){for(var g=new e.EnsembleSplit(l),b=A(l.attacker,c.attacker.assaultCannon),f=A(l.defender,c.defender.assaultCannon),T=h(l.attacker,f<l.defender.length,!0),C=h(l.defender,b<l.attacker.length,!1),S=l.distribution,U=0;U<S.rows;U++)for(var k=0;k<S.columns;k++)if(S[U][k]!==0){var D=f<k?T[U]:e.Victim.Null,G=b<U?C[k]:e.Victim.Null;g.increment(D,G,U,k,S[U][k])}var I=g.getSubproblems();I.forEach(function(j){O(j,c,l)}),i.push.apply(i,I)}),i;function A(l,g){for(var b=0,f=0;f<l.length;f++)if(N(l[f])&&b++,b>=3&&g)return f;return f}function h(l,g,b){var f=new Array(l.length+1);if(!g)f.fill(e.Victim.Null);else{f[0]=e.Victim.Null;for(var T=void 0,C=void 0,S=void 0,U=0;U<l.length;++U){(b?N:ee)(l[U])?(T=l[U],C=U,S=void 0):T&&l[U].damageCorporeal===T&&(S=U);var k=new e.Victim;C!==void 0&&(k.addRange(C,void 0),S!==void 0&&k.addRange(S,void 0)),f[U+1]=k}}return f}}},{name:"Mentak racial",appliesTo:t.BattleType.Space,execute:function(n,r,o,c){return n.forEach(function(i){if(c.attacker.race!==t.Race.Mentak&&c.defender.race!==t.Race.Mentak)return;function A(g,b){var f=0,T=b.moraleBoost?1:0;return s(g,t.ThrowType.Battle,function(C){return 2<=f?!1:C.type===t.UnitType.Cruiser||C.type===t.UnitType.Destroyer?(f++,!0):!1},T)}var h,l;c.attacker.race===t.Race.Mentak?h=A(i.attacker,c.attacker):h=Y([1],i.attacker.length+1),c.defender.race===t.Race.Mentak?l=A(i.defender,c.defender):l=Y([1],i.defender.length+1),E(i,h,l,c),O(i,c)}),n}},{name:"Anti-Fighter Barrage",appliesTo:t.BattleType.Space,execute:function(n,r,o,c){var i=[];return n.forEach(function(g){for(var b=new e.EnsembleSplit(g),f=s(g.attacker,t.ThrowType.Barrage,A),T=s(g.defender,t.ThrowType.Barrage,A),C=h(g.attacker,V(t.UnitType.Fighter)),S=h(g.defender,V(t.UnitType.Fighter)),U=g.distribution,k=0;k<U.rows;k++)for(var D=0;D<U.columns;D++)if(U[k][D]!==0)for(var G=H(f[k],T[D]),I=0;I<G.rows;I++)for(var j=0;j<G.columns;j++){var te=l(C,k,j),ae=l(S,D,I);b.increment(te,ae,k,D,G.at(I,j)*U[k][D])}i.push.apply(i,b.getSubproblems())}),i;function A(g){return g.barrageDice!==0}function h(g,b){for(var f=void 0,T=0;T<g.length;T++)if(f===void 0)b(g[T])&&(f=T);else if(!b(g[T]))break;return f===void 0&&(f=T),{from:f,to:T}}function l(g,b,f){if(f===0||b<g.from)return e.Victim.Null;var T=new e.Victim;return T.addRange(g.from,Math.min(b,g.from+f,g.to)),T}}},{name:"Bombardment",appliesTo:t.BattleType.Ground,execute:function(n,r,o,c){return n.forEach(function(i){var A=J(r,o,c),h=Y(A,i.attacker.length+1),l=Y([1],i.defender.length+1);E(i,h,l,c)}),n}},{name:"Space Cannon -> Ground Forces",appliesTo:t.BattleType.Ground,execute:function(n,r,o,c){return n.forEach(function(i){if(!c.attacker.l4Disruptors){var A=Y([1],i.attacker.length+1),h=c.attacker.antimassDeflectors?-1:0,l=o.filter(V(t.UnitType.PDS)),g;c.defender.plasmaScoring?g=K(l,t.ThrowType.SpaceCannon,h):g=Q(l,t.ThrowType.SpaceCannon,h);var b=Y(x(g,c.attacker.maneuveringJets?1:0),i.defender.length+1);E(i,A,b,c)}}),n}}]}function z(n,r,o,c,i){for(var A=void 0,h=0;h<u.length;h++)if(!(!i&&u[h].firstRoundOnly)){var l=u[h].apply(n,r,o,c);if(l&&!A){A=l;continue}l&&(A=g(A,l))}return A;function g(b,f){var T=typeof b=="function",C=typeof f=="function";return T||C?function(S){return(T?b(S):b)+(C?f(S):f)}:b+f}}function _(){return[{name:"moraleBoost",firstRoundOnly:!0,apply:function(n,r){return r.moraleBoost?1:0}},{name:"fighterPrototype",firstRoundOnly:!0,apply:function(n,r){return n===t.BattleType.Space&&r.fighterPrototype?function(o){return o.type===t.UnitType.Fighter?2:0}:0}},{name:"Sardakk",firstRoundOnly:!1,apply:function(n,r){return r.race===t.Race.Sardakk?1:0}},{name:"Sardakk Flagship",firstRoundOnly:!1,apply:function(n,r,o,c){return r.race===t.Race.Sardakk&&n===t.BattleType.Space&&c.some(V(t.UnitType.Flagship))?function(i){return i.type!==t.UnitType.Flagship?1:0}:0}},{name:"JolNar",firstRoundOnly:!1,apply:function(n,r){return r.race===t.Race.JolNar?-1:0}},{name:"prophecyOfIxth",firstRoundOnly:!1,apply:function(n,r){return r.prophecyOfIxth?function(o){return o.type===t.UnitType.Fighter?1:0}:0}},{name:"tekklarLegion",firstRoundOnly:!1,apply:function(n,r){return n===t.BattleType.Ground&&r.tekklarLegion&&r.race!==t.Race.Sardakk?1:0}},{name:"tekklarLegion of the opponent",firstRoundOnly:!1,apply:function(n,r,o){return n===t.BattleType.Ground&&o.tekklarLegion&&r.race===t.Race.Sardakk?-1:0}}]}function Q(n,r,o,c){return v(n,r,o,c).pop()}function Y(n,r){var o=new Array(r);return o.fill(n),o}function J(n,r,o){var c=!o.defender.conventionsOfWar&&(!r.some(V(t.UnitType.PDS))||n.some(V(t.UnitType.WarSun))||o.attacker.race===t.Race.Letnev&&n.some(V(t.UnitType.Flagship)));if(!c)return[1];var i=o.defender.bunker?-4:0,A=n.filter(g),h=o.attacker.plasmaScoring?K(A,t.ThrowType.Bombardment,i):Q(A,t.ThrowType.Bombardment,i);if(o.attacker.x89Omega){var l=new Array(r.length+1);l.fill(0),l[0]=h[0],l[l.length-1]=h.reduce(function(b,f){return b+f})-h[0],h=l}return h;function g(b){return b.bombardmentDice!==0}}function K(n,r,o){var c=v(n,r,o).pop(),i=W(n,t.ThrowValues[r]);if(i){var A=i.clone();A[t.ThrowDice[r]]=1;var h=d(A,r,o);c=R(h,c)}return c}function X(n,r,o,c){if(c.nonEuclidean&&n.length>2){for(var i=n.slice(),A=1;A<i.length&&0<o;A++)r[o].isDamageGhost&&x(i,1,A),o--;return i}else return n}function m(n,r,o,c){return!r.attacker.valkyrieParticleWeave&&!r.defender.valkyrieParticleWeave?n:B({rows:n.rows+(r.attacker.valkyrieParticleWeave?1:0),columns:n.columns+(r.defender.valkyrieParticleWeave?1:0),at:function(i,A){if(i===0&&A===0)return n.at(0,0);if(i===0)return r.attacker.valkyrieParticleWeave||A===n.columns?0:n.at(i,A);if(A===0)return r.defender.valkyrieParticleWeave||i===n.rows?0:n.at(i,A);if(i===1&&A===1&&r.attacker.valkyrieParticleWeave&&r.defender.valkyrieParticleWeave)return(n.columns===1?0:n.at(0,1))+(n.rows===1?0:n.at(1,0));if(r.attacker.valkyrieParticleWeave&&r.defender.valkyrieParticleWeave&&(i===n.rows&&A===1||i===1&&A===n.columns))return 0;var h=r.attacker.valkyrieParticleWeave&&!(r.defender.valkyrieParticleWeave&&A===1)?1:0,l=r.defender.valkyrieParticleWeave&&!(r.attacker.valkyrieParticleWeave&&i===1)?1:0;return n.at(i-h,A-l)}},o,c)}function B(n,r,o){return n.rows<=r&&n.columns<=o?n:{rows:Math.min(n.rows,r),columns:Math.min(n.columns,o),at:function(c,i){for(var A=0,h=c===this.rows-1?n.rows:c+1,l=i===this.columns-1?n.columns:i+1,g=c;g<h;++g)for(var b=i;b<l;++b)A+=n.at(g,b);return A}}}function W(n,r){for(var o=null,c=1/0,i=0;i<n.length;i++)n[i][r]<c&&(o=n[i],c=n[i][r]);return o}function x(n,r,o){o=o||0;for(var c=0;c<r;++c){n.length>o+1&&(n[o]+=n[o+1]);for(var i=o+2;i<n.length;i++)n[i-1]=n[i];n.length>o+1&&n.pop()}return n}function M(n,r,o){var c=null;return n.filter(V(t.UnitType.Flagship)).forEach(function(i){i.battleDice=c===null?c=r.slice(0,o).filter(ee).length:c}),c!==null}function O(n,r,o){if(r.attacker.race===t.Race.Yin||r.defender.race===t.Race.Yin){var c=A(n,r,o,t.BattleSide.attacker),i=A(n,r,o,t.BattleSide.defender);h(n.distribution,c,n.distribution.columns),h(n.distribution,n.distribution.rows,i)}function A(l,g,b,f){var T=$(l[f],V(t.UnitType.Flagship));return g[f].race===t.Race.Yin?b&&l[f].length<b[f].length&&T<$(b[f],V(t.UnitType.Flagship))?f===t.BattleSide.attacker?l.distribution.rows:l.distribution.columns:T+1:0}function h(l,g,b){for(var f=0;f<g;++f)for(var T=0;T<b;++T)f===0&&T===0||(l[0][0]+=l[f][T],l[f][T]=0)}}function V(n){return function(r){return r.type===n&&!r.isDamageGhost}}function N(n){return n.type!==t.UnitType.Fighter&&!n.isDamageGhost}function ee(n){return n.type!==t.UnitType.Fighter&&n.type!==t.UnitType.Ground&&!n.isDamageGhost}function $(n,r){for(var o=n.length-1;0<=o;--o)if(r(n[o]))return o;return-1}}()})(Z)})(ue);const fe={"The Arborec":"Arborec","The Barony of Letnev":"Letnev","The Clan of Saar":"Saar","The Embers of Muaat":"Muaat","The Emirates of Hacan":"Hacan","The Federation of Sol":"Sol","The Ghosts of Creuss":"Creuss","The L1Z1X Mindnet":"L1Z1X","The Mentak Coalition":"Mentak","The Naalu Collective":"Naalu","The Nekro Virus":"Virus","The Sardakk N'orr":"Sardakk","The Universities of Jol-Nar":"JolNar","The Winnu":"Winnu","The Xxcha Kingdom":"Xxcha","The Yin Brotherhood":"Yin","The Yssaril Tribes":"Yssaril"},he={Flagship:"Flagship","War Sun":"WarSun",Dreadnought:"Dreadnought",Carrier:"Carrier",Cruiser:"Cruiser",Destroyer:"Destroyer",Fighter:"Fighter",PDS:"PDS",Infantry:"Ground","Space Dock":"PDS"};async function xe(){const{allBoardSystems:Z}=await import("https://www.twilightwars.com/js/board-creation.js"),{getPlayers:a}=await import("https://www.twilightwars.com/js/api.js"),{getActiveSystem:e}=await import("https://www.twilightwars.com/js/utils/extras.js"),t=await a(),u=e(Z).userData,F=[];if(!u)return"No defending units";console.log(u);for(const E of Z)for(const L of E.unitsToMove??[])F.push(L);if(F.length===0){const E=u.units.filter(L=>L.color!==u.units[0].color);if(E.length>0)F.push(...E);else return"No attacking units"}const y={};for(const E of F){const L=he[E.name];y[L]||(y[L]={count:0}),y[L].count++}const w=t.find(E=>E.color===F[0].color),p=t.find(E=>E.color===u.units[0].color);console.log(w,p);const v={};for(const E of u.units){const L=he[E.name];v[L]||(v[L]={count:0}),v[L].count++}const s=fe[w.faction],d=fe[p.faction],R={attackerUnits:y,defenderUnits:v,battleType:"Space",options:{attacker:{race:s,riskDirectHit:!0},defender:{race:d,riskDirectHit:!0}}};console.log(R);var P=ue.calculator.computeProbabilities(R);console.log(P);let H=0,q=0;for(const E in P.distribution)Number.isInteger(parseInt(E))&&(console.log(P.distribution[E]),E.includes("-")?H+=P.distribution[E]:q+=P.distribution[E]);return console.log(H,q),`${H.toFixed(2)} - ${q.toFixed(2)}`}let ge=document.createElement("template");ge.innerHTML=`
    <style>
        #calculateButton {
            position: absolute;
            top: 15px;
            right: 658px;
            z-index: 1000;
        }
    </style>
    <button id="calculateButton">Calculate Odds</button>
`;class Ve extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(ge.content.cloneNode(!0)),this.calculateButton=this.shadowRoot.getElementById("calculateButton")}async connectedCallback(){this.calculateButton.addEventListener("click",async()=>{const a=await xe();this.calculateButton.innerText=a})}}window.customElements.define("ti-odds-component",Ve);let pe=document.createElement("template");pe.innerHTML=`
    <style>
        table {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }

        #units {
            position: relative;
            background-color: rgba(0, 0, 0, 0.8);
            color: white;
            border-radius: 10px;
            padding: 10px;
            display: none; /* Hide the table by default */
        }
        #units td {
            text-align: center;
            min-width: 60px;
            font-size: 16px;
            padding: 5px;
        }
        #showButton {
            position: absolute;
            top: 15px;
            right: 318px;
            z-index: 1000;
        }
        #showButton:hover + #units {
            display: inline-block; /* Show the table when the button is hovered */
        }
    </style>
    <button id="showButton">Show Units</button>
    <table id="units">
    </table>
`;const me={Flagship:8,"War Sun":12,Dreadnought:4,Carrier:3,Cruiser:2,Destroyer:1,Fighter:.5,PDS:2,Infantry:.5,"Space Dock":0};class Re extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(pe.content.cloneNode(!0)),this.unitsContainer=this.shadowRoot.getElementById("units")}async connectedCallback(){const a=await import("https://www.twilightwars.com/js/api.js"),e=await a.getPlayers(),t=await a.getBoardSystems(),u=document.createElement("tr");this.unitsContainer.appendChild(u);const F=document.createElement("td");u.appendChild(F);const y={Flagship:0,"War Sun":0,Dreadnought:0,Carrier:0,Cruiser:0,Destroyer:0,Fighter:0,PDS:0,Infantry:0,"Space Dock":0},w=e.reduce((s,d)=>(s[d.color]={...y},s),{}),p=e.reduce((s,d)=>(s[d.color]={...y},s),{});t.forEach(s=>{s.units.forEach(d=>{w[d.color][d.name]++,p[d.color][d.name]+=me[d.name]}),s.planets.forEach(d=>{d.units.forEach(R=>{w[R.color][R.name]++,p[R.color][R.name]+=me[R.name]})})}),Object.keys(y).forEach(s=>{const d=document.createElement("td");d.textContent=s,u.appendChild(d)});const v=["Unit Value","Trade Goods","Influence","Resources","Technology","Command Counter","Score"];for(const s of v){const d=document.createElement("td");d.textContent=s,u.appendChild(d)}e.forEach(s=>{const d=document.createElement("tr");this.unitsContainer.appendChild(d);const R=document.createElement("td");R.textContent=s.faction,d.appendChild(R),Object.values(w[s.color]).forEach(m=>{const B=document.createElement("td");B.style.color=s.color,B.style.fontWeight="bold",B.style.fontSize="20px",B.textContent=m>0?m.toString():"",d.appendChild(B)});const P=document.createElement("td");P.style.color=s.color,P.style.fontWeight="bold",P.style.fontSize="20px";const H=Object.values(p[s.color]).reduce((m,B)=>m+B,0);P.textContent=H.toString(),d.appendChild(P);const q=document.createElement("td");q.style.color=s.color,q.style.fontWeight="bold",q.style.fontSize="20px",q.textContent=s.tradeGoods.toString(),d.appendChild(q);const E=document.createElement("td");E.style.color=s.color,E.style.fontWeight="bold",E.style.fontSize="20px";const L=Object.values(s.planetCards.map(m=>m.exhausted?0:m.influence)).reduce((m,B)=>m+B,0);E.textContent=L.toString(),d.appendChild(E);const z=document.createElement("td");z.style.color=s.color,z.style.fontWeight="bold",z.style.fontSize="20px";const _=Object.values(s.planetCards.map(m=>m.exhausted?0:m.resources)).reduce((m,B)=>m+B,0);z.textContent=_.toString(),d.appendChild(z);const Q=(s.fleetPool+s.strategyPool+s.tacticPool)*2,Y=s.technology.length*6,J=document.createElement("td");J.style.color=s.color,J.style.fontWeight="bold",J.style.fontSize="20px",J.textContent=Y.toString(),d.appendChild(J);const K=document.createElement("td");K.style.color=s.color,K.style.fontWeight="bold",K.style.fontSize="20px",K.textContent=Q.toString(),d.appendChild(K);const X=document.createElement("td");X.style.color=s.color,X.style.fontWeight="bold",X.style.fontSize="20px",X.textContent=(_+L*2/3+H+Y+Q+s.tradeGoods).toFixed(0),d.appendChild(X)})}}window.customElements.define("ti-units-component",Re);let ve=document.createElement("template");ve.innerHTML=`
    <style>
        #votes {
            position: fixed;
            top: 50%;
            left: 50%;
            background-color: rgba(0, 0, 0, 0.8);
            color: white;
            border-radius: 10px;
            transform: translate(-50%, -50%);
            display: none; /* Hide the table by default */

        }
        #showButton {
            position: absolute;
            top: 15px;
            right: 408px;
            z-index: 1000;
        }
        #showButton:hover + #votes {
            display: block; /* Show the table when the button is hovered */
        }

        .pie {
            width: 400px;
            height: 400px;
            border-radius: 50%
          }
    </style>
    <button id="showButton">Show Votes</button>
    <div id="votes">
          <div class="pie" id="pie1"></div>
    </div>
    <div id="outcomes">
    </div>
  `;const Pe={red:"#500000",green:"#005000",blue:"#000050",yellow:"#505000",purple:"#500050",orange:"#504000"};class We extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(ve.content.cloneNode(!0)),this.votesContainer=this.shadowRoot.getElementById("votes")}async connectedCallback(){const a=await import("https://www.twilightwars.com/js/api.js"),e=await a.getPlayers(),t=await a.getGame();globalThis.players=e,globalThis.game=t;const u=e.reduce((p,v)=>{if(v.faction==="The Nekro Virus")return p;let s=v.planetCards.reduce((R,P)=>R+P.influence,0),d=v.planetCards.reduce((R,P)=>R+(P.exhausted?P.influence:0),0);return t.phase==="voting"?(p[Pe[v.color]]=d,p[v.color]=s-d):p[v.color]=s,p},{});for(const p of e)p.vote&&!p.vote.abstain&&(u[p.color]=u[p.color]-p.vote.count);const F=Object.values(u).reduce((p,v)=>p+v,0);let y=0;const w=`conic-gradient(${Object.entries(u).map(([p,v],s)=>{const d=`${p} ${(100*y/F).toFixed(2)}%, ${p} ${(100*(y+v)/F).toFixed(2)}%`;return y+=v,d}).join(",")})`;this.votesContainer.getElementsByClassName("pie")[0].style.backgroundImage=w}}window.customElements.define("ti-votes-component",We);let ye=document.createElement("template");ye.innerHTML=`
    <style>
        table {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }
        #objectives {
            position: relative;
            background-color: rgba(0, 0, 0, 0.8);
            color: white;
            border-radius: 10px;
            padding: 10px;
            display: none; /* Hide the table by default */
        }
        #objectives td {
            text-align: center;
            min-width: 60px;
            font-size: 16px;
            padding: 5px;
        }
        #showButton {
            position: absolute;
            top: 15px;
            right: 518px;
            z-index: 1000;
        }
        #showButton:hover + #objectives {
            display: inline-block; /* Show the table when the button is hovered */
        }
    </style>
    <button id="showButton">Show Objectives</button>
    <table id="objectives">
    </table>
`;class Me extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}).appendChild(ye.content.cloneNode(!0)),this.objectivesContainer=this.shadowRoot.getElementById("objectives")}async connectedCallback(){const a=await import("https://www.twilightwars.com/js/api.js"),e=await a.getPlayers(),t=await a.getGame(),u=document.createElement("tr");this.objectivesContainer.appendChild(u);const F=document.createElement("td");u.appendChild(F),e.forEach(y=>{const w=document.createElement("td");w.textContent=y.faction,u.appendChild(w)}),t.publicObjectives.forEach(y=>{const w=document.createElement("tr");this.objectivesContainer.appendChild(w);const p=document.createElement("td");p.textContent=y.name,w.appendChild(p),e.forEach(v=>{const s=document.createElement("td");s.style.color=v.color,s.style.fontWeight="bold",s.style.fontSize="20px",s.textContent=y.scores.find(d=>d.playerId===v._id)?"✔":"",w.appendChild(s)})})}}window.customElements.define("ti-objectives-component",Me);async function Ge(){console.log("running main"),await Te(),document.body.appendChild(document.createElement("ti-cards-component")),document.body.appendChild(document.createElement("ti-units-component")),document.body.appendChild(document.createElement("ti-votes-component")),document.body.appendChild(document.createElement("ti-objectives-component")),document.body.appendChild(document.createElement("ti-odds-component"))}Ge()})();
